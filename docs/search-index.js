crystal_doc_search_index_callback({"repository_name":"github.com/watzon/cadmium","body":"![Logo](img/cadmium.png)\n\n[![Travis](https://img.shields.io/travis/watzon/cadmium.svg)](https://travis-ci.org/watzon/cadmium) ![license](https://img.shields.io/github/license/watzon/cadmium.svg)\n\nCadmium is a Natrual Language Processing (NLP) library for Crystal. Included are classes and modules for tokenizing, inflecting, stemming, and creating n-grams with much more to come.\n\nIt's still in early development, but tests are being written as I go so hopefully it will be somewhat stable.\n\nThis library is heavily based on the [natural](https://github.com/NaturalNode/natural) library for node.js, and as such you can expect the API's to be very similar. As a point of fact, most of the specs for Cadmium were copied directly from natural and lightly modified.\n\nAny utilities that can be internationalized will be eventually. For now English is the primary concern.\n\nFor full API documentation check out [the docs](https://watzon.github.io/cadmium/).\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Tokenizers](#tokenizers)\n- [String Distance](#string-distance)\n- [Stemmers](#stemmers)\n- [Phonetics](#phonetics)\n- [Inflectors](#inflectors)\n- [N-Grams](#n-grams)\n- [tf-idf](#tf-idf)\n- [Transliterator](#transliterator)\n- [Sentiment Analysis](#sentiment-analysis)\n- [Tries](#tries)\n- [EdgeWeightedDigraph](#edge-weighted-digraph)\n- [Readability](#readability)\n- [WordNet](#wordnet)\n- [Roadmap](#roadmap)\n- [Contributing](#contributing)\n- [Contributors](#contributors)\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  cadmium:\n    github: watzon/cadmium\n    branch: master\n```\n\n## Usage\n\nRequire the cadmium library in your project\n\n```crystal\nrequire \"cadmium\"\n```\n\n### Tokenizers\n\nCadmium includes several different tokenizers, each of which is useful for different applications.\n\n#### Aggressive Tokenizer\n\nThe aggressive tokenizer currently has localization available for English (:en / nil), Spanish (:es), Persian (:fa), French (:fr), Indonesian (:id), Dutch (:nl), Norwegian (:no), Polish (:pl), Portuguese (:pt), Russian (:ru), and Swedish (:sv). If no language is included it will default to English.\n\nUse it like so:\n\n```crystal\ntokenizer = Cadmium::Tokenizer::AggressiveTokenizer.new(lang: :es)\ntokenizer.tokenize(\"hola yo me llamo eduardo y esudié ingeniería\")\n# => [\"hola\", \"yo\", \"me\", \"llamo\", \"eduardo\", \"y\", \"esudié\", \"ingeniería\"]\n``` \n\n#### Case Tokenizer\n\nThe case tokenizer doesn't rely on Regex and as such should be pretty fast. It should also work on an international basis fairly easily.\n\n```crystal\ntokenizer = Cadmium::Tokenizer::CaseTokenizer.new\ntokenizer.tokenize(\"these are strings\")\n# => [\"these\", \"are\", \"strings\"]\n\ntokenizer = Cadmium::Tokenizer::CaseTokenizer.new(preserve_apostrophes: true)\ntokenizer.tokenize(\"Affectueusement surnommé « Gabo » dans toute l'Amérique latine\")\n# => [\"Affectueusement\", \"surnommé\", \"Gabo\", \"dans\", \"toute\", \"l\", \"Amérique\", \"latine\"]\n```\n\n#### Regex Tokenizer\n\nThe whitespace tokenizer, word punctuation tokenizer, and word tokenizer all extend the regex tokenizer. It uses Regex to match on the correct values.\n\n```crystal\ntokenizer = Cadmium::Tokenizer::WordPunctuationTokenizer.new\ntokenizer.tokenize(\"my dog hasn't any fleas.\")\n# => [\"my\", \"dog\", \"hasn\", \"'\", \"t\", \"any\", \"fleas\", \".\"]\n```\n\n#### Treebank Word Tokenizer\n\nThe treebank tokenizer uses regular expressions to tokenize text as in Penn Treebank. This implementation is a port of the tokenizer sed script written by Robert McIntyre. To read about treebanks you can visit [wikipedia](https://en.wikipedia.org/wiki/Treebank).\n\n```crystal\ntokenizer = Cadmium::Tokenizer::TreebankWordTokenizer.new\ntokenizer.tokenize(\"If we 'all' can't go. I'll stay home.\")\n# => [\"If\", \"we\", \"'all\", \"'\", \"ca\", \"n't\", \"go.\", \"I\", \"'ll\", \"stay\", \"home\", \".\"]\n```\n\n### String Distance\n\nCorundum provides an implimentation of two different string distance algorithms, the [Jaro-Winkler Distance Algorithm](http://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance) and the [Levenshtein Distance Algorithm](https://en.wikipedia.org/wiki/Levenshtein_distance).\n\n#### Jaro-Winkler\n\nThe Jaro-Winkler algorithm returns a number between 0 and 1 which tells how closely two strings match (1 being perfect and 0 being not at all).\n\n```crystal\nCadmium.jaro_winkler_distance(\"dixon\",\"dicksonx\")\n# => 0.8133333333333332\n\nCadmium.jaro_winkler_distance(\"same\",\"same\")\n# => 1\n\nCadmium.jaro_winkler_distance(\"not\",\"same\")\n# => 0.0\n```\n\n#### Levenshtein\n\nThe Levenshtein distance algorithm returns the number of edits (insertions, modifications, or deletions) required to transform one string into another.\n\n```crystal\nCadmium.levenshtein_distance(\"doctor\", \"doktor\")\n# => 1\n\nCadmium.levenshtein_distance(\"doctor\", \"doctor\")\n# => 0\n\nCadmium.levenshtein_distance(\"flad\", \"flaten\")\n# => 3\n```\n\n### Stemmers\n\nCurrently Cadmium only comes with a [Porter](http://tartarus.org/martin/PorterStemmer/index.html) Stemmer, but [Lancaster](http://www.comp.lancs.ac.uk/computing/research/stemming/) will be added soon. Stemmer methods `stem` and `tokenize_and_stem` have also been added to the String class to simplify use.\n\n```crystal\n\"words\".stem\n# => word\n\n\"i am waking up to the sounds of chainsaws\".tokenize_and_stem\n# => [\"wake\", \"sound\", \"chainsaw\"]\n```\n\n### Phonetics\n\nPhonetic matching (sounds-like) matching can be done with the SoundEx or Metaphone algorithms\n\n```crystal\nsoundex = Cadmium::Phonetics::SoundEx\nmetaphone = Cadmium::Phonetics::Metaphone\n\nsoundex.process(\"phonetics\")\n# => \"P532\"\n\nsoundex.tokenize_and_phoneticize(\"Ruby aint got nothing on Crystal\")\n# => [\"R100\", \"A530\", \"G300\", \"C234\"]\n\n# Keep word stops\nsoundex.tokenize_and_phoneticize(\"Ruby aint got nothing on Crystal\", true)\n# => [\"R100\", \"A530\", \"G300\", \"N352\", \"O000\", \"C234\"]\n\nsoundex.compare(\"phonetix\", \"phonetics\")\n# => true\n\nmetaphone.process(\"phonetics\")\n# => \"FNTKS\"\n\nmetaphone.tokenize_and_phoneticize(\"Ruby aint got nothing on Crystal\")\n# => [\"RB\", \"ANT\", \"KT\", \"KRSTL\"]\n\n# Keep word stops\nmetaphone.tokenize_and_phoneticize(\"Ruby aint got nothing on Crystal\", true)\n# => [\"RB\", \"ANT\", \"KT\", \"N0NK\", \"ON\", \"KRSTL\"]\n\nmetaphone.compare(\"phonetix\", \"phonetics\")\n# => true\n```\n\nBoth classes can also be used with attached String methods. The default class for String methods is `Metaphone`. The attached methods are `phonetics`, `sounds_like`, and `tokenize_and_phoneticize`.\n\n```crystal\n\"Crystal\".phonetics\n# => \"KRSTL\"\n\n\"Crystal\".sounds_like(\"Krystal\")\n# => true\n\n\"Crystal\".phonetics(nil, Cadmium::Phonetics::SoundEx)\n# => \"C234\"\n\n# Using a max length\n\"Constitution\".phonetics(6, Cadmium::Phonetics::SoundEx)\n# => \"C52333\"\n```\n\n### Inflectors\n\n#### Nouns\n\nNouns can be inflected using the `NounInflector` which has also been attached to the `String` class.\n\n```crystal\ninflector = Cadmium::Inflectors::NounInflector.new\n\ninflector.pluralize(\"radius\")\n# => radii\n\ninflector.singularize(\"radii\")\n# => radius\n\n\"person\".pluralize\n# => people\n\n\"people\".singularize\n# => person\n```\n\n#### Present Tense Verbs\n\nPresent tense verbs can be inflected with the `PresentTenseVerb` inflector. This has also been attached to the string class.\n\n```crystal\ninflector = Cadmium::Inflectors::PresentTenseVerb.new\n\ninflector.singularize(\"become\")\n# => became\n\ninflector.pluralize(\"became\")\n# => become\n\n\"walk\".singularize(false) # noun: false\n# => walks\n\n\"walks\".pluralize(false)  # noun: false\n# => walk\n```\n\n#### Numbers\n\nNumbers can be inflected with the `CountInflector` which also adds a method `to_nth` to the `Int` class.\n\n```crystal\nCadmium::Inflectors::CountInflector.nth(1)\n# => 1st\n\nCadmium::Inflectors::CountInflector.nth(111)\n# => 111th\n\n153.to_nth\n# => 153rd\n```\n\n### N-Grams\n\nN-Grams can be obtained for Arrays of Strings, or with single Strings (which will first be tokenized).\n\n#### bigrams\n\n```crystal\nCadmium::NGrams.bigrams(\"these are some words\")\n# => [[\"these\", \"are\"], [\"are\", \"some\"], [\"some\", \"words\"]]\n```\n\n#### trigrams\n\n```crystal\nCadmium::NGrams.trigrams(\"these are some words\")\n# => [[\"these\", \"are\", \"some\"], [\"are\", \"some\", \"words\"]]\n```\n\n#### arbitrary n-grams\n\n```crystal\nCadmium::NGrams.ngrams(\"some other words here for you\", 4)\n# => [[\"some\", \"other\", \"words\", \"here\"], [\"other\", \"words\", \"here\", \"for\"], [\"words\", \"here\", \"for\", \"you\"]]\n```\n\n#### padding\n\nn-grams can also be returned with left or right padding by passing a start and/or end symbol to the bigrams, trigrams or ngrams.\n\n```crystal\nCadmium::NGrams.ngrams(\"these are some words\", 4, \"[start]\", \"[end]\")\n# => [\n      [\"[start]\", \"[start]\", \"[start]\", \"these\"],\n      [\"[start]\", \"[start]\", \"these\", \"are\"],\n      [\"[start]\", \"these\", \"are\", \"some\"],\n      [\"these\", \"are\", \"some\", \"words\"],\n      [\"are\", \"some\", \"words\", \"[end]\"],\n      [\"some\", \"words\", \"[end]\", \"[end]\"],\n      [\"words\", \"[end]\", \"[end]\", \"[end]\"]\n    ]\n```\n\n### tf-idf\n\n[Term Frequency–Inverse Document Frequency (tf-idf)](http://en.wikipedia.org/wiki/Tf%E2%80%93idf) is implemented to determine how important a word (or words) is to a document relative to a corpus. The following example will add four documents to a corpus and determine the weight of the word \"crystal\" and then the weight of the word \"ruby\" in each document.\n\n```crystal\ntfidf = Cadmium::TfIdf.new\ntfidf.add_document(\"this document is about crystal.\")\ntfidf.add_document(\"this document is about ruby.\")\ntfidf.add_document(\"this document is about ruby and crystal.\")\ntfidf.add_document(\"this document is about crystal. it has crystal examples\")\n\nputs \"crystal --------------------------------\"\ntfidf.tfidfs(\"crystal\") do |i, measure, key|\n  puts \"document ##{i} is #{measure}\"\nend\n\nputs \"ruby --------------------------------\"\ntfidf.tfidfs(\"ruby\") do |i, measure, key|\n  puts \"document ##{i} is #{measure}\"\nend\n\n# =>  crystal --------------------------------\n      document #0 is 1\n      document #1 is 0\n      document #2 is 1\n      document #3 is 2\n      ruby --------------------------------\n      document #0 is 0\n      document #1 is 1.2876820724517808\n      document #2 is 1.2876820724517808\n      document #3 is 0\n```\n\n### Transliterator\n\nThe Transliterator module provides the ability to transliterate UTF-8 strings into pure ASCII so that they can be safely displayed in URL slugs or file names.\n\n```crystal\nCadmium.transliterate(\"Привет\")\n# => \"Privet\"\n\nCadmium.transliterate(\"你好朋友\")\n# => \"Ni Hao Peng You\"\n\n# With the string extension\n\n\"މިއަދަކީ ހދ ރީތި ދވހކވ\".transliterate\n# => \"mi'adhakee hdh reethi dhvhkv\"\n\n\"こんにちは、友人\".transliterate\n# => konnichiwa, You Ren\n```\n\n### Sentiment Analysis\n\nThe Sentiment module uses the [AFINN-165](http://www2.imm.dtu.dk/pubdb/views/publication_details.php?id=6010) wordlist and [Emoji Sentiment Ranking](http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0144296) to provide sentiment analysis on arbitrary blocks of text.\n\n```crystal\nsentiment = Cadmium::Sentiment\n\n\"Crystal is seriously the best programming language.\".sentiment\n# or\nsentiment.analyze(\"Crystal is seriously the best programming language.\")\n# =>  {\n        score: 3,\n        comparative: 0,\n        tokens: [\"Crystal\", \"is\", \"seriously\", \"the\", \"best\", \"programming\", \"language\"],\n        words: [\"best\"],\n        positive: [\"best\"],\n        negative: []\n      }\n\n\"I really hate Python\".is_negative?\n# => true\n\n\"I really 💗 Crystal. It's my favorite.\".is_positive?\n# => true\n```\n\n### Tries\n\nA [trie](https://en.wikipedia.org/wiki/Trie) is a data structure for efficiently storing and retrieving strings with identical prefixes, like \"**mee**t\" and \"**mee**k\".\n\n```crystal\ntrie = Cadmium::Trie.new\n\ntrie.add(\"meet\")\ntrie.size\n# => 5\n\ntrie.add(\"meek\")\ntrie.size\n# => 6\n\ntrie.contains?(\"meet\")\n# => true\n\ntrie.find_prefix(\"meeting\")\n# => {\"meet\", \"ing\"}\ntrie.find_prefix(\"meet\")\n# => {\"meet\", \"\"}\ntrie.find_prefix(\"me\")\n# => {nil, \"me\"}\n\ntrie.keys_with_prefix(\"me\")\n# => [\"meet\", \"meek\"]\n\ntrie.add([\"m\", \"me\"])\ntrie.matches_on_path(\"meeting\")\n# => [\"m\", \"me\", \"meet\"]\n```\n\n### Edge Weighted Digraph\n\nEdgeWeightedDigraph represents a digraph, you can add an edge, get the number vertexes, edges, get all edges and use toString to print the Digraph.\n\n```crystal\ndigraph = Cadmium::Graph::EdgeWeightedDigraph.new\n\ndigraph.add(5, 4, 0.35)\ndigraph.add(5, 1, 0.32)\ndigraph.add(1, 3, 0.29)\ndigraph.add(6, 2, 0.40)\ndigraph.add(3, 6, 0.52)\ndigraph.add(6, 4, 0.93)\n\nputs digraph.v # => 7\nputs digraph.e # => 6\n```\n\n### Readability\n\nAnalyze blocks of text and determine, using various algorithms, the readability of the text.\n\n```crystal\ntext = <<-EOF\n    After marriage, the next big event in the couples lives will be their honeymoon. It is a time when the newly weds can get away from relatives and friends to spend some significant time getting to know one another. This time alone together that the couple shares is called the honeymoon. A great gift idea for the married couple would be to give them a surprise tour package. Most women would like to go on a honeymoon.\n    The week or two before the ceremonies would be the best time to schedule a tour because then the budget for this event could be considered. In winter there are more opportunities for the couple to get close to one another because of the cold weather. It is easier to snuggle when the weather is not favorable to outdoor activities. This would afford the couple ample time to know more about themselves during the honeymoon.\n    Honeymoon plans should be discussed with the wife to ensure that the shock is pleasant and not a negative experience to her. It is also a good idea in this case, to ask her probing questions as to where she would like to go. Perhaps you could get a friend or family member to ask her what would be her favorite travel location. That would ensure that you know just what she is looking for.\n    Make sure that the trip is exactly what she wants. Then on the wedding night tell her about the adventure so that the needed accommodations can be made.\nEOF\n\nreport = Cadmium::Readability.new(text)\n\nputs report.flesch  # => 71.47176470588238\nputs report.fog     # => 10.721568627450981\nputs report.kincaid # => 7.513725490196077\n```\n\n### WordNet\n\n>> WordNet® is a large lexical database of English. Nouns, verbs, adjectives and adverbs are grouped into sets of cognitive synonyms (synsets), each expressing a distinct concept. Synsets are interlinked by means of conceptual-semantic and lexical relations. - [https://wordnet.princeton.edu/](https://wordnet.princeton.edu/)\n\nThis WordNet implimentation is based almost completely on [doches](https://github.com/doches) ruby library [rwordnet](https://github.com/doches/rwordnet) with some extras thrown in and, of course, backed by the speed and type safety of Crystal. This is experimental and the API may change, but WordNet brings the power of the English (and hopefully other languages in the future) dictionary to your programs.\n\nUsing it is easy with Cadmium's API.\n\n```crystal\n# Lookup a single word and get all parts of speech\nsynsets = Cadmium::WordNet.lookup(\"horse\")\nsynsets.each do |synset|\n  puts \"---------------------------------------------\"\n  puts synset.synset_offset\n  puts synset.pos\n  puts synset.gloss\n  puts synset.word_counts\nend\n\n# Lookup a single word with a specific part of speech\nsynsets = Cadmium::WordNet.lookup(\"horse\", :v) # :v is for verb\nsynsets.each do |synset|\n  puts \"---------------------------------------------\"\n  puts synset.synset_offset\n  puts synset.pos\n  puts synset.gloss\n  puts synset.word_counts\nend\n\n# Lookup a definition by offset and part of speech\nsynset = Cadmium::WordNet.get(4424418, :n) # :n is for noun\nputs \"---------------------------------------------\"\nputs synset.synset_offset\nputs synset.pos\nputs synset.gloss\nputs synset.word_counts\n```\n\n## Roadmap\n\nThis is all I want to have done before a __v1.0__ release.\n\n- [x] Tokenizers\n  - [x] AggressiveTokenizer\n    - [x] i18n\n  - [x] CaseTokenizer\n  - [ ] Pragmatic [?](https://github.com/diasks2/pragmatic_tokenizer)\n  - [x] RegexTokenizer\n  - [x] SentenceTokenizer\n  - [x] TreebankWordTokenizer\n  - [x] WhitespaceTokenizer\n  - [x] WordPunctuationTokenizer\n- [x] String Distance\n  - [x] Levenshein\n    - [ ] Approximate String Matching\n  - [x] JaroWinkler\n- [ ] Stemmers\n  - [x] PorterStemmer\n    - [ ] i18n\n  - [ ] LancasterStemmer\n    - [ ] i18n\n- [ ] Classifiers\n    - [ ] Bayes\n    - [ ] Logic Regression \n- [x] Phonetics\n  - [x] SoundEx\n  - [x] Metaphone\n  - [ ] Double Metaphone\n- [x] Inflectors\n  - [x] Count\n  - [x] Noun\n  - [x] Verb\n  - [ ] i18n\n- [x] N-Grams\n- [x] TF-IDF\n- [x] Transliterator\n- [x] Sentiment Analysis\n- [x] Tries\n- [x] EdgeWeightedDigraph\n- [x] Readability\n- [x] WordNet\n- [ ] ShortestPathTree\n- [ ] LongestPathTree\n- [ ] Spellcheck\n- [ ] POS Tagger\n\n## Contributing\n\n1. Fork it ( https://github.com/watzon/cadmium/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [watzon](https://github.com/watzon) Chris Watson - creator, maintainer\n","program":{"html_id":"github.com/watzon/cadmium/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/watzon/cadmium","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium","path":"Cadmium.html","kind":"module","full_name":"Cadmium","name":"Cadmium","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/util/paragraph.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/paragraph.cr"},{"filename":"cadmium/util/sentence.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/sentence.cr"},{"filename":"cadmium/util/stop_words.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/stop_words.cr"},{"filename":"cadmium/util/syllable.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/syllable.cr"},{"filename":"cadmium/classifier/bayes.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/classifier/bayes.cr"},{"filename":"cadmium/classifier/logistic_regression.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/classifier/logistic_regression.cr"},{"filename":"cadmium/classifier.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/classifier.cr"},{"filename":"cadmium/distance.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance.cr"},{"filename":"cadmium/inflector/count_inflector.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/count_inflector.cr"},{"filename":"cadmium/inflector/form_set.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/form_set.cr"},{"filename":"cadmium/inflector/tense_inflector.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr"},{"filename":"cadmium/inflector/noun_inflector.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/noun_inflector.cr"},{"filename":"cadmium/inflector/present_verb_inflector.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/present_verb_inflector.cr"},{"filename":"cadmium/inflectors.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflectors.cr"},{"filename":"cadmium/tokenizer/tokenizer_base.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/tokenizer_base.cr"},{"filename":"cadmium/normalizers/remove_diacritics.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/normalizers/remove_diacritics.cr"},{"filename":"cadmium/tokenizer/aggressive_tokenizer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/aggressive_tokenizer.cr"},{"filename":"cadmium/tokenizer/case_tokenizer.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/case_tokenizer.cr"},{"filename":"cadmium/tokenizer/pragmatic_tokenizer.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic_tokenizer.cr"},{"filename":"cadmium/tokenizer/regex_tokenizer.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/regex_tokenizer.cr"},{"filename":"cadmium/tokenizer/sentence_tokenizer.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/sentence_tokenizer.cr"},{"filename":"cadmium/tokenizer/treebank_word_tokenizer.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/treebank_word_tokenizer.cr"},{"filename":"cadmium/tokenizer/whitespace_tokenizer.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/whitespace_tokenizer.cr"},{"filename":"cadmium/tokenizer/word_punctuation_tokenizer.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/word_punctuation_tokenizer.cr"},{"filename":"cadmium/tokenizer/word_tokenizer.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/word_tokenizer.cr"},{"filename":"cadmium/ngrams.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/ngrams.cr"},{"filename":"cadmium/phonetics/metaphone.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr"},{"filename":"cadmium/phonetics/soundex.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr"},{"filename":"cadmium/phonetics.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics.cr"},{"filename":"cadmium/readability.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr"},{"filename":"cadmium/sentiment.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/sentiment.cr"},{"filename":"cadmium/stemmer/stemmer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/stemmer.cr"},{"filename":"cadmium/stemmer/porter_stemmer.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr"},{"filename":"cadmium/stemmer/token.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr"},{"filename":"cadmium/stemmer.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer.cr"},{"filename":"cadmium/tfidf.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr"},{"filename":"cadmium/tokenizer.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer.cr"},{"filename":"cadmium/transliterator/char_map.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/transliterator/char_map.cr"},{"filename":"cadmium/transliterator.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/transliterator.cr"},{"filename":"cadmium/trie.cr","line_number":25,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/trie.cr"},{"filename":"cadmium/version.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/version.cr"},{"filename":"cadmium/wordnet/pointer.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointer.cr"},{"filename":"cadmium/wordnet/db.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/db.cr"},{"filename":"cadmium/wordnet/lemma.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr"},{"filename":"cadmium/wordnet/pointers.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointers.cr"},{"filename":"cadmium/wordnet/synset.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr"},{"filename":"cadmium/wordnet.cr","line_number":7,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet.cr"},{"filename":"cadmium.cr","line_number":7,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium.cr"},{"filename":"cadmium/graph/bag.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/bag.cr"},{"filename":"cadmium/graph/edge_weighted_digraph.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr"},{"filename":"cadmium/tokenizer/pragmatic/languages/common.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/common.cr"},{"filename":"cadmium/tokenizer/pragmatic/languages.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages.cr"},{"filename":"cadmium/tokenizer/pragmatic/regex.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/regex.cr"},{"filename":"cadmium/tokenizer/pragmatic/languages/english.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/english.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Cadmium is a Natrual Language Processing (NLP) library for Crystal. It includes several\nmodules and classes for processing sentences and splitting them into digestable pieces.","summary":"<p>Cadmium is a Natrual Language Processing (NLP) library for Crystal.</p>","class_methods":[{"id":"jaro_winkler_distance(s1:String,s2:String)-class-method","html_id":"jaro_winkler_distance(s1:String,s2:String)-class-method","name":"jaro_winkler_distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"args_string":"(s1 : String, s2 : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium.cr#L20","def":{"name":"jaro_winkler_distance","args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Distance.jaro_winkler(s1, s2)"}},{"id":"levenshtein_distance(s1:String,s2:String)-class-method","html_id":"levenshtein_distance(s1:String,s2:String)-class-method","name":"levenshtein_distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"args_string":"(s1 : String, s2 : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium.cr#L16","def":{"name":"levenshtein_distance","args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Distance.levenshtein(s1, s2)"}},{"id":"stem(string,stemmer=Cadmium::Stemmer::PorterStemmer)-class-method","html_id":"stem(string,stemmer=Cadmium::Stemmer::PorterStemmer)-class-method","name":"stem","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"stemmer","doc":null,"default_value":"Cadmium::Stemmer::PorterStemmer","external_name":"stemmer","restriction":""}],"args_string":"(string, stemmer = <span class=\"t\">Cadmium</span><span class=\"t\">::</span><span class=\"t\">Stemmer</span><span class=\"t\">::</span><span class=\"t\">PorterStemmer</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium.cr#L8","def":{"name":"stem","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"stemmer","doc":null,"default_value":"Cadmium::Stemmer::PorterStemmer","external_name":"stemmer","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stemmer.stem(string)"}},{"id":"tokenize_and_stem(string,keep_stops=false,stemmer=Cadmium::Stemmer::PorterStemmer)-class-method","html_id":"tokenize_and_stem(string,keep_stops=false,stemmer=Cadmium::Stemmer::PorterStemmer)-class-method","name":"tokenize_and_stem","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"keep_stops","doc":null,"default_value":"false","external_name":"keep_stops","restriction":""},{"name":"stemmer","doc":null,"default_value":"Cadmium::Stemmer::PorterStemmer","external_name":"stemmer","restriction":""}],"args_string":"(string, keep_stops = <span class=\"n\">false</span>, stemmer = <span class=\"t\">Cadmium</span><span class=\"t\">::</span><span class=\"t\">Stemmer</span><span class=\"t\">::</span><span class=\"t\">PorterStemmer</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium.cr#L12","def":{"name":"tokenize_and_stem","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"keep_stops","doc":null,"default_value":"false","external_name":"keep_stops","restriction":""},{"name":"stemmer","doc":null,"default_value":"Cadmium::Stemmer::PorterStemmer","external_name":"stemmer","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stemmer.tokenize_and_stem(string, keep_stops)"}},{"id":"transliterate(source,**options)-class-method","html_id":"transliterate(source,**options)-class-method","name":"transliterate","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source, **options)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium.cr#L24","def":{"name":"transliterate","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Transliterator.transliterate(source, **options)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Classifier","path":"Cadmium/Classifier.html","kind":"module","full_name":"Cadmium::Classifier","name":"Classifier","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/classifier.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/classifier.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Classifiers","path":"Cadmium/Classifiers.html","kind":"module","full_name":"Cadmium::Classifiers","name":"Classifiers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/classifier/bayes.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/classifier/bayes.cr"},{"filename":"cadmium/classifier/logistic_regression.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/classifier/logistic_regression.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Classifiers/Bayes","path":"Cadmium/Classifiers/Bayes.html","kind":"class","full_name":"Cadmium::Classifiers::Bayes","name":"Bayes","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/classifier/bayes.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/classifier/bayes.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Classifiers","kind":"module","full_name":"Cadmium::Classifiers","name":"Classifiers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Classifiers/LogisticRegression","path":"Cadmium/Classifiers/LogisticRegression.html","kind":"class","full_name":"Cadmium::Classifiers::LogisticRegression","name":"LogisticRegression","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/classifier/logistic_regression.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/classifier/logistic_regression.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Classifiers","kind":"module","full_name":"Cadmium::Classifiers","name":"Classifiers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Distance","path":"Cadmium/Distance.html","kind":"module","full_name":"Cadmium::Distance","name":"Distance","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/distance/jaro_winkler.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance/jaro_winkler.cr"},{"filename":"cadmium/distance.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[{"id":"jaro_winkler(s1:String,s2:String)-class-method","html_id":"jaro_winkler(s1:String,s2:String)-class-method","name":"jaro_winkler","doc":null,"summary":null,"abstract":false,"args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"args_string":"(s1 : String, s2 : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance.cr#L9","def":{"name":"jaro_winkler","args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JaroWinkler.new.distance(s1, s2)"}},{"id":"levenshtein(s1:String,s2:String)-class-method","html_id":"levenshtein(s1:String,s2:String)-class-method","name":"levenshtein","doc":null,"summary":null,"abstract":false,"args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"args_string":"(s1 : String, s2 : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance.cr#L5","def":{"name":"levenshtein","args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Levenshtein.distance(s1, s2)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Distance/JaroWinkler","path":"Cadmium/Distance/JaroWinkler.html","kind":"class","full_name":"Cadmium::Distance::JaroWinkler","name":"JaroWinkler","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/distance/jaro_winkler.cr","line_number":7,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance/jaro_winkler.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_ADJ_TABLE","name":"DEFAULT_ADJ_TABLE","value":"[['A', 'E'], ['A', 'I'], ['A', 'O'], ['A', 'U'], ['B', 'V'], ['E', 'I'], ['E', 'O'], ['E', 'U'], ['I', 'O'], ['I', 'U'], ['O', 'U'], ['I', 'Y'], ['E', 'Y'], ['C', 'G'], ['E', 'F'], ['W', 'U'], ['W', 'V'], ['X', 'K'], ['S', 'Z'], ['X', 'S'], ['Q', 'C'], ['U', 'V'], ['M', 'N'], ['L', 'I'], ['Q', 'O'], ['P', 'R'], ['I', 'J'], ['2', 'Z'], ['5', 'S'], ['8', 'B'], ['1', 'I'], ['1', 'L'], ['0', 'O'], ['0', 'Q'], ['C', 'K'], ['G', 'J'], ['E', ' '], ['Y', ' '], ['S', ' ']].reduce(Set(Tuple(Char, Char)).new) do |set, elem|\n  c1, c2 = elem\n  set << {c1, c2}\n  set << {c2, c1}\n  set << {c1.downcase, c2.downcase}\n  set << {c2.downcase, c1.downcase}\n  set << {c1.downcase, c2}\n  set << {c2, c1.downcase}\n  set << {c1, c2.downcase}\n  set << {c2.downcase, c1}\n  set\nend","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Distance","kind":"module","full_name":"Cadmium::Distance","name":"Distance"},"doc":"Computes the Jaro distance between two string.\nCode credit goes to kostya. https://github.com/kostya/jaro_winkler","summary":"<p>Computes the Jaro distance between two string.</p>","class_methods":[],"constructors":[{"id":"new(weight=0.1,threshold=0.7,ignore_case=false,adj_table=false)-class-method","html_id":"new(weight=0.1,threshold=0.7,ignore_case=false,adj_table=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"weight","doc":null,"default_value":"0.1","external_name":"weight","restriction":""},{"name":"threshold","doc":null,"default_value":"0.7","external_name":"threshold","restriction":""},{"name":"ignore_case","doc":null,"default_value":"false","external_name":"ignore_case","restriction":""},{"name":"adj_table","doc":null,"default_value":"false","external_name":"adj_table","restriction":""}],"args_string":"(weight = <span class=\"n\">0.1</span>, threshold = <span class=\"n\">0.7</span>, ignore_case = <span class=\"n\">false</span>, adj_table = <span class=\"n\">false</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance/jaro_winkler.cr#L27","def":{"name":"new","args":[{"name":"weight","doc":null,"default_value":"0.1","external_name":"weight","restriction":""},{"name":"threshold","doc":null,"default_value":"0.7","external_name":"threshold","restriction":""},{"name":"ignore_case","doc":null,"default_value":"false","external_name":"ignore_case","restriction":""},{"name":"adj_table","doc":null,"default_value":"false","external_name":"adj_table","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(weight, threshold, ignore_case, adj_table)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"distance(s1:String,s2:String)-instance-method","html_id":"distance(s1:String,s2:String)-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"args_string":"(s1 : String, s2 : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance/jaro_winkler.cr#L31","def":{"name":"distance","args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_distance(s1.chars, s2.chars)"}},{"id":"distance(s1:Array(Char),s2:Array(Char))-instance-method","html_id":"distance(s1:Array(Char),s2:Array(Char))-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"Array(Char)"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"Array(Char)"}],"args_string":"(s1 : Array(Char), s2 : Array(Char))","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance/jaro_winkler.cr#L35","def":{"name":"distance","args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"Array(Char)"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"Array(Char)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_distance(s1, s2)"}},{"id":"jaro_distance(s1:String,s2:String)-instance-method","html_id":"jaro_distance(s1:String,s2:String)-instance-method","name":"jaro_distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"args_string":"(s1 : String, s2 : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance/jaro_winkler.cr#L39","def":{"name":"jaro_distance","args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_jaro_distance(s1.chars, s2.chars)"}},{"id":"jaro_distance(s1:Array(Char),s2:Array(Char))-instance-method","html_id":"jaro_distance(s1:Array(Char),s2:Array(Char))-instance-method","name":"jaro_distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"Array(Char)"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"Array(Char)"}],"args_string":"(s1 : Array(Char), s2 : Array(Char))","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance/jaro_winkler.cr#L43","def":{"name":"jaro_distance","args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"Array(Char)"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"Array(Char)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_jaro_distance(s1, s2)"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Distance/Levenshtein","path":"Cadmium/Distance/Levenshtein.html","kind":"module","full_name":"Cadmium::Distance::Levenshtein","name":"Levenshtein","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/distance/levenshtein.cr","line_number":1,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance/levenshtein.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Distance","kind":"module","full_name":"Cadmium::Distance","name":"Distance"},"doc":null,"summary":null,"class_methods":[{"id":"distance(s1:String,s2:String)-class-method","html_id":"distance(s1:String,s2:String)-class-method","name":"distance","doc":"Returns the Damerau-Levenshtein distance between strings. Counts the distance\nbetween two strings by returning the number of edit operations required to\nconvert `s1` into `s2`.","summary":"<p>Returns the Damerau-Levenshtein distance between strings.</p>","abstract":false,"args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"args_string":"(s1 : String, s2 : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/distance/levenshtein.cr#L5","def":{"name":"distance","args":[{"name":"s1","doc":null,"default_value":"","external_name":"s1","restriction":"String"},{"name":"s2","doc":null,"default_value":"","external_name":"s2","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if s1 == s2\n  return 0\nend\ns1_length = s1.size\ns2_length = s2.size\nif s2_length == 0\n  return s1_length\nend\nif s1_length == 0\n  return s2_length\nend\ndiff = {} of Tuple(Int32, Int32) => Int32\n(-1..(s1_length + 1)).each do |i|\n  diff[{i, -1}] = i + 1\nend\n(-1..(s2_length + 1)).each do |i|\n  diff[{-1, i}] = i + 1\nend\ns1_length.times do |i|\n  s2_length.times do |j|\n    if s1[i] == s2[j]\n      c = 0\n    else\n      c = 1\n    end\n    diff[{i, j}] = [diff[{i - 1, j}] + 1, diff[{i, j - 1}] + 1, diff[{i - 1, j - 1}] + c].min\n    if ((i > 0 && j > 0) && (s1[i] == s2[j - 1])) && (s1[i - 1] == s2[j])\n      diff[{i, j}] = [diff[{i, j}], diff[{i - 2, j - 2}] + c].min\n    end\n  end\nend\ndiff[{s1_length - 1, s2_length - 1}]\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Graph","path":"Cadmium/Graph.html","kind":"module","full_name":"Cadmium::Graph","name":"Graph","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/graph/bag.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/bag.cr"},{"filename":"cadmium/graph/edge_weighted_digraph.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Graph/Bag","path":"Cadmium/Graph/Bag.html","kind":"struct","full_name":"Cadmium::Graph::Bag(T)","name":"Bag","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/watzon/cadmium/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/graph/bag.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/bag.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Graph","kind":"module","full_name":"Cadmium::Graph","name":"Graph"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/bag.cr#L8","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Bag(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(element:T)-instance-method","html_id":"add(element:T)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"element","doc":null,"default_value":"","external_name":"element","restriction":"T"}],"args_string":"(element : T)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/bag.cr#L13","def":{"name":"add","args":[{"name":"element","doc":null,"default_value":"","external_name":"element","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dictionary.push(element)\n@n_element = @n_element + 1\nself\n"}},{"id":"contains(item:T)-instance-method","html_id":"contains(item:T)-instance-method","name":"contains","doc":null,"summary":null,"abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"}],"args_string":"(item : T)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/bag.cr#L23","def":{"name":"contains","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dictionary.includes?(item)"}},{"id":"empty?-instance-method","html_id":"empty?-instance-method","name":"empty?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/bag.cr#L19","def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@n_element > 0"}},{"id":"unpack-instance-method","html_id":"unpack-instance-method","name":"unpack","doc":"Unpack the bag , and get all items","summary":"<p>Unpack the bag , and get all items</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/bag.cr#L28","def":{"name":"unpack","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dictionary.dup"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Graph/EdgeWeightedDigraph","path":"Cadmium/Graph/EdgeWeightedDigraph.html","kind":"class","full_name":"Cadmium::Graph::EdgeWeightedDigraph","name":"EdgeWeightedDigraph","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/graph/edge_weighted_digraph.cr","line_number":6,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Graph","kind":"module","full_name":"Cadmium::Graph","name":"Graph"},"doc":"Represents a digraph, you can add an edge, get the number\nvertexes, edges, get all edges and use\n`#to_s` to print the Digraph.","summary":"<p>Represents a digraph, you can add an edge, get the number vertexes, edges, get all edges and use <code><a href=\"../../Cadmium/Graph/EdgeWeightedDigraph.html#to_s-instance-method\">#to_s</a></code> to print the Digraph.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Create a new `EdgeWeightedDigraph`.","summary":"<p>Create a new <code><a href=\"../../Cadmium/Graph/EdgeWeightedDigraph.html\">EdgeWeightedDigraph</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L12","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(from:Int32,to:Int32,weight:Float64)-instance-method","html_id":"add(from:Int32,to:Int32,weight:Float64)-instance-method","name":"add","doc":"Create and add a new `DirectedEdge`.","summary":"<p>Create and add a new <code><a href=\"../../Cadmium/Graph/EdgeWeightedDigraph/DirectedEdge.html\">DirectedEdge</a></code>.</p>","abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Int32"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"Float64"}],"args_string":"(from : Int32, to : Int32, weight : Float64)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L28","def":{"name":"add","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Int32"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"e = DirectedEdge.new(from, to, weight)\nadd_edge(e)\n"}},{"id":"add_edge(e:DirectedEdge)-instance-method","html_id":"add_edge(e:DirectedEdge)-instance-method","name":"add_edge","doc":"Add a `DirectedEdge`.","summary":"<p>Add a <code><a href=\"../../Cadmium/Graph/EdgeWeightedDigraph/DirectedEdge.html\">DirectedEdge</a></code>.</p>","abstract":false,"args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":"DirectedEdge"}],"args_string":"(e : DirectedEdge)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L34","def":{"name":"add_edge","args":[{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":"DirectedEdge"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !@adj[e.from]?\n  filler = Array.new(e.from - (@adj.size - 1), Bag(DirectedEdge).new)\n  @adj.concat(filler)\nend\n@adj[e.from].add(e)\n@num_edges = @num_edges + 1\n"}},{"id":"e:Int32-instance-method","html_id":"e:Int32-instance-method","name":"e","doc":"Get the number of edges saved.","summary":"<p>Get the number of edges saved.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L23","def":{"name":"e","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@num_edges"}},{"id":"edges-instance-method","html_id":"edges-instance-method","name":"edges","doc":"Use callback on all edges.","summary":"<p>Use callback on all edges.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L51","def":{"name":"edges","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"list = Bag(DirectedEdge).new\n@adj.each do |i|\n  i.unpack.each do |item|\n    list.add(item)\n  end\nend\nlist.unpack\n"}},{"id":"get_adj(v:Int32)-instance-method","html_id":"get_adj(v:Int32)-instance-method","name":"get_adj","doc":"Use callback on all edges from v.","summary":"<p>Use callback on all edges from v.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int32"}],"args_string":"(v : Int32)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L45","def":{"name":"get_adj","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !@adj[v]\n  return [] of Bag\nend\n@adj[v].unpack\n"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L61","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = [] of String\nedges.each do |edge|\n  result.push(edge.to_s)\nend\nresult.join(\"\\n\")\n"}},{"id":"v-instance-method","html_id":"v-instance-method","name":"v","doc":"Get the number of vertexs saved.","summary":"<p>Get the number of vertexs saved.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L18","def":{"name":"v","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@adj.size"}}],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Graph/EdgeWeightedDigraph/DirectedEdge","path":"Cadmium/Graph/EdgeWeightedDigraph/DirectedEdge.html","kind":"struct","full_name":"Cadmium::Graph::EdgeWeightedDigraph::DirectedEdge","name":"DirectedEdge","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/watzon/cadmium/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/graph/edge_weighted_digraph.cr","line_number":69,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Graph/EdgeWeightedDigraph","kind":"class","full_name":"Cadmium::Graph::EdgeWeightedDigraph","name":"EdgeWeightedDigraph"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(from:Int32,to:Int32,weight:Float64)-class-method","html_id":"new(from:Int32,to:Int32,weight:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Int32"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"Float64"}],"args_string":"(from : Int32, to : Int32, weight : Float64)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L76","def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Int32"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(from, to, weight)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"from:Int32-instance-method","html_id":"from:Int32-instance-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L72","def":{"name":"from","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@from"}},{"id":"to:Int32-instance-method","html_id":"to:Int32-instance-method","name":"to","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L74","def":{"name":"to","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@to"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L79","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sprintf(\"%s -> %s, %s\", @from, @to, @weight)"}},{"id":"weight:Float64-instance-method","html_id":"weight:Float64-instance-method","name":"weight","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/graph/edge_weighted_digraph.cr#L76","def":{"name":"weight","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@weight"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector","path":"Cadmium/Inflector.html","kind":"module","full_name":"Cadmium::Inflector","name":"Inflector","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/inflector/count_inflector.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/count_inflector.cr"},{"filename":"cadmium/inflector/form_set.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/form_set.cr"},{"filename":"cadmium/inflector/tense_inflector.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr"},{"filename":"cadmium/inflector/noun_inflector.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/noun_inflector.cr"},{"filename":"cadmium/inflector/present_verb_inflector.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/present_verb_inflector.cr"},{"filename":"cadmium/inflectors.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflectors.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/CountInflector","path":"Cadmium/Inflector/CountInflector.html","kind":"module","full_name":"Cadmium::Inflector::CountInflector","name":"CountInflector","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/inflector/count_inflector.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/count_inflector.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/CountInflector","kind":"module","full_name":"Cadmium::Inflector::CountInflector","name":"CountInflector"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector","kind":"module","full_name":"Cadmium::Inflector","name":"Inflector"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"nth(i)-instance-method","html_id":"nth(i)-instance-method","name":"nth","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"args_string":"(i)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/count_inflector.cr#L6","def":{"name":"nth","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"i.to_s + (nth_form(i))"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/FormSet","path":"Cadmium/Inflector/FormSet.html","kind":"class","full_name":"Cadmium::Inflector::FormSet","name":"FormSet","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/inflector/form_set.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/form_set.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector","kind":"module","full_name":"Cadmium::Inflector","name":"Inflector"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/form_set.cr#L7","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"irregular_forms:Hash(String,String)-instance-method","html_id":"irregular_forms:Hash(String,String)-instance-method","name":"irregular_forms","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/form_set.cr#L7","def":{"name":"irregular_forms","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@irregular_forms"}},{"id":"irregular_forms=(irregular_forms:Hash(String,String))-instance-method","html_id":"irregular_forms=(irregular_forms:Hash(String,String))-instance-method","name":"irregular_forms=","doc":null,"summary":null,"abstract":false,"args":[{"name":"irregular_forms","doc":null,"default_value":"","external_name":"irregular_forms","restriction":"Hash(String, String)"}],"args_string":"(irregular_forms : Hash(String, String))","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/form_set.cr#L11","def":{"name":"irregular_forms=","args":[{"name":"irregular_forms","doc":null,"default_value":"","external_name":"irregular_forms","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@irregular_forms = irregular_forms"}},{"id":"regular_forms:Array(Tuple(Regex,String))-instance-method","html_id":"regular_forms:Array(Tuple(Regex,String))-instance-method","name":"regular_forms","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Tuple(Regex, String))","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/form_set.cr#L6","def":{"name":"regular_forms","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Tuple(Regex, String))","visibility":"Public","body":"@regular_forms"}},{"id":"regular_forms=(regular_forms:Array(Tuple(Regex,String)))-instance-method","html_id":"regular_forms=(regular_forms:Array(Tuple(Regex,String)))-instance-method","name":"regular_forms=","doc":null,"summary":null,"abstract":false,"args":[{"name":"regular_forms","doc":null,"default_value":"","external_name":"regular_forms","restriction":"Array(Tuple(Regex, String))"}],"args_string":"(regular_forms : Array(Tuple(Regex, String)))","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/form_set.cr#L10","def":{"name":"regular_forms=","args":[{"name":"regular_forms","doc":null,"default_value":"","external_name":"regular_forms","restriction":"Array(Tuple(Regex, String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@regular_forms = regular_forms"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/IntExtension","path":"Cadmium/Inflector/IntExtension.html","kind":"module","full_name":"Cadmium::Inflector::IntExtension","name":"IntExtension","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/inflectors.cr","line_number":26,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflectors.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/cadmium/Int","kind":"struct","full_name":"Int","name":"Int"}],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector","kind":"module","full_name":"Cadmium::Inflector","name":"Inflector"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"to_nth-instance-method","html_id":"to_nth-instance-method","name":"to_nth","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflectors.cr#L27","def":{"name":"to_nth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Cadmium::Inflectors::CountInflector.nth(self)"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/NounInflector","path":"Cadmium/Inflector/NounInflector.html","kind":"class","full_name":"Cadmium::Inflector::NounInflector","name":"NounInflector","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/TenseInflector","kind":"class","full_name":"Cadmium::Inflector::TenseInflector","name":"TenseInflector"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/TenseInflector","kind":"class","full_name":"Cadmium::Inflector::TenseInflector","name":"TenseInflector"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/inflector/noun_inflector.cr","line_number":6,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/noun_inflector.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector","kind":"module","full_name":"Cadmium::Inflector","name":"Inflector"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/noun_inflector.cr#L7","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"pluralize(token)-instance-method","html_id":"pluralize(token)-instance-method","name":"pluralize","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/noun_inflector.cr#L60","def":{"name":"pluralize","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ize(token, plural_forms, custom_plural_forms)"}},{"id":"singularize(token)-instance-method","html_id":"singularize(token)-instance-method","name":"singularize","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/noun_inflector.cr#L64","def":{"name":"singularize","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ize(token, singular_forms, custom_singular_forms)"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/PresentVerbInflector","path":"Cadmium/Inflector/PresentVerbInflector.html","kind":"class","full_name":"Cadmium::Inflector::PresentVerbInflector","name":"PresentVerbInflector","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/TenseInflector","kind":"class","full_name":"Cadmium::Inflector::TenseInflector","name":"TenseInflector"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/TenseInflector","kind":"class","full_name":"Cadmium::Inflector::TenseInflector","name":"TenseInflector"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/inflector/present_verb_inflector.cr","line_number":6,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/present_verb_inflector.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector","kind":"module","full_name":"Cadmium::Inflector","name":"Inflector"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/present_verb_inflector.cr#L7","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/StringExtension","path":"Cadmium/Inflector/StringExtension.html","kind":"module","full_name":"Cadmium::Inflector::StringExtension","name":"StringExtension","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/inflectors.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflectors.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/cadmium/String","kind":"class","full_name":"String","name":"String"}],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector","kind":"module","full_name":"Cadmium::Inflector","name":"Inflector"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"pluralize(noun=true)-instance-method","html_id":"pluralize(noun=true)-instance-method","name":"pluralize","doc":null,"summary":null,"abstract":false,"args":[{"name":"noun","doc":null,"default_value":"true","external_name":"noun","restriction":""}],"args_string":"(noun = <span class=\"n\">true</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflectors.cr#L9","def":{"name":"pluralize","args":[{"name":"noun","doc":null,"default_value":"true","external_name":"noun","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if noun\n  @@_noun_inflector.pluralize(self)\nelse\n  @@_verb_inflector.pluralize(self)\nend"}},{"id":"singularize(noun=true)-instance-method","html_id":"singularize(noun=true)-instance-method","name":"singularize","doc":null,"summary":null,"abstract":false,"args":[{"name":"noun","doc":null,"default_value":"true","external_name":"noun","restriction":""}],"args_string":"(noun = <span class=\"n\">true</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflectors.cr#L17","def":{"name":"singularize","args":[{"name":"noun","doc":null,"default_value":"true","external_name":"noun","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if noun\n  @@_noun_inflector.singularize(self)\nelse\n  @@_verb_inflector.singularize(self)\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/TenseInflector","path":"Cadmium/Inflector/TenseInflector.html","kind":"class","full_name":"Cadmium::Inflector::TenseInflector","name":"TenseInflector","abstract":true,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/inflector/tense_inflector.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/NounInflector","kind":"class","full_name":"Cadmium::Inflector::NounInflector","name":"NounInflector"},{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/PresentVerbInflector","kind":"class","full_name":"Cadmium::Inflector::PresentVerbInflector","name":"PresentVerbInflector"}],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector","kind":"module","full_name":"Cadmium::Inflector","name":"Inflector"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_form(singular_table,plural_table,singular,plural)-instance-method","html_id":"add_form(singular_table,plural_table,singular,plural)-instance-method","name":"add_form","doc":null,"summary":null,"abstract":false,"args":[{"name":"singular_table","doc":null,"default_value":"","external_name":"singular_table","restriction":""},{"name":"plural_table","doc":null,"default_value":"","external_name":"plural_table","restriction":""},{"name":"singular","doc":null,"default_value":"","external_name":"singular","restriction":""},{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":""}],"args_string":"(singular_table, plural_table, singular, plural)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr#L63","def":{"name":"add_form","args":[{"name":"singular_table","doc":null,"default_value":"","external_name":"singular_table","restriction":""},{"name":"plural_table","doc":null,"default_value":"","external_name":"plural_table","restriction":""},{"name":"singular","doc":null,"default_value":"","external_name":"singular","restriction":""},{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"singular = singular.downcase\nplural = plural.downcase\nplural_table[singular] = plural\nsingular_table[plural] = singular\n"}},{"id":"add_irregular(singular,plural)-instance-method","html_id":"add_irregular(singular,plural)-instance-method","name":"add_irregular","doc":null,"summary":null,"abstract":false,"args":[{"name":"singular","doc":null,"default_value":"","external_name":"singular","restriction":""},{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":""}],"args_string":"(singular, plural)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr#L70","def":{"name":"add_irregular","args":[{"name":"singular","doc":null,"default_value":"","external_name":"singular","restriction":""},{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_form(singular_forms.irregular_forms, plural_forms.irregular_forms, singular, plural)"}},{"id":"add_plural(pattern,replacement)-instance-method","html_id":"add_plural(pattern,replacement)-instance-method","name":"add_plural","doc":null,"summary":null,"abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":""},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":""}],"args_string":"(pattern, replacement)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr#L32","def":{"name":"add_plural","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":""},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"custom_plural_forms.push({pattern, replacement})"}},{"id":"add_singular(pattern,replacement)-instance-method","html_id":"add_singular(pattern,replacement)-instance-method","name":"add_singular","doc":null,"summary":null,"abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":""},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":""}],"args_string":"(pattern, replacement)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr#L28","def":{"name":"add_singular","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":""},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"custom_singular_forms.push({pattern, replacement})"}},{"id":"ize(token,form_set,custom_forms)-instance-method","html_id":"ize(token,form_set,custom_forms)-instance-method","name":"ize","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"form_set","doc":null,"default_value":"","external_name":"form_set","restriction":""},{"name":"custom_forms","doc":null,"default_value":"","external_name":"custom_forms","restriction":""}],"args_string":"(token, form_set, custom_forms)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr#L36","def":{"name":"ize","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"form_set","doc":null,"default_value":"","external_name":"form_set","restriction":""},{"name":"custom_forms","doc":null,"default_value":"","external_name":"custom_forms","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"restore_case = restore_case(token)\nrestore_case.call(((((ize_regex(token, custom_forms)) || (ize_ambiguous(token))) || (ize_regulars(token, form_set))) || (ize_regex(token, form_set.regular_forms))) || token)\n"}},{"id":"ize_ambiguous(token)-instance-method","html_id":"ize_ambiguous(token)-instance-method","name":"ize_ambiguous","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr#L42","def":{"name":"ize_ambiguous","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ambiguous.includes?(token.downcase)\n  token.downcase\nend"}},{"id":"ize_regex(token,forms)-instance-method","html_id":"ize_regex(token,forms)-instance-method","name":"ize_regex","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"forms","doc":null,"default_value":"","external_name":"forms","restriction":""}],"args_string":"(token, forms)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr#L55","def":{"name":"ize_regex","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"forms","doc":null,"default_value":"","external_name":"forms","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"forms.each do |form|\n  if token.match(form[0])\n    return token.sub(form[0], form[1])\n  end\nend"}},{"id":"ize_regulars(token,form_set)-instance-method","html_id":"ize_regulars(token,form_set)-instance-method","name":"ize_regulars","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"form_set","doc":null,"default_value":"","external_name":"form_set","restriction":""}],"args_string":"(token, form_set)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr#L48","def":{"name":"ize_regulars","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"form_set","doc":null,"default_value":"","external_name":"form_set","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token = token.downcase\nif (form_set.irregular_forms.has_key?(token)) && form_set.irregular_forms[token]\n  form_set.irregular_forms[token]\nend\n"}},{"id":"pluralize(token)-instance-method","html_id":"pluralize(token)-instance-method","name":"pluralize","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr#L20","def":{"name":"pluralize","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ize(token, plural_forms, custom_plural_forms)"}},{"id":"restore_case(token)-instance-method","html_id":"restore_case(token)-instance-method","name":"restore_case","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr#L74","def":{"name":"restore_case","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if token[0] == token[0].upcase\n  if token[1]? && (token[1] == token[1].downcase)\n    ->(tok : String) do\n      tok.capitalize\n    end\n  else\n    ->(tok : String) do\n      tok.upcase\n    end\n  end\nelse\n  ->(tok : String) do\n    tok.downcase\n  end\nend"}},{"id":"singularize(token)-instance-method","html_id":"singularize(token)-instance-method","name":"singularize","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/inflector/tense_inflector.cr#L24","def":{"name":"singularize","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ize(token, singular_forms, custom_singular_forms)"}}],"macros":[],"types":[]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/NGrams","path":"Cadmium/NGrams.html","kind":"module","full_name":"Cadmium::NGrams","name":"NGrams","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/ngrams.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/ngrams.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/NGrams","kind":"module","full_name":"Cadmium::NGrams","name":"NGrams"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"bigrams(sequence,start_symbol=nil,end_symbol=nil)-instance-method","html_id":"bigrams(sequence,start_symbol=nil,end_symbol=nil)-instance-method","name":"bigrams","doc":null,"summary":null,"abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""},{"name":"start_symbol","doc":null,"default_value":"nil","external_name":"start_symbol","restriction":""},{"name":"end_symbol","doc":null,"default_value":"nil","external_name":"end_symbol","restriction":""}],"args_string":"(sequence, start_symbol = <span class=\"n\">nil</span>, end_symbol = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/ngrams.cr#L13","def":{"name":"bigrams","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""},{"name":"start_symbol","doc":null,"default_value":"nil","external_name":"start_symbol","restriction":""},{"name":"end_symbol","doc":null,"default_value":"nil","external_name":"end_symbol","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ngrams(sequence, 2, start_symbol, end_symbol)"}},{"id":"multigrams(sequence,n,start_symbol=nil,end_symbol=nil)-instance-method","html_id":"multigrams(sequence,n,start_symbol=nil,end_symbol=nil)-instance-method","name":"multigrams","doc":null,"summary":null,"abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"start_symbol","doc":null,"default_value":"nil","external_name":"start_symbol","restriction":""},{"name":"end_symbol","doc":null,"default_value":"nil","external_name":"end_symbol","restriction":""}],"args_string":"(sequence, n, start_symbol = <span class=\"n\">nil</span>, end_symbol = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/ngrams.cr#L21","def":{"name":"multigrams","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"start_symbol","doc":null,"default_value":"nil","external_name":"start_symbol","restriction":""},{"name":"end_symbol","doc":null,"default_value":"nil","external_name":"end_symbol","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ngrams(sequence, n, start_symbol, end_symbol)"}},{"id":"ngrams(sequence,n,start_symbol=nil,end_symbol=nil)-instance-method","html_id":"ngrams(sequence,n,start_symbol=nil,end_symbol=nil)-instance-method","name":"ngrams","doc":null,"summary":null,"abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"start_symbol","doc":null,"default_value":"nil","external_name":"start_symbol","restriction":""},{"name":"end_symbol","doc":null,"default_value":"nil","external_name":"end_symbol","restriction":""}],"args_string":"(sequence, n, start_symbol = <span class=\"n\">nil</span>, end_symbol = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/ngrams.cr#L25","def":{"name":"ngrams","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"start_symbol","doc":null,"default_value":"nil","external_name":"start_symbol","restriction":""},{"name":"end_symbol","doc":null,"default_value":"nil","external_name":"end_symbol","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = [] of Array(String)\nif sequence.is_a?(Array)\nelse\n  sequence = @@tokenizer.tokenize(sequence)\nend\nsequence = sequence.not_nil!\ncount = [0, (sequence.size - n) + 1].max\nif start_symbol.nil?\nelse\n  blanks = [start_symbol] * n\n  (1...n).to_a.reverse.each do |p|\n    result.push(blanks[0, p] + sequence[0, n - p])\n  end\nend\n(0...count).each do |i|\n  result.push(sequence[i...(i + n)])\nend\nif end_symbol.nil?\nelse\n  blanks = [end_symbol] * n\n  (1...n).to_a.reverse.each do |p|\n    result.push(sequence[sequence.size - p, sequence.size] + blanks[0, n - p])\n  end\nend\nresult\n"}},{"id":"tokenizer=(tokenizer:Cadmium::Tokenizer::TokenizerBase)-instance-method","html_id":"tokenizer=(tokenizer:Cadmium::Tokenizer::TokenizerBase)-instance-method","name":"tokenizer=","doc":null,"summary":null,"abstract":false,"args":[{"name":"tokenizer","doc":null,"default_value":"","external_name":"tokenizer","restriction":"Cadmium::Tokenizer::TokenizerBase"}],"args_string":"(tokenizer : Cadmium::Tokenizer::TokenizerBase)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/ngrams.cr#L9","def":{"name":"tokenizer=","args":[{"name":"tokenizer","doc":null,"default_value":"","external_name":"tokenizer","restriction":"Cadmium::Tokenizer::TokenizerBase"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@tokenizer = tokenizer"}},{"id":"trigrams(sequence,start_symbol=nil,end_symbol=nil)-instance-method","html_id":"trigrams(sequence,start_symbol=nil,end_symbol=nil)-instance-method","name":"trigrams","doc":null,"summary":null,"abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""},{"name":"start_symbol","doc":null,"default_value":"nil","external_name":"start_symbol","restriction":""},{"name":"end_symbol","doc":null,"default_value":"nil","external_name":"end_symbol","restriction":""}],"args_string":"(sequence, start_symbol = <span class=\"n\">nil</span>, end_symbol = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/ngrams.cr#L17","def":{"name":"trigrams","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":""},{"name":"start_symbol","doc":null,"default_value":"nil","external_name":"start_symbol","restriction":""},{"name":"end_symbol","doc":null,"default_value":"nil","external_name":"end_symbol","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ngrams(sequence, 3, start_symbol, end_symbol)"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Normalizers","path":"Cadmium/Normalizers.html","kind":"module","full_name":"Cadmium::Normalizers","name":"Normalizers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/normalizers/remove_diacritics.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/normalizers/remove_diacritics.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Normalizers/RemoveDiacritics","path":"Cadmium/Normalizers/RemoveDiacritics.html","kind":"module","full_name":"Cadmium::Normalizers::RemoveDiacritics","name":"RemoveDiacritics","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/normalizers/remove_diacritics.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/normalizers/remove_diacritics.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DIACRITICS","name":"DIACRITICS","value":"[{base: \"A\", letters: Regex.new(\"AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ]/\")}, {base: \"AA\", letters: Regex.new(\"Ꜳ]/\")}, {base: \"AE\", letters: Regex.new(\"ÆǼǢ]/\")}, {base: \"AO\", letters: Regex.new(\"Ꜵ]/\")}, {base: \"AU\", letters: Regex.new(\"Ꜷ]/\")}, {base: \"AV\", letters: Regex.new(\"ꜸꜺ]/\")}, {base: \"AY\", letters: Regex.new(\"Ꜽ]/\")}, {base: \"B\", letters: Regex.new(\"BⒷＢḂḄḆɃƂƁ]/\")}, {base: \"C\", letters: Regex.new(\"CⒸＣĆĈĊČÇḈƇȻꜾ]/\")}, {base: \"D\", letters: Regex.new(\"DⒹＤḊĎḌḐḒḎĐƋƊƉꝹ]/\")}, {base: \"DZ\", letters: Regex.new(\"ǱǄ]/\")}, {base: \"Dz\", letters: Regex.new(\"ǲǅ]/\")}, {base: \"E\", letters: Regex.new(\"EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ]/\")}, {base: \"F\", letters: Regex.new(\"FⒻＦḞƑꝻ]/\")}, {base: \"G\", letters: Regex.new(\"GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ]/\")}, {base: \"H\", letters: Regex.new(\"HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ]/\")}, {base: \"I\", letters: Regex.new(\"IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ]/\")}, {base: \"J\", letters: Regex.new(\"JⒿＪĴɈ]/\")}, {base: \"K\", letters: Regex.new(\"KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ]/\")}, {base: \"L\", letters: Regex.new(\"LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ]/\")}, {base: \"LJ\", letters: Regex.new(\"Ǉ]/\")}, {base: \"Lj\", letters: Regex.new(\"ǈ]/\")}, {base: \"M\", letters: Regex.new(\"MⓂＭḾṀṂⱮƜ]/\")}, {base: \"N\", letters: Regex.new(\"NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ]/\")}, {base: \"NJ\", letters: Regex.new(\"Ǌ]/\")}, {base: \"Nj\", letters: Regex.new(\"ǋ]/\")}, {base: \"O\", letters: Regex.new(\"OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ]/\")}, {base: \"OE\", letters: Regex.new(\"Œ]/\")}, {base: \"OI\", letters: Regex.new(\"Ƣ]/\")}, {base: \"OO\", letters: Regex.new(\"Ꝏ]/\")}, {base: \"OU\", letters: Regex.new(\"Ȣ]/\")}, {base: \"P\", letters: Regex.new(\"PⓅＰṔṖƤⱣꝐꝒꝔ]/\")}, {base: \"Q\", letters: Regex.new(\"QⓆＱꝖꝘɊ]/\")}, {base: \"R\", letters: Regex.new(\"RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ]/\")}, {base: \"S\", letters: Regex.new(\"SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ]/\")}, {base: \"T\", letters: Regex.new(\"TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ]/\")}, {base: \"TZ\", letters: Regex.new(\"Ꜩ]/\")}, {base: \"U\", letters: Regex.new(\"UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ]/\")}, {base: \"V\", letters: Regex.new(\"VⓋＶṼṾƲꝞɅ]/\")}, {base: \"VY\", letters: Regex.new(\"Ꝡ]/\")}, {base: \"W\", letters: Regex.new(\"WⓌＷẀẂŴẆẄẈⱲ]/\")}, {base: \"X\", letters: Regex.new(\"XⓍＸẊẌ]/\")}, {base: \"Y\", letters: Regex.new(\"YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ]/\")}, {base: \"Z\", letters: Regex.new(\"ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ]/\")}, {base: \"a\", letters: Regex.new(\"aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ]/\")}, {base: \"aa\", letters: Regex.new(\"ꜳ]/\")}, {base: \"ae\", letters: Regex.new(\"æǽǣ]/\")}, {base: \"ao\", letters: Regex.new(\"ꜵ]/\")}, {base: \"au\", letters: Regex.new(\"ꜷ]/\")}, {base: \"av\", letters: Regex.new(\"ꜹꜻ]/\")}, {base: \"ay\", letters: Regex.new(\"ꜽ]/\")}, {base: \"b\", letters: Regex.new(\"bⓑｂḃḅḇƀƃɓ]/\")}, {base: \"c\", letters: Regex.new(\"cⓒｃćĉċčçḉƈȼꜿↄ]/\")}, {base: \"d\", letters: Regex.new(\"dⓓｄḋďḍḑḓḏđƌɖɗꝺ]/\")}, {base: \"dz\", letters: Regex.new(\"ǳǆ]/\")}, {base: \"e\", letters: Regex.new(\"eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ]/\")}, {base: \"f\", letters: Regex.new(\"fⓕｆḟƒꝼ]/\")}, {base: \"g\", letters: Regex.new(\"gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ]/\")}, {base: \"h\", letters: Regex.new(\"hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ]/\")}, {base: \"hv\", letters: Regex.new(\"ƕ]/\")}, {base: \"i\", letters: Regex.new(\"iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı]/\")}, {base: \"j\", letters: Regex.new(\"jⓙｊĵǰɉ]/\")}, {base: \"k\", letters: Regex.new(\"kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ]/\")}, {base: \"l\", letters: Regex.new(\"lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ]/\")}, {base: \"lj\", letters: Regex.new(\"ǉ]/\")}, {base: \"m\", letters: Regex.new(\"mⓜｍḿṁṃɱɯ]/\")}, {base: \"n\", letters: Regex.new(\"nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ]/\")}, {base: \"nj\", letters: Regex.new(\"ǌ]/\")}, {base: \"o\", letters: Regex.new(\"oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ]/\")}, {base: \"oe\", letters: Regex.new(\"œ]/\")}, {base: \"oi\", letters: Regex.new(\"ƣ]/\")}, {base: \"ou\", letters: Regex.new(\"ȣ]/\")}, {base: \"oo\", letters: Regex.new(\"ꝏ]/\")}, {base: \"p\", letters: Regex.new(\"pⓟｐṕṗƥᵽꝑꝓꝕ]/\")}, {base: \"q\", letters: Regex.new(\"qⓠｑɋꝗꝙ]/\")}, {base: \"r\", letters: Regex.new(\"rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ]/\")}, {base: \"s\", letters: Regex.new(\"sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ]/\")}, {base: \"t\", letters: Regex.new(\"tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ]/\")}, {base: \"tz\", letters: Regex.new(\"ꜩ]/\")}, {base: \"u\", letters: Regex.new(\"uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ]/\")}, {base: \"v\", letters: Regex.new(\"vⓥｖṽṿʋꝟʌ]/\")}, {base: \"vy\", letters: Regex.new(\"ꝡ]/\")}, {base: \"w\", letters: Regex.new(\"wⓦｗẁẃŵẇẅẘẉⱳ]/\")}, {base: \"x\", letters: Regex.new(\"xⓧｘẋẍ]/\")}, {base: \"y\", letters: Regex.new(\"yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ]/\")}, {base: \"z\", letters: Regex.new(\"zⓩｚźẑżžẓẕƶȥɀⱬꝣ]/\")}]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/AggressiveTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::AggressiveTokenizer","name":"AggressiveTokenizer"}],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Normalizers","kind":"module","full_name":"Cadmium::Normalizers","name":"Normalizers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"remove_diacritics(str:String)-instance-method","html_id":"remove_diacritics(str:String)-instance-method","name":"remove_diacritics","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/normalizers/remove_diacritics.cr#L93","def":{"name":"remove_diacritics","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DIACRITICS.each do |rule|\n  str = str.gsub(rule[:letters], rule[:base])\nend\nstr\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics","path":"Cadmium/Phonetics.html","kind":"class","full_name":"Cadmium::Phonetics","name":"Phonetics","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Util/StopWords","kind":"module","full_name":"Cadmium::Util::StopWords","name":"StopWords"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/phonetics/metaphone.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr"},{"filename":"cadmium/phonetics/soundex.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr"},{"filename":"cadmium/phonetics.cr","line_number":6,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/Util/StopWords","kind":"module","full_name":"Cadmium::Util::StopWords","name":"StopWords"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics/Metaphone","kind":"class","full_name":"Cadmium::Phonetics::Metaphone","name":"Metaphone"},{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics/SoundEx","kind":"class","full_name":"Cadmium::Phonetics::SoundEx","name":"SoundEx"}],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[{"id":"compare(word1,word2)-class-method","html_id":"compare(word1,word2)-class-method","name":"compare","doc":null,"summary":null,"abstract":false,"args":[{"name":"word1","doc":null,"default_value":"","external_name":"word1","restriction":""},{"name":"word2","doc":null,"default_value":"","external_name":"word2","restriction":""}],"args_string":"(word1, word2)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics.cr#L11","def":{"name":"compare","args":[{"name":"word1","doc":null,"default_value":"","external_name":"word1","restriction":""},{"name":"word2","doc":null,"default_value":"","external_name":"word2","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(process(word1)) == (process(word2))"}},{"id":"tokenize_and_phoneticize(word,keep_stops=false)-class-method","html_id":"tokenize_and_phoneticize(word,keep_stops=false)-class-method","name":"tokenize_and_phoneticize","doc":null,"summary":null,"abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""},{"name":"keep_stops","doc":null,"default_value":"false","external_name":"keep_stops","restriction":""}],"args_string":"(word, keep_stops = <span class=\"n\">false</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics.cr#L15","def":{"name":"tokenize_and_phoneticize","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""},{"name":"keep_stops","doc":null,"default_value":"false","external_name":"keep_stops","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"phoneticized_tokens = [] of String\n(@@tokenizer.tokenize(word)).each do |token|\n  if keep_stops || ((@@stop_words.includes?(token)) == false)\n    phoneticized_tokens.push(process(token))\n  end\nend\nphoneticized_tokens\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics/Metaphone","path":"Cadmium/Phonetics/Metaphone.html","kind":"class","full_name":"Cadmium::Phonetics::Metaphone","name":"Metaphone","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics","kind":"class","full_name":"Cadmium::Phonetics","name":"Phonetics"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics","kind":"class","full_name":"Cadmium::Phonetics","name":"Phonetics"},{"html_id":"github.com/watzon/cadmium/Cadmium/Util/StopWords","kind":"module","full_name":"Cadmium::Util::StopWords","name":"StopWords"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/phonetics/metaphone.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics","kind":"class","full_name":"Cadmium::Phonetics","name":"Phonetics"},"doc":null,"summary":null,"class_methods":[{"id":"c_transform(token)-class-method","html_id":"c_transform(token)-class-method","name":"c_transform","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L52","def":{"name":"c_transform","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token = (token.gsub(/([^s]|^)(c)(h)/, \"\\\\1x\\\\3\")).strip\ntoken = token.gsub(/cia/, \"xia\")\ntoken = token.gsub(/c(i|e|y)/, \"s\\\\1\")\ntoken = token.gsub(/c/, \"k\")\ntoken\n"}},{"id":"d_transform(token)-class-method","html_id":"d_transform(token)-class-method","name":"d_transform","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L62","def":{"name":"d_transform","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token = token.gsub(/d(ge|gy|gi)/, \"j\\\\1\")\ntoken = token.gsub(/d/, \"t\")\ntoken\n"}},{"id":"dedup(token)-class-method","html_id":"dedup(token)-class-method","name":"dedup","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L37","def":{"name":"dedup","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/([^c])\\1/, \"\\\\1\")"}},{"id":"drop_b_after_m_at_end(token)-class-method","html_id":"drop_b_after_m_at_end(token)-class-method","name":"drop_b_after_m_at_end","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L48","def":{"name":"drop_b_after_m_at_end","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.sub(/mb$/, \"m\")"}},{"id":"drop_g(token)-class-method","html_id":"drop_g(token)-class-method","name":"drop_g","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L68","def":{"name":"drop_g","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token = token.gsub(/gh(^$|[^aeiou])/, \"h\\\\1\")\ntoken = token.gsub(/g(n|ned)$/, \"\\\\1\")\ntoken\n"}},{"id":"drop_h(token)-class-method","html_id":"drop_h(token)-class-method","name":"drop_h","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L82","def":{"name":"drop_h","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/([aeiou])h([^aeiou]|$)/, \"\\\\1\\\\2\")"}},{"id":"drop_initial_letters(token)-class-method","html_id":"drop_initial_letters(token)-class-method","name":"drop_initial_letters","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L41","def":{"name":"drop_initial_letters","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if token.match(/^(kn|gn|pn|ae|wr)/)\n  return token[1..-1]\nend\ntoken\n"}},{"id":"drop_t(token)-class-method","html_id":"drop_t(token)-class-method","name":"drop_t","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L108","def":{"name":"drop_t","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/tch/, \"ch\")"}},{"id":"drop_vowels(token)-class-method","html_id":"drop_vowels(token)-class-method","name":"drop_vowels","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L138","def":{"name":"drop_vowels","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token[0] + (token[1..-1].gsub(/[aeiou]/, \"\"))"}},{"id":"drop_w(token)-class-method","html_id":"drop_w(token)-class-method","name":"drop_w","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L120","def":{"name":"drop_w","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/w([^aeiou]|$)/, \"\\\\1\")"}},{"id":"drop_y(token)-class-method","html_id":"drop_y(token)-class-method","name":"drop_y","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L130","def":{"name":"drop_y","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/y([^aeiou]|$)/, \"\\\\1\")"}},{"id":"process(token,max_length=nil)-class-method","html_id":"process(token,max_length=nil)-class-method","name":"process","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"max_length","doc":null,"default_value":"nil","external_name":"max_length","restriction":""}],"args_string":"(token, max_length = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L4","def":{"name":"process","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"max_length","doc":null,"default_value":"nil","external_name":"max_length","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"max_length || (max_length = 32)\ntoken = token.downcase\ntoken = dedup(token)\ntoken = drop_initial_letters(token)\ntoken = drop_b_after_m_at_end(token)\ntoken = transform_ck(token)\ntoken = c_transform(token)\ntoken = d_transform(token)\ntoken = drop_g(token)\ntoken = transform_g(token)\ntoken = drop_h(token)\ntoken = transform_ph(token)\ntoken = transform_q(token)\ntoken = transform_s(token)\ntoken = transform_x(token)\ntoken = transform_t(token)\ntoken = drop_t(token)\ntoken = transform_v(token)\ntoken = transform_wh(token)\ntoken = drop_w(token)\ntoken = drop_y(token)\ntoken = transform_z(token)\ntoken = drop_vowels(token)\ntoken = token.upcase\nif max_length && token.size > max_length\n  token = token[0, max_length]\nend\ntoken\n"}},{"id":"transform_ck(token)-class-method","html_id":"transform_ck(token)-class-method","name":"transform_ck","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L86","def":{"name":"transform_ck","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/ck/, \"k\")"}},{"id":"transform_g(token)-class-method","html_id":"transform_g(token)-class-method","name":"transform_g","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L74","def":{"name":"transform_g","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token = token.gsub(/gh/, \"f\")\ntoken = token.gsub(/([^g]|^)(g)(i|e|y)/, \"\\\\1j\\\\3\")\ntoken = token.gsub(/gg/, \"g\")\ntoken = token.gsub(/g/, \"k\")\ntoken\n"}},{"id":"transform_ph(token)-class-method","html_id":"transform_ph(token)-class-method","name":"transform_ph","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L90","def":{"name":"transform_ph","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/ph/, \"f\")"}},{"id":"transform_q(token)-class-method","html_id":"transform_q(token)-class-method","name":"transform_q","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L94","def":{"name":"transform_q","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/q/, \"k\")"}},{"id":"transform_s(token)-class-method","html_id":"transform_s(token)-class-method","name":"transform_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L98","def":{"name":"transform_s","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/s(h|io|ia)/, \"x\\\\1\")"}},{"id":"transform_t(token)-class-method","html_id":"transform_t(token)-class-method","name":"transform_t","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L102","def":{"name":"transform_t","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token = token.gsub(/t(ia|io)/, \"x\\\\1\")\ntoken = token.gsub(/th/, \"0\")\ntoken\n"}},{"id":"transform_v(token)-class-method","html_id":"transform_v(token)-class-method","name":"transform_v","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L112","def":{"name":"transform_v","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/v/, \"f\")"}},{"id":"transform_wh(token)-class-method","html_id":"transform_wh(token)-class-method","name":"transform_wh","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L116","def":{"name":"transform_wh","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/^wh/, \"w\")"}},{"id":"transform_x(token)-class-method","html_id":"transform_x(token)-class-method","name":"transform_x","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L124","def":{"name":"transform_x","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token = token.gsub(/^x/, \"s\")\ntoken = token.gsub(/x/, \"ks\")\ntoken\n"}},{"id":"transform_z(token)-class-method","html_id":"transform_z(token)-class-method","name":"transform_z","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/metaphone.cr#L134","def":{"name":"transform_z","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/z/, \"s\")"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics/SoundEx","path":"Cadmium/Phonetics/SoundEx.html","kind":"class","full_name":"Cadmium::Phonetics::SoundEx","name":"SoundEx","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics","kind":"class","full_name":"Cadmium::Phonetics","name":"Phonetics"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics","kind":"class","full_name":"Cadmium::Phonetics","name":"Phonetics"},{"html_id":"github.com/watzon/cadmium/Cadmium/Util/StopWords","kind":"module","full_name":"Cadmium::Util::StopWords","name":"StopWords"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/phonetics/soundex.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics","kind":"class","full_name":"Cadmium::Phonetics","name":"Phonetics"},"doc":null,"summary":null,"class_methods":[{"id":"condense(token)-class-method","html_id":"condense(token)-class-method","name":"condense","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr#L36","def":{"name":"condense","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/(\\d)?\\1+/, \"\\\\1\")"}},{"id":"pad_right_0(token)-class-method","html_id":"pad_right_0(token)-class-method","name":"pad_right_0","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr#L40","def":{"name":"pad_right_0","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if token.size < 4\n  token + (\"0\" * (3 - token.size))\nelse\n  token\nend"}},{"id":"process(token,max_length=nil)-class-method","html_id":"process(token,max_length=nil)-class-method","name":"process","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"max_length","doc":null,"default_value":"nil","external_name":"max_length","restriction":""}],"args_string":"(token, max_length = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr#L4","def":{"name":"process","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"max_length","doc":null,"default_value":"nil","external_name":"max_length","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token = token.downcase\ntransformed = condense(transform(token[0..-1]))\ntransformed = transformed.sub(Regex.new(\"^#{transformed[0]}\"), \"\")\ntoken[0].upcase + (pad_right_0(transformed.gsub(/\\D/, \"\")))[0, (max_length && (max_length - 1)) || 3]\n"}},{"id":"transform(token)-class-method","html_id":"transform(token)-class-method","name":"transform","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr#L48","def":{"name":"transform","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"transform_lips(transform_throats(transform_tongue(transform_l(transform_hum(transform_r(token))))))"}},{"id":"transform_hum(token)-class-method","html_id":"transform_hum(token)-class-method","name":"transform_hum","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr#L28","def":{"name":"transform_hum","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/[mn]/, \"5\")"}},{"id":"transform_l(token)-class-method","html_id":"transform_l(token)-class-method","name":"transform_l","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr#L24","def":{"name":"transform_l","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/[l]/, \"4\")"}},{"id":"transform_lips(token)-class-method","html_id":"transform_lips(token)-class-method","name":"transform_lips","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr#L12","def":{"name":"transform_lips","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/[bfpv]/, \"1\")"}},{"id":"transform_r(token)-class-method","html_id":"transform_r(token)-class-method","name":"transform_r","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr#L32","def":{"name":"transform_r","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/r/, \"6\")"}},{"id":"transform_throats(token)-class-method","html_id":"transform_throats(token)-class-method","name":"transform_throats","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr#L16","def":{"name":"transform_throats","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/[cgjkqsxz]/, \"2\")"}},{"id":"transform_tongue(token)-class-method","html_id":"transform_tongue(token)-class-method","name":"transform_tongue","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics/soundex.cr#L20","def":{"name":"transform_tongue","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token.gsub(/[dt]/, \"3\")"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics/StringExtension","path":"Cadmium/Phonetics/StringExtension.html","kind":"module","full_name":"Cadmium::Phonetics::StringExtension","name":"StringExtension","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/phonetics.cr","line_number":25,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/cadmium/String","kind":"class","full_name":"String","name":"String"}],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics","kind":"class","full_name":"Cadmium::Phonetics","name":"Phonetics"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"phonetics(max_length=nil,phonetics=Cadmium::Phonetics::Metaphone)-instance-method","html_id":"phonetics(max_length=nil,phonetics=Cadmium::Phonetics::Metaphone)-instance-method","name":"phonetics","doc":null,"summary":null,"abstract":false,"args":[{"name":"max_length","doc":null,"default_value":"nil","external_name":"max_length","restriction":""},{"name":"phonetics","doc":null,"default_value":"Cadmium::Phonetics::Metaphone","external_name":"phonetics","restriction":""}],"args_string":"(max_length = <span class=\"n\">nil</span>, phonetics = <span class=\"t\">Cadmium</span><span class=\"t\">::</span><span class=\"t\">Phonetics</span><span class=\"t\">::</span><span class=\"t\">Metaphone</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics.cr#L26","def":{"name":"phonetics","args":[{"name":"max_length","doc":null,"default_value":"nil","external_name":"max_length","restriction":""},{"name":"phonetics","doc":null,"default_value":"Cadmium::Phonetics::Metaphone","external_name":"phonetics","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"phonetics.process(self, max_length)"}},{"id":"sounds_like(word,phonetics=Cadmium::Phonetics::Metaphone)-instance-method","html_id":"sounds_like(word,phonetics=Cadmium::Phonetics::Metaphone)-instance-method","name":"sounds_like","doc":null,"summary":null,"abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""},{"name":"phonetics","doc":null,"default_value":"Cadmium::Phonetics::Metaphone","external_name":"phonetics","restriction":""}],"args_string":"(word, phonetics = <span class=\"t\">Cadmium</span><span class=\"t\">::</span><span class=\"t\">Phonetics</span><span class=\"t\">::</span><span class=\"t\">Metaphone</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics.cr#L30","def":{"name":"sounds_like","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""},{"name":"phonetics","doc":null,"default_value":"Cadmium::Phonetics::Metaphone","external_name":"phonetics","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"phonetics.compare(self, word)"}},{"id":"tokenize_and_phoneticize(keep_stops=false,phonetics=Cadmium::Phonetics::Metaphone)-instance-method","html_id":"tokenize_and_phoneticize(keep_stops=false,phonetics=Cadmium::Phonetics::Metaphone)-instance-method","name":"tokenize_and_phoneticize","doc":null,"summary":null,"abstract":false,"args":[{"name":"keep_stops","doc":null,"default_value":"false","external_name":"keep_stops","restriction":""},{"name":"phonetics","doc":null,"default_value":"Cadmium::Phonetics::Metaphone","external_name":"phonetics","restriction":""}],"args_string":"(keep_stops = <span class=\"n\">false</span>, phonetics = <span class=\"t\">Cadmium</span><span class=\"t\">::</span><span class=\"t\">Phonetics</span><span class=\"t\">::</span><span class=\"t\">Metaphone</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/phonetics.cr#L34","def":{"name":"tokenize_and_phoneticize","args":[{"name":"keep_stops","doc":null,"default_value":"false","external_name":"keep_stops","restriction":""},{"name":"phonetics","doc":null,"default_value":"Cadmium::Phonetics::Metaphone","external_name":"phonetics","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"phonetics.tokenize_and_phoneticize(self, keep_stops)"}}],"macros":[],"types":[]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Readability","path":"Cadmium/Readability.html","kind":"class","full_name":"Cadmium::Readability","name":"Readability","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/readability.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":"A syntactical analyzer that helps determine the readibility\nof a block of text.","summary":"<p>A syntactical analyzer that helps determine the readibility of a block of text.</p>","class_methods":[],"constructors":[{"id":"new(text)-class-method","html_id":"new(text)-class-method","name":"new","doc":"The constructor accepts the text to be analysed, and returns a report\nobject which gives access to the","summary":"<p>The constructor accepts the text to be analysed, and returns a report object which gives access to the</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"args_string":"(text)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L13","def":{"name":"new","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(text)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"flesch-instance-method","html_id":"flesch-instance-method","name":"flesch","doc":"Flesch reading ease of the text sample. A higher score indicates text\nthat is easier to read. The score is on a 100-point scale, and a score\nof 60-70 is regarded as optimal for ordinary text.","summary":"<p>Flesch reading ease of the text sample.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L92","def":{"name":"flesch","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(206.835 - (1.015 * words_per_sentence)) - (84.6 * syllables_per_word)"}},{"id":"fog-instance-method","html_id":"fog-instance-method","name":"fog","doc":"The Gunning Fog Index of the text sample. The index indicates the number\nof years of formal education that a reader of average intelligence would\nneed to comprehend the text. A higher score indicates harder text; a\nvalue of around 12 is indicated as ideal for ordinary text.","summary":"<p>The Gunning Fog Index of the text sample.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L100","def":{"name":"fog","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(words_per_sentence + percent_fog_complex_words) * 0.4"}},{"id":"frequencies:Hash(String,Int32)-instance-method","html_id":"frequencies:Hash(String,Int32)-instance-method","name":"frequencies","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Int32)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L11","def":{"name":"frequencies","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Int32)","visibility":"Public","body":"@frequencies"}},{"id":"kincaid-instance-method","html_id":"kincaid-instance-method","name":"kincaid","doc":"Flesch-Kincaid level of the text sample. This measure scores text based\non the American school grade system; a score of 7.0 would indicate that\nthe text is readable by a seventh grader. A score of 7.0 to 8.0 is\nregarded as optimal for ordinary text.","summary":"<p>Flesch-Kincaid level of the text sample.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L85","def":{"name":"kincaid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((11.8 * syllables_per_word) + (0.39 * words_per_sentence)) - 15.59"}},{"id":"num_chars-instance-method","html_id":"num_chars-instance-method","name":"num_chars","doc":"The number of characters in the sample.","summary":"<p>The number of characters in the sample.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L38","def":{"name":"num_chars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"text.size"}},{"id":"num_paragraphs-instance-method","html_id":"num_paragraphs-instance-method","name":"num_paragraphs","doc":"The number of paragraphs in the sample. A paragraph is defined as a\nnewline followed by one or more empty or whitespace-only lines.","summary":"<p>The number of paragraphs in the sample.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L27","def":{"name":"num_paragraphs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"paragraphs.size"}},{"id":"num_sentences-instance-method","html_id":"num_sentences-instance-method","name":"num_sentences","doc":"The number of sentences in the sample. The meaning of a \"sentence\" is\ndefined by Cadmium::Util::Sentence.","summary":"<p>The number of sentences in the sample.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L33","def":{"name":"num_sentences","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sentences.size"}},{"id":"num_syllables:Int32-instance-method","html_id":"num_syllables:Int32-instance-method","name":"num_syllables","doc":"The total number of syllables in the text sample. Just for completeness.","summary":"<p>The total number of syllables in the text sample.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L49","def":{"name":"num_syllables","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@syllables"}},{"id":"num_unique_words-instance-method","html_id":"num_unique_words-instance-method","name":"num_unique_words","doc":"The number of different unique words used in the text sample.","summary":"<p>The number of different unique words used in the text sample.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L54","def":{"name":"num_unique_words","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@frequencies.keys.size"}},{"id":"num_words-instance-method","html_id":"num_words-instance-method","name":"num_words","doc":"The total number of words used in the sample. Numbers as digits are not\ncounted.","summary":"<p>The total number of words used in the sample.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L44","def":{"name":"num_words","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"words.size"}},{"id":"occurrences(word)-instance-method","html_id":"occurrences(word)-instance-method","name":"occurrences","doc":"The number of occurences of the word +word+ in the text sample.","summary":"<p>The number of occurences of the word +word+ in the text sample.</p>","abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"args_string":"(word)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L64","def":{"name":"occurrences","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@frequencies[word]"}},{"id":"paragraphs:Array(String)-instance-method","html_id":"paragraphs:Array(String)-instance-method","name":"paragraphs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L8","def":{"name":"paragraphs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@paragraphs"}},{"id":"percent_fog_complex_words-instance-method","html_id":"percent_fog_complex_words-instance-method","name":"percent_fog_complex_words","doc":"The percentage of words that are defined as \"complex\" for the purpose of\nthe Fog Index. This is non-hyphenated words of three or more syllabes.","summary":"<p>The percentage of words that are defined as \"complex\" for the purpose of the Fog Index.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L106","def":{"name":"percent_fog_complex_words","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@complex_words.to_f / words.size.to_f) * 100"}},{"id":"report-instance-method","html_id":"report-instance-method","name":"report","doc":"Return a nicely formatted report on the sample, showing most the useful\nstatistics about the text sample.","summary":"<p>Return a nicely formatted report on the sample, showing most the useful statistics about the text sample.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L112","def":{"name":"report","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sprintf((((((((\"Number of paragraphs           %d \\n\" + \"Number of sentences            %d \\n\") + \"Number of words                %d \\n\") + \"Number of characters           %d \\n\\n\") + \"Average words per sentence     %.2f \\n\") + \"Average syllables per word     %.2f \\n\\n\") + \"Flesch score                   %2.2f \\n\") + \"Flesch-Kincaid grade level     %2.2f \\n\") + \"Fog Index                      %2.2f \\n\", num_paragraphs, num_sentences, num_words, num_chars, words_per_sentence, syllables_per_word, flesch, kincaid, fog)"}},{"id":"sentences:Array(String)-instance-method","html_id":"sentences:Array(String)-instance-method","name":"sentences","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L9","def":{"name":"sentences","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@sentences"}},{"id":"syllables_per_word-instance-method","html_id":"syllables_per_word-instance-method","name":"syllables_per_word","doc":"The average number of syllables per word. The syllable count is\nperformed by Cadmium::Util::Syllable, and so may not be completely\naccurate, especially if the Carnegie-Mellon Pronouncing Dictionary\nis not installed.","summary":"<p>The average number of syllables per word.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L77","def":{"name":"syllables_per_word","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@syllables.to_f / words.size.to_f"}},{"id":"text:String-instance-method","html_id":"text:String-instance-method","name":"text","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L7","def":{"name":"text","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@text"}},{"id":"unique_words-instance-method","html_id":"unique_words-instance-method","name":"unique_words","doc":"An array containing each unique word used in the text sample.","summary":"<p>An array containing each unique word used in the text sample.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L59","def":{"name":"unique_words","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@frequencies.keys"}},{"id":"words:Array(String)-instance-method","html_id":"words:Array(String)-instance-method","name":"words","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L10","def":{"name":"words","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@words"}},{"id":"words_per_sentence-instance-method","html_id":"words_per_sentence-instance-method","name":"words_per_sentence","doc":"The average number of words per sentence.","summary":"<p>The average number of words per sentence.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/readability.cr#L69","def":{"name":"words_per_sentence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"words.size.to_f / sentences.size.to_f"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Sentiment","path":"Cadmium/Sentiment.html","kind":"module","full_name":"Cadmium::Sentiment","name":"Sentiment","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/sentiment.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/sentiment.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NEGATORS","name":"NEGATORS","value":"{\"cant\" => 1, \"can't\" => 1, \"dont\" => 1, \"don't\" => 1, \"doesnt\" => 1, \"doesn't\" => 1, \"not\" => 1, \"non\" => 1, \"wont\" => 1, \"won't\" => 1, \"isnt\" => 1, \"isn't\" => 1, \"wasnt\" => 1, \"wasn't\" => 1}","doc":"Negate the next word in the phrase.","summary":"<p>Negate the next word in the phrase.</p>"}],"included_modules":[],"extended_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/Sentiment","kind":"module","full_name":"Cadmium::Sentiment","name":"Sentiment"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":"Uses sentiment analysis to score a sentence's \"feeling\". `Cadmium::Sentiment`\nalso takes advantage of emojis to further increase accuracy.","summary":"<p>Uses sentiment analysis to score a sentence's \"feeling\".</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"analyze(phrase,inject=nil)-instance-method","html_id":"analyze(phrase,inject=nil)-instance-method","name":"analyze","doc":"Analyze a phrase and return a `result` hash comprised of a score,\ncomparative analysis (a score based soley on number of negative\nand positive words), tokens, words, positive (positive words),\nand negative (negative words).\n\n```\npp Cadmium::Sentiment.analyze(\"You are a piece of 💩\")\n# => {score: -1,\n#     comparative: -1,\n#     tokens: [\"You\", \"are\", \"a\", \"piece\", \"of\", \"💩\"],\n#     words: [\"💩\"],\n#     positive: [],\n#     negative: [\"💩\"]}\n```","summary":"<p>Analyze a phrase and return a <code>result</code> hash comprised of a score, comparative analysis (a score based soley on number of negative and positive words), tokens, words, positive (positive words), and negative (negative words).</p>","abstract":false,"args":[{"name":"phrase","doc":null,"default_value":"","external_name":"phrase","restriction":""},{"name":"inject","doc":null,"default_value":"nil","external_name":"inject","restriction":""}],"args_string":"(phrase, inject = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/sentiment.cr#L42","def":{"name":"analyze","args":[{"name":"phrase","doc":null,"default_value":"","external_name":"phrase","restriction":""},{"name":"inject","doc":null,"default_value":"nil","external_name":"inject","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"data = (@@data.split(\"\\n\")).map do |d|\n  arr = (d.split(/\\s+/)).reject(&.empty?)\n  str = [] of String\n  int = 1\n  arr.each do |item|\n    if item.to_i do\n      nil\n    end\n      int = item\n    else\n      str.push(item)\n    end\n  end\n  [str.join(\" \"), int]\nend.reject(&.empty?)\nif inject.is_a?(Array)\n  data = data + inject\nend\ndata = data.to_h\nif inject.is_a?(Hash) || inject.is_a?(NamedTuple)\n  data = inject.to_h.merge(data)\nend\ntokens = @@tokenizer.tokenize(phrase)\nscore = 0\nwords = [] of String\npositive = [] of String\nnegative = [] of String\n(0..(tokens.size - 1)).each do |i|\n  obj = tokens[i]\n  item = data[obj]? ? data[obj].to_i : nil\n  if item\n  else\n    next\n  end\n  if i > 0\n    prev_token = tokens[i - 1]\n    if NEGATORS.includes?(prev_token)\n      item = -item\n    end\n  end\n  words.push(obj)\n  if item > 0\n    positive.push(obj)\n  end\n  if item < 0\n    negative.push(obj)\n  end\n  score = score + item\nend\nresult = {score: score, comparative: tokens.size > 0 ? score / tokens.size : 0, tokens: tokens, words: words, positive: positive, negative: negative}\nresult\n"}}],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Sentiment/StringExtension","path":"Cadmium/Sentiment/StringExtension.html","kind":"module","full_name":"Cadmium::Sentiment::StringExtension","name":"StringExtension","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/sentiment.cr","line_number":106,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/sentiment.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/cadmium/String","kind":"class","full_name":"String","name":"String"}],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Sentiment","kind":"module","full_name":"Cadmium::Sentiment","name":"Sentiment"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"is_negative?-instance-method","html_id":"is_negative?-instance-method","name":"is_negative?","doc":"Determines if a string is more negative than positive.\nReturns `Bool`.","summary":"<p>Determines if a string is more negative than positive.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/sentiment.cr#L122","def":{"name":"is_negative?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sentiment = self.sentiment\nsentiment[:negative] > sentiment[:positive]\n"}},{"id":"is_positive?-instance-method","html_id":"is_positive?-instance-method","name":"is_positive?","doc":"Determines if a string is more positive than negative.\nReturns `Bool`.","summary":"<p>Determines if a string is more positive than negative.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/sentiment.cr#L115","def":{"name":"is_positive?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sentiment = self.sentiment\nsentiment[:positive] > sentiment[:negative]\n"}},{"id":"sentiment(inject=nil)-instance-method","html_id":"sentiment(inject=nil)-instance-method","name":"sentiment","doc":"Get the sentiment of a string. Same as running\n`Cadmium::Sentiment.analyze(STRING)`.","summary":"<p>Get the sentiment of a string.</p>","abstract":false,"args":[{"name":"inject","doc":null,"default_value":"nil","external_name":"inject","restriction":""}],"args_string":"(inject = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/sentiment.cr#L109","def":{"name":"sentiment","args":[{"name":"inject","doc":null,"default_value":"nil","external_name":"inject","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Cadmium::Sentiment.analyze(self, inject)"}}],"macros":[],"types":[]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer","path":"Cadmium/Stemmer.html","kind":"module","full_name":"Cadmium::Stemmer","name":"Stemmer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/stemmer/stemmer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/stemmer.cr"},{"filename":"cadmium/stemmer/porter_stemmer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr"},{"filename":"cadmium/stemmer/token.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr"},{"filename":"cadmium/stemmer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer/PorterStemmer","path":"Cadmium/Stemmer/PorterStemmer.html","kind":"class","full_name":"Cadmium::Stemmer::PorterStemmer","name":"PorterStemmer","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer/Stemmer","kind":"class","full_name":"Cadmium::Stemmer::Stemmer","name":"Stemmer"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer/Stemmer","kind":"class","full_name":"Cadmium::Stemmer::Stemmer","name":"Stemmer"},{"html_id":"github.com/watzon/cadmium/Cadmium/Util/StopWords","kind":"module","full_name":"Cadmium::Util::StopWords","name":"StopWords"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/stemmer/porter_stemmer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer","kind":"module","full_name":"Cadmium::Stemmer","name":"Stemmer"},"doc":null,"summary":null,"class_methods":[{"id":"attempt_replace(token:String,pattern:String|Regex,replacement:String,&block)-class-method","html_id":"attempt_replace(token:String,pattern:String|Regex,replacement:String,&amp;block)-class-method","name":"attempt_replace","doc":"Attempt to replae a pattern in a word. If a replacement occurs the replacement is yielded\nto a block. Otherwise nil is returned","summary":"<p>Attempt to replae a pattern in a word.</p>","abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"String | Regex"},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":"String"}],"args_string":"(token : String, pattern : String | Regex, replacement : String, &block)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L144","def":{"name":"attempt_replace","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"String | Regex"},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"result = attempt_replace(token, pattern, replacement)\nresult.nil? ? nil : yield result.not_nil!\n"}},{"id":"attempt_replace(token:String,pattern:String|Regex,replacement:String)-class-method","html_id":"attempt_replace(token:String,pattern:String|Regex,replacement:String)-class-method","name":"attempt_replace","doc":"Attempt to replace a pattern in a word. if a replacement occurs the replacement is returned.\nOtherwise nil is returned.","summary":"<p>Attempt to replace a pattern in a word.</p>","abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"String | Regex"},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":"String"}],"args_string":"(token : String, pattern : String | Regex, replacement : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L130","def":{"name":"attempt_replace","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"},{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"String | Regex"},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = nil\nif pattern.is_a?(String) && (token.ends_with?(pattern))\n  result = token.sub(Regex.new(pattern + \"$\"), replacement)\nelse\n  if pattern.is_a?(Regex) && (token.match(pattern))\n    result = token.sub(pattern, replacement)\n  end\nend\nresult\n"}},{"id":"attempt_replace_patterns(token,replacements,measure_threshold=nil)-class-method","html_id":"attempt_replace_patterns(token,replacements,measure_threshold=nil)-class-method","name":"attempt_replace_patterns","doc":"Attempt to replace a list of patterns/replacements on a token for a minimum\nmeasure M","summary":"<p>Attempt to replace a list of patterns/replacements on a token for a minimum measure M</p>","abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"replacements","doc":null,"default_value":"","external_name":"replacements","restriction":""},{"name":"measure_threshold","doc":null,"default_value":"nil","external_name":"measure_threshold","restriction":""}],"args_string":"(token, replacements, measure_threshold = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L151","def":{"name":"attempt_replace_patterns","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"replacements","doc":null,"default_value":"","external_name":"replacements","restriction":""},{"name":"measure_threshold","doc":null,"default_value":"nil","external_name":"measure_threshold","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"replacement = token\nreplacements.each do |re|\n  if measure_threshold.nil? || (measure(attempt_replace(token, re[0].to_s, re[1].to_s))) > measure_threshold.not_nil!\n    replacement = (attempt_replace(replacement, re[0].to_s, re[2].to_s)) || replacement\n  end\nend\nreplacement\n"}},{"id":"categorize_chars(token:String)-class-method","html_id":"categorize_chars(token:String)-class-method","name":"categorize_chars","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L112","def":{"name":"categorize_chars","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((token.gsub(/[^aeiouy]y/, \"CV\")).gsub(/[aeiou]/, \"V\")).gsub(/[^V]/, \"C\")"}},{"id":"categorize_groups(token:String)-class-method","html_id":"categorize_groups(token:String)-class-method","name":"categorize_groups","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L108","def":{"name":"categorize_groups","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((token.gsub(/[^aeiouy]+y/, \"CV\")).gsub(/[aeiou]+/, \"V\")).gsub(/[^V]+/, \"C\")"}},{"id":"ends_with_double_cons(token:String)-class-method","html_id":"ends_with_double_cons(token:String)-class-method","name":"ends_with_double_cons","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L124","def":{"name":"ends_with_double_cons","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!(token.match(/([^aeiou])\\\\1$/)))"}},{"id":"measure(token:String?)-class-method","html_id":"measure(token:String?)-class-method","name":"measure","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String | ::Nil"}],"args_string":"(token : String?)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L116","def":{"name":"measure","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !token\n  return -1\nend\n(((categorize_groups(token)).sub(/^C/, \"\")).sub(/V$/, \"\")).size / 2\n"}},{"id":"replace_patterns(token,replacements,measure_threshold=nil)-class-method","html_id":"replace_patterns(token,replacements,measure_threshold=nil)-class-method","name":"replace_patterns","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"replacements","doc":null,"default_value":"","external_name":"replacements","restriction":""},{"name":"measure_threshold","doc":null,"default_value":"nil","external_name":"measure_threshold","restriction":""}],"args_string":"(token, replacements, measure_threshold = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L163","def":{"name":"replace_patterns","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"replacements","doc":null,"default_value":"","external_name":"replacements","restriction":""},{"name":"measure_threshold","doc":null,"default_value":"nil","external_name":"measure_threshold","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(attempt_replace_patterns(token, replacements, measure_threshold)) || token"}},{"id":"replace_regex(token,regex,include_parts,minimum_measure)-class-method","html_id":"replace_regex(token,regex,include_parts,minimum_measure)-class-method","name":"replace_regex","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"regex","doc":null,"default_value":"","external_name":"regex","restriction":""},{"name":"include_parts","doc":null,"default_value":"","external_name":"include_parts","restriction":""},{"name":"minimum_measure","doc":null,"default_value":"","external_name":"minimum_measure","restriction":""}],"args_string":"(token, regex, include_parts, minimum_measure)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L167","def":{"name":"replace_regex","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"regex","doc":null,"default_value":"","external_name":"regex","restriction":""},{"name":"include_parts","doc":null,"default_value":"","external_name":"include_parts","restriction":""},{"name":"minimum_measure","doc":null,"default_value":"","external_name":"minimum_measure","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parts = nil\nresult = \"\"\nif parts = regex.match(token)\n  include_parts.each do |i|\n    if !(!parts[i]?)\n      result = result + parts[i]\n    end\n  end\nend\nif (measure(result)) > minimum_measure\n  return result\nend\nnil\n"}},{"id":"stem(token:String)-class-method","html_id":"stem(token:String)-class-method","name":"stem","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L6","def":{"name":"stem","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if token.size < 3\n  return token\nend\n(step5b(step5a(step4(step3(step2(step1c(step1b(step1a(token.downcase))))))))).to_s\n"}},{"id":"step1a(token:String)-class-method","html_id":"step1a(token:String)-class-method","name":"step1a","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L11","def":{"name":"step1a","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if token.match(/(ss|i)es$/)\n  token = token.sub(/(ss|i)es$/, \"\\\\1\")\nend\nif ((token[-1] == 's') && (token[-2] != 's')) && token.size > 2\n  token = token.sub(/s?$/, \"\")\nend\ntoken\n"}},{"id":"step1b(token:String)-class-method","html_id":"step1b(token:String)-class-method","name":"step1b","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L23","def":{"name":"step1b","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if token[-3..-1] == \"eed\"\n  if (measure(token[0, token.size - 3])) > 0\n    return token.sub(/eed$/, \"ee\")\n  end\nelse\n  result = attempt_replace(token, /(ed|ing)$/, \"\") do |tok|\n    if (categorize_groups(tok)).index('V')\n      res = attempt_replace_patterns(tok, [[\"at\", \"\", \"ate\"], [\"bl\", \"\", \"ble\"], [\"iz\", \"\", \"ize\"]])\n      if res != tok\n        return res\n      else\n        if (ends_with_double_cons(tok)) && (tok.match(/[^lsz]$/))\n          return tok.sub(/([^aeiou])\\\\1$/, \"\\\\1\")\n        end\n        if (((measure(tok)) == 1) && ((categorize_chars(tok))[-3, 3] == \"CVC\")) && (tok.match(/[^wxy]$/))\n          return tok + \"e\"\n        end\n      end\n      return tok\n    end\n    nil\n  end\n  if result.nil?\n  else\n    return result\n  end\nend\ntoken\n"}},{"id":"step1c(token:String)-class-method","html_id":"step1c(token:String)-class-method","name":"step1c","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L61","def":{"name":"step1c","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"categorized_groups = categorize_groups(token)\nif (token[-1] == 'y') && (categorized_groups[0, categorized_groups.size - 1].index('V'))\n  return token.sub(/y$/, \"i\")\nend\ntoken\n"}},{"id":"step2(token:String)-class-method","html_id":"step2(token:String)-class-method","name":"step2","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L71","def":{"name":"step2","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"replace_patterns(token, [[\"ational\", \"\", \"ate\"], [\"tional\", \"\", \"tion\"], [\"enci\", \"\", \"ence\"], [\"anci\", \"\", \"ance\"], [\"izer\", \"\", \"ize\"], [\"abli\", \"\", \"able\"], [\"bli\", \"\", \"ble\"], [\"alli\", \"\", \"al\"], [\"entli\", \"\", \"ent\"], [\"eli\", \"\", \"e\"], [\"ousli\", \"\", \"ous\"], [\"ization\", \"\", \"ize\"], [\"ation\", \"\", \"ate\"], [\"ator\", \"\", \"ate\"], [\"alism\", \"\", \"al\"], [\"iveness\", \"\", \"ive\"], [\"fulness\", \"\", \"ful\"], [\"ousness\", \"\", \"ous\"], [\"aliti\", \"\", \"al\"], [\"iviti\", \"\", \"ive\"], [\"biliti\", \"\", \"ble\"], [\"logi\", \"\", \"log\"]], 0)"}},{"id":"step3(token:String)-class-method","html_id":"step3(token:String)-class-method","name":"step3","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L79","def":{"name":"step3","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"replace_patterns(token, [[\"icate\", \"\", \"ic\"], [\"ative\", \"\", \"\"], [\"alize\", \"\", \"al\"], [\"iciti\", \"\", \"ic\"], [\"ical\", \"\", \"ic\"], [\"ful\", \"\", \"\"], [\"ness\", \"\", \"\"]], 0)"}},{"id":"step4(token:String)-class-method","html_id":"step4(token:String)-class-method","name":"step4","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L84","def":{"name":"step4","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((replace_regex(token, /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/, [1], 1)) || (replace_regex(token, /^(.+?)(s|t)(ion)$/, [1, 2], 1))) || token"}},{"id":"step5a(token:String)-class-method","html_id":"step5a(token:String)-class-method","name":"step5a","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L90","def":{"name":"step5a","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"m = measure(token.sub(/e$/, \"\"))\nc = categorize_chars(token)\nif m > 1 || (((m == 1) && c.size > 3) && (!(((categorize_chars(token))[-4, 3] == \"CVC\") && (token.match(/[^wxy].$/)))))\n  token = token.sub(/e$/, \"\")\nend\ntoken\n"}},{"id":"step5b(token:String)-class-method","html_id":"step5b(token:String)-class-method","name":"step5b","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"args_string":"(token : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/porter_stemmer.cr#L101","def":{"name":"step5b","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (measure(token)) > 1\n  return token.sub(/ll$/, \"l\")\nend\ntoken\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer/Stemmer","path":"Cadmium/Stemmer/Stemmer.html","kind":"class","full_name":"Cadmium::Stemmer::Stemmer","name":"Stemmer","abstract":true,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Util/StopWords","kind":"module","full_name":"Cadmium::Util::StopWords","name":"StopWords"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/stemmer/stemmer.cr","line_number":6,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/stemmer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/Util/StopWords","kind":"module","full_name":"Cadmium::Util::StopWords","name":"StopWords"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer/PorterStemmer","kind":"class","full_name":"Cadmium::Stemmer::PorterStemmer","name":"PorterStemmer"}],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer","kind":"module","full_name":"Cadmium::Stemmer","name":"Stemmer"},"doc":null,"summary":null,"class_methods":[{"id":"add_stop_word(word)-class-method","html_id":"add_stop_word(word)-class-method","name":"add_stop_word","doc":null,"summary":null,"abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"args_string":"(word)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/stemmer.cr#L13","def":{"name":"add_stop_word","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@stop_words.push(word)"}},{"id":"add_stop_words(words)-class-method","html_id":"add_stop_words(words)-class-method","name":"add_stop_words","doc":null,"summary":null,"abstract":false,"args":[{"name":"words","doc":null,"default_value":"","external_name":"words","restriction":""}],"args_string":"(words)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/stemmer.cr#L17","def":{"name":"add_stop_words","args":[{"name":"words","doc":null,"default_value":"","external_name":"words","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@stop_words.concat(words)"}},{"id":"remove_stop_word(word)-class-method","html_id":"remove_stop_word(word)-class-method","name":"remove_stop_word","doc":null,"summary":null,"abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"args_string":"(word)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/stemmer.cr#L21","def":{"name":"remove_stop_word","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"remove_stop_words([word])"}},{"id":"remove_stop_words(words)-class-method","html_id":"remove_stop_words(words)-class-method","name":"remove_stop_words","doc":null,"summary":null,"abstract":false,"args":[{"name":"words","doc":null,"default_value":"","external_name":"words","restriction":""}],"args_string":"(words)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/stemmer.cr#L25","def":{"name":"remove_stop_words","args":[{"name":"words","doc":null,"default_value":"","external_name":"words","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"words.each do |word|\n  @@stop_words.delete(word)\nend\n@@stop_words\n"}},{"id":"stem(token)-class-method","html_id":"stem(token)-class-method","name":"stem","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"args_string":"(token)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/stemmer.cr#L9","def":{"name":"stem","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"token"}},{"id":"tokenize_and_stem(text,keep_stops=false)-class-method","html_id":"tokenize_and_stem(text,keep_stops=false)-class-method","name":"tokenize_and_stem","doc":null,"summary":null,"abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""},{"name":"keep_stops","doc":null,"default_value":"false","external_name":"keep_stops","restriction":""}],"args_string":"(text, keep_stops = <span class=\"n\">false</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/stemmer.cr#L32","def":{"name":"tokenize_and_stem","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""},{"name":"keep_stops","doc":null,"default_value":"false","external_name":"keep_stops","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stemmed_tokens = [] of String\nlowercase_text = text.downcase\ntokens = Cadmium::Tokenizer::AggressiveTokenizer.new.tokenize(lowercase_text)\nif keep_stops\n  tokens.each do |token|\n    stemmed_tokens.push(stem(token))\n  end\nelse\n  tokens.each do |token|\n    if @@stop_words.includes?(token)\n    else\n      stemmed_tokens.push(stem(token))\n    end\n  end\nend\nstemmed_tokens\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer/StringExtension","path":"Cadmium/Stemmer/StringExtension.html","kind":"module","full_name":"Cadmium::Stemmer::StringExtension","name":"StringExtension","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/stemmer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/cadmium/String","kind":"class","full_name":"String","name":"String"}],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer","kind":"module","full_name":"Cadmium::Stemmer","name":"Stemmer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"stem(stemmer=Cadmium::Stemmer::PorterStemmer)-instance-method","html_id":"stem(stemmer=Cadmium::Stemmer::PorterStemmer)-instance-method","name":"stem","doc":null,"summary":null,"abstract":false,"args":[{"name":"stemmer","doc":null,"default_value":"Cadmium::Stemmer::PorterStemmer","external_name":"stemmer","restriction":""}],"args_string":"(stemmer = <span class=\"t\">Cadmium</span><span class=\"t\">::</span><span class=\"t\">Stemmer</span><span class=\"t\">::</span><span class=\"t\">PorterStemmer</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer.cr#L6","def":{"name":"stem","args":[{"name":"stemmer","doc":null,"default_value":"Cadmium::Stemmer::PorterStemmer","external_name":"stemmer","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stemmer.stem(self)"}},{"id":"tokenize_and_stem(stemmer=Cadmium::Stemmer::PorterStemmer,keep_stops=false)-instance-method","html_id":"tokenize_and_stem(stemmer=Cadmium::Stemmer::PorterStemmer,keep_stops=false)-instance-method","name":"tokenize_and_stem","doc":null,"summary":null,"abstract":false,"args":[{"name":"stemmer","doc":null,"default_value":"Cadmium::Stemmer::PorterStemmer","external_name":"stemmer","restriction":""},{"name":"keep_stops","doc":null,"default_value":"false","external_name":"keep_stops","restriction":""}],"args_string":"(stemmer = <span class=\"t\">Cadmium</span><span class=\"t\">::</span><span class=\"t\">Stemmer</span><span class=\"t\">::</span><span class=\"t\">PorterStemmer</span>, keep_stops = <span class=\"n\">false</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer.cr#L10","def":{"name":"tokenize_and_stem","args":[{"name":"stemmer","doc":null,"default_value":"Cadmium::Stemmer::PorterStemmer","external_name":"stemmer","restriction":""},{"name":"keep_stops","doc":null,"default_value":"false","external_name":"keep_stops","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stemmer.tokenize_and_stem(self, keep_stops)"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer/Token","path":"Cadmium/Stemmer/Token.html","kind":"class","full_name":"Cadmium::Stemmer::Token","name":"Token","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/stemmer/token.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer","kind":"module","full_name":"Cadmium::Stemmer","name":"Stemmer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(string:String)-class-method","html_id":"new(string:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L14","def":{"name":"new","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(string)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"has_suffix(suffix)-instance-method","html_id":"has_suffix(suffix)-instance-method","name":"has_suffix","doc":null,"summary":null,"abstract":false,"args":[{"name":"suffix","doc":null,"default_value":"","external_name":"suffix","restriction":""}],"args_string":"(suffix)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L72","def":{"name":"has_suffix","args":[{"name":"suffix","doc":null,"default_value":"","external_name":"suffix","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@string[(-suffix.size)..-1] == suffix"}},{"id":"has_suffix_in_region(suffix,region)-instance-method","html_id":"has_suffix_in_region(suffix,region)-instance-method","name":"has_suffix_in_region","doc":null,"summary":null,"abstract":false,"args":[{"name":"suffix","doc":null,"default_value":"","external_name":"suffix","restriction":""},{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(suffix, region)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L76","def":{"name":"has_suffix_in_region","args":[{"name":"suffix","doc":null,"default_value":"","external_name":"suffix","restriction":""},{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"region_start = @regions[region]? || 0\nsuffix_start = @string.size - @suffix.size\n(has_suffix(suffix)) && suffix_start >= region_start\n"}},{"id":"has_vowel_at_index(index)-instance-method","html_id":"has_vowel_at_index(index)-instance-method","name":"has_vowel_at_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"args_string":"(index)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L52","def":{"name":"has_vowel_at_index","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!@vowels[index]?)"}},{"id":"mark_region(region,&block)-instance-method","html_id":"mark_region(region,&amp;block)-instance-method","name":"mark_region","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(region, &block)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L26","def":{"name":"mark_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"@regions[region] = yield\nself\n"}},{"id":"mark_region(region,index)-instance-method","html_id":"mark_region(region,index)-instance-method","name":"mark_region","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"args_string":"(region, index)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L31","def":{"name":"mark_region","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@regions[region] = index\nself\n"}},{"id":"next_consonant_index(start=0)-instance-method","html_id":"next_consonant_index(start=0)-instance-method","name":"next_consonant_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"0","external_name":"start","restriction":""}],"args_string":"(start = <span class=\"n\">0</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L64","def":{"name":"next_consonant_index","args":[{"name":"start","doc":null,"default_value":"0","external_name":"start","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index = (start >= 0 && start < @string.size) ? start : @string.size\nwhile index < string.size && (has_vowel_at_index(index))\n  index = index + 1\nend\nindex\n"}},{"id":"next_vowel_index(start=0)-instance-method","html_id":"next_vowel_index(start=0)-instance-method","name":"next_vowel_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"0","external_name":"start","restriction":""}],"args_string":"(start = <span class=\"n\">0</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L56","def":{"name":"next_vowel_index","args":[{"name":"start","doc":null,"default_value":"0","external_name":"start","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index = (start >= 0 && start < @string.size) ? start : @string.size\nwhile index < string.size && (!(has_vowel_at_index(index)))\n  index = index + 1\nend\nindex\n"}},{"id":"orgiginal-instance-method","html_id":"orgiginal-instance-method","name":"orgiginal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L10","def":{"name":"orgiginal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@orgiginal"}},{"id":"regions:Hash(String,Int32)-instance-method","html_id":"regions:Hash(String,Int32)-instance-method","name":"regions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Int32)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L10","def":{"name":"regions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@regions"}},{"id":"replace_all(find,replace)-instance-method","html_id":"replace_all(find,replace)-instance-method","name":"replace_all","doc":null,"summary":null,"abstract":false,"args":[{"name":"find","doc":null,"default_value":"","external_name":"find","restriction":""},{"name":"replace","doc":null,"default_value":"","external_name":"replace","restriction":""}],"args_string":"(find, replace)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L36","def":{"name":"replace_all","args":[{"name":"find","doc":null,"default_value":"","external_name":"find","restriction":""},{"name":"replace","doc":null,"default_value":"","external_name":"replace","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@string = (string.split(find)).join(replace)\nself\n"}},{"id":"replace_suffix_in_region(suffix,replace,region)-instance-method","html_id":"replace_suffix_in_region(suffix,replace,region)-instance-method","name":"replace_suffix_in_region","doc":null,"summary":null,"abstract":false,"args":[{"name":"suffix","doc":null,"default_value":"","external_name":"suffix","restriction":""},{"name":"replace","doc":null,"default_value":"","external_name":"replace","restriction":""},{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"args_string":"(suffix, replace, region)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L41","def":{"name":"replace_suffix_in_region","args":[{"name":"suffix","doc":null,"default_value":"","external_name":"suffix","restriction":""},{"name":"replace","doc":null,"default_value":"","external_name":"replace","restriction":""},{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"suffixes = suffix.is_a?(Array) ? suffix : [suffix]\n(0..suffixes.size).each do |i|\n  if has_suffix_in_region(suffixes[i], region)\n    @string = @string[0, -suffixes[i].size] + replace\n    return self\n  end\nend\nself\n"}},{"id":"string:String-instance-method","html_id":"string:String-instance-method","name":"string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L9","def":{"name":"string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@string"}},{"id":"string=(string)-instance-method","html_id":"string=(string)-instance-method","name":"string=","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"args_string":"(string)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L9","def":{"name":"string=","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@string = string"}},{"id":"using_vowels(vowels)-instance-method","html_id":"using_vowels(vowels)-instance-method","name":"using_vowels","doc":null,"summary":null,"abstract":false,"args":[{"name":"vowels","doc":null,"default_value":"","external_name":"vowels","restriction":""}],"args_string":"(vowels)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L21","def":{"name":"using_vowels","args":[{"name":"vowels","doc":null,"default_value":"","external_name":"vowels","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vowels = vowels\nself\n"}},{"id":"vowels:Array(String)-instance-method","html_id":"vowels:Array(String)-instance-method","name":"vowels","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L10","def":{"name":"vowels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vowels"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/stemmer/token.cr#L12","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @string.\n{{ call }}\n\n    \n"}}],"types":[]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/TfIdf","path":"Cadmium/TfIdf.html","kind":"class","full_name":"Cadmium::TfIdf","name":"TfIdf","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Util/StopWords","kind":"module","full_name":"Cadmium::Util::StopWords","name":"StopWords"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tfidf.cr","line_number":6,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/Util/StopWords","kind":"module","full_name":"Cadmium::Util::StopWords","name":"StopWords"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[{"id":"tf(term,document)-class-method","html_id":"tf(term,document)-class-method","name":"tf","doc":null,"summary":null,"abstract":false,"args":[{"name":"term","doc":null,"default_value":"","external_name":"term","restriction":""},{"name":"document","doc":null,"default_value":"","external_name":"document","restriction":""}],"args_string":"(term, document)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr#L68","def":{"name":"tf","args":[{"name":"term","doc":null,"default_value":"","external_name":"term","restriction":""},{"name":"document","doc":null,"default_value":"","external_name":"document","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"document[:terms].has_key?(term) ? document[:terms][term] : 0.0"}}],"constructors":[{"id":"new(documents=nil)-class-method","html_id":"new(documents=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"documents","doc":null,"default_value":"nil","external_name":"documents","restriction":""}],"args_string":"(documents = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr#L16","def":{"name":"new","args":[{"name":"documents","doc":null,"default_value":"nil","external_name":"documents","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(documents)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_document(document,key=nil,restore_cache=false)-instance-method","html_id":"add_document(document,key=nil,restore_cache=false)-instance-method","name":"add_document","doc":null,"summary":null,"abstract":false,"args":[{"name":"document","doc":null,"default_value":"","external_name":"document","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""},{"name":"restore_cache","doc":null,"default_value":"false","external_name":"restore_cache","restriction":""}],"args_string":"(document, key = <span class=\"n\">nil</span>, restore_cache = <span class=\"n\">false</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr#L35","def":{"name":"add_document","args":[{"name":"document","doc":null,"default_value":"","external_name":"document","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""},{"name":"restore_cache","doc":null,"default_value":"false","external_name":"restore_cache","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"key || (key = Random::Secure.hex(4))\n@documents.push(build_document(document, key))\nif restore_cache\n  @idf_cache.each do |__arg0|\n    term = __arg0[0]\n    idf(term, true)\n  end\nelse\n  @idf_cache = {} of String => Float64\nend\n"}},{"id":"idf(term:String,force=false)-instance-method","html_id":"idf(term:String,force=false)-instance-method","name":"idf","doc":null,"summary":null,"abstract":false,"args":[{"name":"term","doc":null,"default_value":"","external_name":"term","restriction":"String"},{"name":"force","doc":null,"default_value":"false","external_name":"force","restriction":""}],"args_string":"(term : String, force = <span class=\"n\">false</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr#L72","def":{"name":"idf","args":[{"name":"term","doc":null,"default_value":"","external_name":"term","restriction":"String"},{"name":"force","doc":null,"default_value":"false","external_name":"force","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (@idf_cache.has_key?(term)) && (!force)\n  return @idf_cache[term]\nend\ndocs_with_term = @documents.reduce(0) do |count, doc|\n  count + (document_has_term(doc, term) ? 1.0 : 0.0)\nend\nidf = 1 + (Math.log(@documents.size / (1.0 + docs_with_term)))\n@idf_cache[term] = idf\nidf\n"}},{"id":"list_terms(d)-instance-method","html_id":"list_terms(d)-instance-method","name":"list_terms","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":""}],"args_string":"(d)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr#L83","def":{"name":"list_terms","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"terms = [] of NamedTuple(term: String, tfidf: Float64)\nif @documents[d]?\nelse\n  return terms\nend\n@documents[d][:terms].each do |__arg1|\n  key = __arg1[0]\n  terms.push({term: key, tfidf: tfidf(key, d)})\nend\nterms.sort_by do |x|\n  -x[:tfidf]\nend\n"}},{"id":"stop_words=(value)-instance-method","html_id":"stop_words=(value)-instance-method","name":"stop_words=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr#L64","def":{"name":"stop_words=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@stop_words = value"}},{"id":"tfidf(terms,d)-instance-method","html_id":"tfidf(terms,d)-instance-method","name":"tfidf","doc":null,"summary":null,"abstract":false,"args":[{"name":"terms","doc":null,"default_value":"","external_name":"terms","restriction":""},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":""}],"args_string":"(terms, d)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr#L23","def":{"name":"tfidf","args":[{"name":"terms","doc":null,"default_value":"","external_name":"terms","restriction":""},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if terms.is_a?(String)\n  terms = @tokenizer.tokenize(terms)\nend\nterms.reduce(0.0) do |value, term|\n  _idf = idf(term)\n  _idf = _idf.infinite? ? 0.0 : _idf\n  value + ((TfIdf.tf(term, @documents[d])) * _idf)\nend\n"}},{"id":"tfidfs(terms)-instance-method","html_id":"tfidfs(terms)-instance-method","name":"tfidfs","doc":null,"summary":null,"abstract":false,"args":[{"name":"terms","doc":null,"default_value":"","external_name":"terms","restriction":""}],"args_string":"(terms)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr#L46","def":{"name":"tfidfs","args":[{"name":"terms","doc":null,"default_value":"","external_name":"terms","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Array(Float64).new(@documents.size, 0.0)).map_with_index do |_, i|\n  tfidf(terms, i)\nend"}},{"id":"tfidfs(terms,&block)-instance-method","html_id":"tfidfs(terms,&amp;block)-instance-method","name":"tfidfs","doc":null,"summary":null,"abstract":false,"args":[{"name":"terms","doc":null,"default_value":"","external_name":"terms","restriction":""}],"args_string":"(terms, &block)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr#L52","def":{"name":"tfidfs","args":[{"name":"terms","doc":null,"default_value":"","external_name":"terms","restriction":""}],"double_splat":null,"splat_index":null,"yields":3,"block_arg":null,"return_type":"","visibility":"Public","body":"tfidfs = Array(Float64).new(@documents.size, 0.0)\n@documents.each_with_index do |doc, i|\n  tfidfs[i] = tfidf(terms, i)\n  yield i, tfidfs[i], doc[:key]\nend\ntfidfs\n"}}],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/TfIdf/Document","path":"Cadmium/TfIdf/Document.html","kind":"alias","full_name":"Cadmium::TfIdf::Document","name":"Document","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/tfidf.cr","line_number":9,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tfidf.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":true,"aliased":"NamedTuple(key: String, terms: Hash(String, Float64))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/TfIdf","kind":"class","full_name":"Cadmium::TfIdf","name":"TfIdf"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","path":"Cadmium/Tokenizer.html","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/tokenizer/tokenizer_base.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/tokenizer_base.cr"},{"filename":"cadmium/tokenizer/aggressive_tokenizer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/aggressive_tokenizer.cr"},{"filename":"cadmium/tokenizer/case_tokenizer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/case_tokenizer.cr"},{"filename":"cadmium/tokenizer/pragmatic_tokenizer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic_tokenizer.cr"},{"filename":"cadmium/tokenizer/regex_tokenizer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/regex_tokenizer.cr"},{"filename":"cadmium/tokenizer/sentence_tokenizer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/sentence_tokenizer.cr"},{"filename":"cadmium/tokenizer/treebank_word_tokenizer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/treebank_word_tokenizer.cr"},{"filename":"cadmium/tokenizer/whitespace_tokenizer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/whitespace_tokenizer.cr"},{"filename":"cadmium/tokenizer/word_punctuation_tokenizer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/word_punctuation_tokenizer.cr"},{"filename":"cadmium/tokenizer/word_tokenizer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/word_tokenizer.cr"},{"filename":"cadmium/tokenizer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer.cr"},{"filename":"cadmium/tokenizer/pragmatic/languages/common.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/common.cr"},{"filename":"cadmium/tokenizer/pragmatic/languages.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages.cr"},{"filename":"cadmium/tokenizer/pragmatic/regex.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/regex.cr"},{"filename":"cadmium/tokenizer/pragmatic/languages/english.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/english.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/AggressiveTokenizer","path":"Cadmium/Tokenizer/AggressiveTokenizer.html","kind":"class","full_name":"Cadmium::Tokenizer::AggressiveTokenizer","name":"AggressiveTokenizer","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Normalizers/RemoveDiacritics","kind":"module","full_name":"Cadmium::Normalizers::RemoveDiacritics","name":"RemoveDiacritics"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/aggressive_tokenizer.cr","line_number":6,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/aggressive_tokenizer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/Normalizers/RemoveDiacritics","kind":"module","full_name":"Cadmium::Normalizers::RemoveDiacritics","name":"RemoveDiacritics"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(*,lang=nil)-class-method","html_id":"new(*,lang=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"lang","doc":null,"default_value":"nil","external_name":"lang","restriction":""}],"args_string":"(*, lang = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/aggressive_tokenizer.cr#L11","def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"lang","doc":null,"default_value":"nil","external_name":"lang","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(lang: lang)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"tokenize(string:String):Array(String)-instance-method","html_id":"tokenize(string:String):Array(String)-instance-method","name":"tokenize","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Array(String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/aggressive_tokenizer.cr#L15","def":{"name":"tokenize","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"case @lang\nwhen :es\n  trim(string.split(/[^a-zA-Zá-úÁ-ÚñÑüÜ]+/))\nwhen :fa\n  string = string.gsub(/\\.\\:\\+\\-\\=\\(\\)\\\"\\'\\!\\?\\،\\,\\؛\\;/, ' ')\n  (string.split(/\\s+/)).reject(&.empty?)\nwhen :fr\n  trim(string.split(/[^a-z0-9äâàéèëêïîöôùüûœç]+/i))\nwhen :id\n  string = (string.gsub(/[^a-z0-9 -]/, ' ')).gsub(/( +)/, ' ')\n  trim(string.split(' '))\nwhen :nl\n  trim(string.split(/[^a-zA-Z0-9_']+/))\nwhen :no\n  trim(string.split(/[^A-Za-z0-9_æøåÆØÅäÄöÖüÜ]+/))\nwhen :pl\n  string = ((string.gsub(/[^a-zążśźęćńół0-9]/i, ' ')).gsub(/[\\s\\n]+/, ' ')).strip\n  (string.split(' ')).reject(&.empty?)\nwhen :pt\n  trim((string.split(/[^a-zA-Zà-úÀ-Ú]/)).reject(&.empty?))\nwhen :ru\n  string = ((string.gsub(/[^a-zа-яё0-9]/i, ' ')).gsub(/[\\s\\n]+/, ' ')).strip\n  (string.split(' ')).reject(&.empty?)\nwhen :sv\n  string = remove_diacritics(string)\n  trim(string.split(/[^A-Za-z0-9_åÅäÄöÖüÜ]+/))\nelse\n  trim(string.split(/\\W+/))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/CaseTokenizer","path":"Cadmium/Tokenizer/CaseTokenizer.html","kind":"class","full_name":"Cadmium::Tokenizer::CaseTokenizer","name":"CaseTokenizer","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/case_tokenizer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/case_tokenizer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(preserve_apostrophe=nil)-class-method","html_id":"new(preserve_apostrophe=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"preserve_apostrophe","doc":null,"default_value":"nil","external_name":"preserve_apostrophe","restriction":""}],"args_string":"(preserve_apostrophe = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/case_tokenizer.cr#L8","def":{"name":"new","args":[{"name":"preserve_apostrophe","doc":null,"default_value":"nil","external_name":"preserve_apostrophe","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(preserve_apostrophe)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"tokenize(string:String):Array(String)-instance-method","html_id":"tokenize(string:String):Array(String)-instance-method","name":"tokenize","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Array(String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/case_tokenizer.cr#L12","def":{"name":"tokenize","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"whitelist = ('0'..'9').to_a\nresult = string.chars.reduce(\"\") do |acc, cur|\n  if ((cur.downcase != cur.upcase) || (whitelist.includes?(cur.downcase))) || ((cur == '\\'') && @preserve_apostrophe)\n    acc = acc + cur\n  else\n    acc = acc + ' '\n  end\n  acc\nend\ntrim((result.gsub(/\\s+/, ' ')).split(' '))\n"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer","path":"Cadmium/Tokenizer/PragmaticTokenizer.html","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer","name":"PragmaticTokenizer","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/pragmatic_tokenizer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic_tokenizer.cr"},{"filename":"cadmium/tokenizer/pragmatic/languages/common.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/common.cr"},{"filename":"cadmium/tokenizer/pragmatic/languages.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages.cr"},{"filename":"cadmium/tokenizer/pragmatic/regex.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/regex.cr"},{"filename":"cadmium/tokenizer/pragmatic/languages/english.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/english.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(*,lang=:en,abbreviations:Array(String)?=nil,stop_words:Array(String)?=nil,contractions:Array(String)?=nil,remove_stop_words=false,expand_contractions=false,filter_languages:Array(String|Symbol)?=nil,punctuation=:all,numbers=:all,remove_emoji=false,remove_urls=false,remove_domains=false,clean=false,hashtags=:keep_original,mentions=:keep_original,classic_filter=false,downcase=true,minimum_length=0,long_word_split=nil)-class-method","html_id":"new(*,lang=:en,abbreviations:Array(String)?=nil,stop_words:Array(String)?=nil,contractions:Array(String)?=nil,remove_stop_words=false,expand_contractions=false,filter_languages:Array(String|Symbol)?=nil,punctuation=:all,numbers=:all,remove_emoji=false,remove_urls=false,remove_domains=false,clean=false,hashtags=:keep_original,mentions=:keep_original,classic_filter=false,downcase=true,minimum_length=0,long_word_split=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"lang","doc":null,"default_value":":en","external_name":"lang","restriction":""},{"name":"abbreviations","doc":null,"default_value":"nil","external_name":"abbreviations","restriction":"Array(String) | ::Nil"},{"name":"stop_words","doc":null,"default_value":"nil","external_name":"stop_words","restriction":"Array(String) | ::Nil"},{"name":"contractions","doc":null,"default_value":"nil","external_name":"contractions","restriction":"Array(String) | ::Nil"},{"name":"remove_stop_words","doc":null,"default_value":"false","external_name":"remove_stop_words","restriction":""},{"name":"expand_contractions","doc":null,"default_value":"false","external_name":"expand_contractions","restriction":""},{"name":"filter_languages","doc":null,"default_value":"nil","external_name":"filter_languages","restriction":"Array(String | Symbol) | ::Nil"},{"name":"punctuation","doc":null,"default_value":":all","external_name":"punctuation","restriction":""},{"name":"numbers","doc":null,"default_value":":all","external_name":"numbers","restriction":""},{"name":"remove_emoji","doc":null,"default_value":"false","external_name":"remove_emoji","restriction":""},{"name":"remove_urls","doc":null,"default_value":"false","external_name":"remove_urls","restriction":""},{"name":"remove_domains","doc":null,"default_value":"false","external_name":"remove_domains","restriction":""},{"name":"clean","doc":null,"default_value":"false","external_name":"clean","restriction":""},{"name":"hashtags","doc":null,"default_value":":keep_original","external_name":"hashtags","restriction":""},{"name":"mentions","doc":null,"default_value":":keep_original","external_name":"mentions","restriction":""},{"name":"classic_filter","doc":null,"default_value":"false","external_name":"classic_filter","restriction":""},{"name":"downcase","doc":null,"default_value":"true","external_name":"downcase","restriction":""},{"name":"minimum_length","doc":null,"default_value":"0","external_name":"minimum_length","restriction":""},{"name":"long_word_split","doc":null,"default_value":"nil","external_name":"long_word_split","restriction":""}],"args_string":"(*, lang = <span class=\"n\">:en</span>, abbreviations : Array(String)? = <span class=\"n\">nil</span>, stop_words : Array(String)? = <span class=\"n\">nil</span>, contractions : Array(String)? = <span class=\"n\">nil</span>, remove_stop_words = <span class=\"n\">false</span>, expand_contractions = <span class=\"n\">false</span>, filter_languages : Array(String | Symbol)? = <span class=\"n\">nil</span>, punctuation = <span class=\"n\">:all</span>, numbers = <span class=\"n\">:all</span>, remove_emoji = <span class=\"n\">false</span>, remove_urls = <span class=\"n\">false</span>, remove_domains = <span class=\"n\">false</span>, clean = <span class=\"n\">false</span>, hashtags = <span class=\"n\">:keep_original</span>, mentions = <span class=\"n\">:keep_original</span>, classic_filter = <span class=\"n\">false</span>, downcase = <span class=\"n\">true</span>, minimum_length = <span class=\"n\">0</span>, long_word_split = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic_tokenizer.cr#L6","def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"lang","doc":null,"default_value":":en","external_name":"lang","restriction":""},{"name":"abbreviations","doc":null,"default_value":"nil","external_name":"abbreviations","restriction":"Array(String) | ::Nil"},{"name":"stop_words","doc":null,"default_value":"nil","external_name":"stop_words","restriction":"Array(String) | ::Nil"},{"name":"contractions","doc":null,"default_value":"nil","external_name":"contractions","restriction":"Array(String) | ::Nil"},{"name":"remove_stop_words","doc":null,"default_value":"false","external_name":"remove_stop_words","restriction":""},{"name":"expand_contractions","doc":null,"default_value":"false","external_name":"expand_contractions","restriction":""},{"name":"filter_languages","doc":null,"default_value":"nil","external_name":"filter_languages","restriction":"Array(String | Symbol) | ::Nil"},{"name":"punctuation","doc":null,"default_value":":all","external_name":"punctuation","restriction":""},{"name":"numbers","doc":null,"default_value":":all","external_name":"numbers","restriction":""},{"name":"remove_emoji","doc":null,"default_value":"false","external_name":"remove_emoji","restriction":""},{"name":"remove_urls","doc":null,"default_value":"false","external_name":"remove_urls","restriction":""},{"name":"remove_domains","doc":null,"default_value":"false","external_name":"remove_domains","restriction":""},{"name":"clean","doc":null,"default_value":"false","external_name":"clean","restriction":""},{"name":"hashtags","doc":null,"default_value":":keep_original","external_name":"hashtags","restriction":""},{"name":"mentions","doc":null,"default_value":":keep_original","external_name":"mentions","restriction":""},{"name":"classic_filter","doc":null,"default_value":"false","external_name":"classic_filter","restriction":""},{"name":"downcase","doc":null,"default_value":"true","external_name":"downcase","restriction":""},{"name":"minimum_length","doc":null,"default_value":"0","external_name":"minimum_length","restriction":""},{"name":"long_word_split","doc":null,"default_value":"nil","external_name":"long_word_split","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(lang: lang, abbreviations: abbreviations, stop_words: stop_words, contractions: contractions, remove_stop_words: remove_stop_words, expand_contractions: expand_contractions, filter_languages: filter_languages, punctuation: punctuation, numbers: numbers, remove_emoji: remove_emoji, remove_urls: remove_urls, remove_domains: remove_domains, clean: clean, hashtags: hashtags, mentions: mentions, classic_filter: classic_filter, downcase: downcase, minimum_length: minimum_length, long_word_split: long_word_split)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"tokenize(string:String)-instance-method","html_id":"tokenize(string:String)-instance-method","name":"tokenize","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic_tokenizer.cr#L30","def":{"name":"tokenize","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languages","path":"Cadmium/Tokenizer/PragmaticTokenizer/Languages.html","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languages","name":"Languages","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/pragmatic/languages/common.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/common.cr"},{"filename":"cadmium/tokenizer/pragmatic/languages.cr","line_number":6,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"LANGUAGE_CODES","name":"LANGUAGE_CODES","value":"{en: English, ar: Arabic, bg: Bulgarian, ca: Catalan, cs: Czech, da: Danish, de: Deutsch, el: Greek, es: Spanish, fa: Persian, fi: Finnish, fr: French, id: Indonesian, it: Italian, lv: Latvian, nl: Dutch, nn: Norwegian, nb: Norwegian, no: Norwegian, pl: Polish, pt: Portuguese, ro: Romanian, ru: Russian, sk: Slovak, sv: Swedish, tr: Turkish}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer","name":"PragmaticTokenizer"},"doc":null,"summary":null,"class_methods":[{"id":"get_language_by_code(code)-class-method","html_id":"get_language_by_code(code)-class-method","name":"get_language_by_code","doc":null,"summary":null,"abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":""}],"args_string":"(code)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages.cr#L36","def":{"name":"get_language_by_code","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"code || (code = :en)\nLANGUAGE_CODES[code] || Common\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languages/Common","path":"Cadmium/Tokenizer/PragmaticTokenizer/Languages/Common.html","kind":"module","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languages::Common","name":"Common","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/tokenizer/pragmatic/languages/common.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/common.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ABBREVIATIONS","name":"ABBREVIATIONS","value":"Set.new([] of String)","doc":null,"summary":null},{"id":"CONTRACTIONS","name":"CONTRACTIONS","value":"{} of String => String","doc":null,"summary":null},{"id":"PUNCTUATION_MAP","name":"PUNCTUATION_MAP","value":"{\"。\" => \"♳\", \"．\" => \"♴\", \".\" => \"♵\", \"！\" => \"♶\", \"!\" => \"♷\", \"?\" => \"♸\", \"？\" => \"♹\", \"、\" => \"♺\", \"¡\" => \"⚀\", \"¿\" => \"⚁\", \"„\" => \"⚂\", \"“\" => \"⚃\", \"[\" => \"⚄\", \"]\" => \"⚅\", \"\\\"\" => \"☇\", \"#\" => \"☈\", \"$\" => \"☉\", \"%\" => \"☊\", \"&\" => \"☋\", \"(\" => \"☌\", \")\" => \"☍\", \"*\" => \"☠\", \"+\" => \"☢\", \",\" => \"☣\", \":\" => \"☤\", \";\" => \"☥\", \"<\" => \"☦\", \"=\" => \"☧\", \">\" => \"☀\", \"@\" => \"☁\", \"^\" => \"☂\", \"_\" => \"☃\", \"`\" => \"☄\", \"'\" => \"☮\", \"{\" => \"♔\", \"|\" => \"♕\", \"}\" => \"♖\", \"~\" => \"♗\", \"-\" => \"♘\", \"«\" => \"♙\", \"»\" => \"♚\", \"”\" => \"⚘\", \"‘\" => \"⚭\"}","doc":null,"summary":null},{"id":"STOP_WORDS","name":"STOP_WORDS","value":"Set.new([] of String)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languges/English","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languges::English","name":"English"}],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languages","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languages","name":"Languages"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languages/Common/SingleQuotes","path":"Cadmium/Tokenizer/PragmaticTokenizer/Languages/Common/SingleQuotes.html","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languages::Common::SingleQuotes","name":"SingleQuotes","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/pragmatic/languages/common.cr","line_number":11,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/common.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ALNUM_QUOTE","name":"ALNUM_QUOTE","value":"/(\\w|\\D)'(?!')(?=\\W|$)/","doc":null,"summary":null},{"id":"QUOTE_NOT_TWAS1","name":"QUOTE_NOT_TWAS1","value":"/(\\W|^)'(?!twas)/i","doc":null,"summary":null},{"id":"QUOTE_NOT_TWAS2","name":"QUOTE_NOT_TWAS2","value":"/(\\W|^)‘(?!twas)/i","doc":null,"summary":null},{"id":"QUOTE_WORD","name":"QUOTE_WORD","value":"/(\\W|^)'(?=\\w)/","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languages/Common","kind":"module","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languages::Common","name":"Common"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"handle_single_quotes(text)-instance-method","html_id":"handle_single_quotes(text)-instance-method","name":"handle_single_quotes","doc":"This 'special treatment' is actually relevant for many other tests. Alter core regular expressions!","summary":"<p>This 'special treatment' is actually relevant for many other tests.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"args_string":"(text)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/common.cr#L18","def":{"name":"handle_single_quotes","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"text.gsub!(QUOTE_NOT_TWAS1, (\"\\u0001 \" << PUNCTUATION_MAP[\"'\"]) << \" \")\ntext.gsub!(QUOTE_NOT_TWAS2, (\"\\u0001\" << PUNCTUATION_MAP[\"‘\"]) << \" \")\ntext.gsub!(QUOTE_WORD, \" \" << PUNCTUATION_MAP[\"'\"])\ntext.gsub!(ALNUM_QUOTE, (\"\\u0001\" << PUNCTUATION_MAP[\"'\"]) << \" \")\ntext\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languges","path":"Cadmium/Tokenizer/PragmaticTokenizer/Languges.html","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languges","name":"Languges","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/pragmatic/languages/english.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/english.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer","name":"PragmaticTokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languges/English","path":"Cadmium/Tokenizer/PragmaticTokenizer/Languges/English.html","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languges::English","name":"English","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languages/Common","kind":"module","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languages::Common","name":"Common"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/pragmatic/languages/english.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/english.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ABBREVIATIONS","name":"ABBREVIATIONS","value":"(Set.new([\"adj\", \"adm\", \"adv\", \"al\", \"ala\", \"alta\", \"apr\", \"arc\", \"ariz\", \"ark\", \"art\", \"assn\", \"asst\", \"attys\", \"aug\", \"ave\", \"bart\", \"bld\", \"bldg\", \"blvd\", \"brig\", \"bros\", \"btw\", \"cal\", \"calif\", \"capt\", \"cl\", \"cmdr\", \"co\", \"col\", \"colo\", \"comdr\", \"con\", \"conn\", \"corp\", \"cpl\", \"cres\", \"ct\", \"d.phil\", \"dak\", \"dec\", \"del\", \"dept\", \"det\", \"dist\", \"dr\", \"dr.phil\", \"dr.philos\", \"drs\", \"e.g\", \"ens\", \"esp\", \"esq\", \"etc\", \"exp\", \"expy\", \"ext\", \"feb\", \"fed\", \"fla\", \"ft\", \"fwy\", \"fy\", \"ga\", \"gen\", \"gov\", \"hon\", \"hosp\", \"hr\", \"hway\", \"hwy\", \"i.e\", \"i.b.m\", \"ia\", \"id\", \"ida\", \"ill\", \"inc\", \"ind\", \"ing\", \"insp\", \"jan\", \"jr\", \"jul\", \"jun\", \"kan\", \"kans\", \"ken\", \"ky\", \"la\", \"lt\", \"ltd\", \"maj\", \"man\", \"mar\", \"mass\", \"may\", \"md\", \"me\", \"med\", \"messrs\", \"mex\", \"mfg\", \"mich\", \"min\", \"minn\", \"miss\", \"mlle\", \"mm\", \"mme\", \"mo\", \"mont\", \"mr\", \"mrs\", \"ms\", \"msgr\", \"mssrs\", \"mt\", \"mtn\", \"neb\", \"nebr\", \"nev\", \"no\", \"nos\", \"nov\", \"nr\", \"oct\", \"ok\", \"okla\", \"ont\", \"op\", \"ord\", \"ore\", \"p\", \"pa\", \"pd\", \"pde\", \"penn\", \"penna\", \"pfc\", \"ph\", \"ph.d\", \"pl\", \"plz\", \"pp\", \"prof\", \"pvt\", \"que\", \"rd\", \"ref\", \"rep\", \"reps\", \"res\", \"rev\", \"rt\", \"sask\", \"sec\", \"sen\", \"sens\", \"sep\", \"sept\", \"sfc\", \"sgt\", \"sr\", \"st\", \"supt\", \"surg\", \"tce\", \"tenn\", \"tex\", \"u.s\", \"u.s.a\", \"univ\", \"usafa\", \"ut\", \"v\", \"va\", \"ver\", \"vs\", \"vt\", \"wash\", \"wis\", \"wisc\", \"wy\", \"wyo\", \"yuk\"] of ::String)).freeze","doc":null,"summary":null},{"id":"CONTRACTIONS","name":"CONTRACTIONS","value":"{\"i'm\" => \"i am\", \"i'll\" => \"i will\", \"i'd\" => \"i would\", \"i've\" => \"i have\", \"you're\" => \"you are\", \"you'll\" => \"you will\", \"you'd\" => \"you would\", \"you've\" => \"you have\", \"he's\" => \"he is\", \"he'll\" => \"he will\", \"he'd\" => \"he would\", \"she's\" => \"she is\", \"she'll\" => \"she will\", \"she'd\" => \"she would\", \"it's\" => \"it is\", \"'tis\" => \"it is\", \"it'll\" => \"it will\", \"it'd\" => \"it would\", \"let's\" => \"let us\", \"we're\" => \"we are\", \"we'll\" => \"we will\", \"we'd\" => \"we would\", \"we've\" => \"we have\", \"they're\" => \"they are\", \"they'll\" => \"they will\", \"they'd\" => \"they would\", \"they've\" => \"they have\", \"there'd\" => \"there would\", \"there'll\" => \"there will\", \"there're\" => \"there are\", \"there's\" => \"there has\", \"there've\" => \"there have\", \"that's\" => \"that is\", \"that'll\" => \"that will\", \"that'd\" => \"that would\", \"who's\" => \"who is\", \"who'll\" => \"who will\", \"who'd\" => \"who would\", \"what's\" => \"what is\", \"what're\" => \"what are\", \"what'll\" => \"what will\", \"what'd\" => \"what would\", \"where's\" => \"where is\", \"where'll\" => \"where will\", \"where'd\" => \"where would\", \"when's\" => \"when is\", \"when'll\" => \"when will\", \"when'd\" => \"when would\", \"why's\" => \"why is\", \"why'll\" => \"why will\", \"why'd\" => \"why would\", \"how's\" => \"how is\", \"how'll\" => \"how will\", \"how'd\" => \"how would\", \"she'd've\" => \"she would have\", \"'tisn't\" => \"it is not\", \"isn't\" => \"is not\", \"aren't\" => \"are not\", \"wasn't\" => \"was not\", \"weren't\" => \"were not\", \"haven't\" => \"have not\", \"hasn't\" => \"has not\", \"hadn't\" => \"had not\", \"won't\" => \"will not\", \"wouldn't\" => \"would not\", \"don't\" => \"do not\", \"doesn't\" => \"does not\", \"didn't\" => \"did not\", \"can't\" => \"cannot\", \"couldn't\" => \"could not\", \"shouldn't\" => \"should not\", \"mightn't\" => \"might not\", \"mustn't\" => \"must not\", \"would've\" => \"would have\", \"should've\" => \"should have\", \"could've\" => \"could have\", \"might've\" => \"might have\", \"must've\" => \"must have\", \"o'\" => \"of\", \"o'clock\" => \"of the clock\", \"ma'am\" => \"madam\", \"ne'er-do-well\" => \"never-do-well\", \"cat-o'-nine-tails\" => \"cat-of-nine-tails\", \"jack-o'-lantern\" => \"jack-of-the-lantern\", \"will-o'-the-wisp\" => \"will-of-the-wisp\", \"'twas\" => \"it was\"}.freeze","doc":"N.B. Some English contractions are ambigous (i.e. \"she's\" can mean \"she has\" or \"she is\").\nPragmatic Tokenizer will return the most frequently appearing expanded contraction. Regardless, this should\nbe rather insignificant as in most cases one is probably removing stop words.","summary":"<p>N.B.</p>"},{"id":"STOP_WORDS","name":"STOP_WORDS","value":"(Set.new([\"i.e.\", \"e.g.\", \"&#;f\", \"'ll\", \"'ve\", \"+//\", \"-/+\", \"</li>\", \"</p>\", \"</td>\", \"<br\", \"<br/>\", \"<br/><br/>\", \"<li>\", \"<p>\", \"<sup></sup>\", \"<sup></sup></li>\", \"<td\", \"<td>\", \"a\", \"a's\", \"able\", \"about\", \"above\", \"abroad\", \"abst\", \"accordance\", \"according\", \"accordingly\", \"across\", \"act\", \"actually\", \"added\", \"adj\", \"adopted\", \"affected\", \"affecting\", \"affects\", \"after\", \"afterwards\", \"again\", \"against\", \"ago\", \"ah\", \"ahead\", \"ain't\", \"all\", \"allow\", \"allows\", \"almost\", \"alone\", \"along\", \"alongside\", \"already\", \"also\", \"although\", \"always\", \"am\", \"amid\", \"amidst\", \"among\", \"amongst\", \"amoungst\", \"amount\", \"an\", \"and\", \"announce\", \"another\", \"any\", \"anybody\", \"anyhow\", \"anymore\", \"anyone\", \"anything\", \"anyway\", \"anyways\", \"anywhere\", \"apart\", \"apparently\", \"appear\", \"appreciate\", \"appropriate\", \"approximately\", \"are\", \"aren\", \"aren't\", \"arent\", \"arise\", \"around\", \"as\", \"aside\", \"ask\", \"asking\", \"associated\", \"at\", \"auth\", \"available\", \"away\", \"awfully\", \"b\", \"back\", \"backward\", \"backwards\", \"be\", \"became\", \"because\", \"become\", \"becomes\", \"becoming\", \"been\", \"before\", \"beforehand\", \"begin\", \"beginning\", \"beginnings\", \"begins\", \"behind\", \"being\", \"believe\", \"below\", \"beside\", \"besides\", \"best\", \"better\", \"between\", \"beyond\", \"bill\", \"biol\", \"both\", \"bottom\", \"brief\", \"briefly\", \"but\", \"by\", \"c\", \"c'mon\", \"c's\", \"ca\", \"call\", \"came\", \"can\", \"can't\", \"cannot\", \"cant\", \"caption\", \"cause\", \"causes\", \"certain\", \"certainly\", \"changes\", \"class=\", \"clearly\", \"co\", \"co.\", \"com\", \"come\", \"comes\", \"computer\", \"con\", \"concerning\", \"consequently\", \"consider\", \"considering\", \"contain\", \"containing\", \"contains\", \"corresponding\", \"could\", \"couldn't\", \"couldnt\", \"course\", \"cry\", \"currently\", \"d\", \"dare\", \"daren't\", \"date\", \"de\", \"definitely\", \"describe\", \"described\", \"despite\", \"detail\", \"did\", \"didn't\", \"different\", \"directly\", \"do\", \"does\", \"doesn't\", \"doing\", \"don't\", \"done\", \"down\", \"downwards\", \"due\", \"during\", \"e\", \"each\", \"ed\", \"edu\", \"effect\", \"eg\", \"eight\", \"eighty\", \"either\", \"eleven\", \"else\", \"elsewhere\", \"empty\", \"end\", \"ending\", \"enough\", \"entirely\", \"especially\", \"et\", \"et-al\", \"etc\", \"even\", \"ever\", \"evermore\", \"every\", \"everybody\", \"everyone\", \"everything\", \"everywhere\", \"ex\", \"exactly\", \"example\", \"except\", \"f\", \"fairly\", \"far\", \"farther\", \"few\", \"fewer\", \"ff\", \"fifteen\", \"fifth\", \"fify\", \"fill\", \"find\", \"fire\", \"first\", \"five\", \"fix\", \"followed\", \"following\", \"follows\", \"for\", \"forever\", \"former\", \"formerly\", \"forth\", \"forty\", \"forward\", \"found\", \"four\", \"from\", \"front\", \"full\", \"further\", \"furthermore\", \"g\", \"gave\", \"get\", \"gets\", \"getting\", \"give\", \"given\", \"gives\", \"giving\", \"go\", \"goes\", \"going\", \"gone\", \"got\", \"gotten\", \"greetings\", \"h\", \"had\", \"hadn't\", \"half\", \"happens\", \"hardly\", \"has\", \"hasn't\", \"hasnt\", \"have\", \"haven't\", \"having\", \"he\", \"he'd\", \"he'll\", \"he's\", \"hed\", \"hello\", \"help\", \"hence\", \"her\", \"here\", \"here's\", \"hereafter\", \"hereby\", \"herein\", \"heres\", \"hereupon\", \"hers\", \"herself\", \"hes\", \"hi\", \"hid\", \"him\", \"himself\", \"his\", \"hither\", \"home\", \"hopefully\", \"how\", \"how's\", \"howbeit\", \"however\", \"http\", \"https\", \"hundred\", \"i\", \"i'd\", \"i'll\", \"i'm\", \"i've\", \"id\", \"ie\", \"if\", \"ignored\", \"im\", \"immediate\", \"immediately\", \"importance\", \"important\", \"in\", \"inasmuch\", \"inc\", \"inc.\", \"indeed\", \"index\", \"indicate\", \"indicated\", \"indicates\", \"information\", \"ing\", \"inner\", \"inside\", \"insofar\", \"instead\", \"interest\", \"into\", \"invention\", \"inward\", \"is\", \"isn't\", \"it\", \"it'd\", \"it'll\", \"it's\", \"itd\", \"its\", \"itself\", \"j\", \"just\", \"k\", \"keep\", \"keeps\", \"kept\", \"keys\", \"kg\", \"km\", \"know\", \"known\", \"knows\", \"l\", \"largely\", \"last\", \"lately\", \"later\", \"latter\", \"latterly\", \"least\", \"less\", \"lest\", \"let\", \"let's\", \"lets\", \"like\", \"liked\", \"likely\", \"likewise\", \"line\", \"little\", \"look\", \"looking\", \"looks\", \"low\", \"lower\", \"ltd\", \"m\", \"made\", \"mainly\", \"make\", \"makes\", \"many\", \"may\", \"maybe\", \"mayn't\", \"me\", \"mean\", \"means\", \"meantime\", \"meanwhile\", \"merely\", \"mg\", \"might\", \"mightn't\", \"mill\", \"million\", \"mine\", \"minus\", \"miss\", \"ml\", \"more\", \"moreover\", \"most\", \"mostly\", \"move\", \"mr\", \"mrs\", \"much\", \"mug\", \"must\", \"mustn't\", \"my\", \"myself\", \"n\", \"na\", \"name\", \"namely\", \"nay\", \"nd\", \"near\", \"nearly\", \"necessarily\", \"necessary\", \"need\", \"needn't\", \"needs\", \"neither\", \"never\", \"neverf\", \"neverless\", \"nevertheless\", \"new\", \"next\", \"nine\", \"ninety\", \"no\", \"no-one\", \"nobody\", \"non\", \"none\", \"nonetheless\", \"noone\", \"nor\", \"normally\", \"nos\", \"not\", \"noted\", \"nothing\", \"notwithstanding\", \"novel\", \"now\", \"nowhere\", \"o\", \"obtain\", \"obtained\", \"obviously\", \"of\", \"off\", \"often\", \"oh\", \"ok\", \"okay\", \"old\", \"omitted\", \"on\", \"once\", \"one\", \"one's\", \"ones\", \"only\", \"onto\", \"opposite\", \"or\", \"ord\", \"other\", \"others\", \"otherwise\", \"ought\", \"oughtn't\", \"our\", \"ours\", \"ours\", \"ourselves\", \"out\", \"outside\", \"over\", \"overall\", \"owing\", \"own\", \"p\", \"page\", \"pages\", \"part\", \"particular\", \"particularly\", \"past\", \"per\", \"perhaps\", \"placed\", \"please\", \"plus\", \"poorly\", \"possible\", \"possibly\", \"potentially\", \"pp\", \"predominantly\", \"present\", \"presumably\", \"previously\", \"primarily\", \"probably\", \"promptly\", \"proud\", \"provided\", \"provides\", \"put\", \"q\", \"que\", \"quickly\", \"quite\", \"qv\", \"r\", \"ran\", \"rather\", \"rd\", \"re\", \"readily\", \"really\", \"reasonably\", \"recent\", \"recently\", \"ref\", \"refs\", \"regarding\", \"regardless\", \"regards\", \"related\", \"relatively\", \"research\", \"respectively\", \"resulted\", \"resulting\", \"results\", \"right\", \"round\", \"run\", \"s\", \"said\", \"same\", \"saw\", \"say\", \"saying\", \"says\", \"sec\", \"second\", \"secondly\", \"section\", \"see\", \"seeing\", \"seem\", \"seemed\", \"seeming\", \"seems\", \"seen\", \"self\", \"selves\", \"sensible\", \"sent\", \"serious\", \"seriously\", \"seven\", \"several\", \"shall\", \"shan't\", \"she\", \"she'd\", \"she'll\", \"she's\", \"shed\", \"shes\", \"should\", \"shouldn't\", \"show\", \"showed\", \"shown\", \"showns\", \"shows\", \"side\", \"significant\", \"significantly\", \"similar\", \"similarly\", \"since\", \"sincere\", \"six\", \"sixty\", \"slightly\", \"so\", \"some\", \"somebody\", \"someday\", \"somehow\", \"someone\", \"somethan\", \"something\", \"sometime\", \"sometimes\", \"somewhat\", \"somewhere\", \"soon\", \"sorry\", \"specifically\", \"specified\", \"specify\", \"specifying\", \"state\", \"states\", \"still\", \"stop\", \"strongly\", \"sub\", \"substantially\", \"successfully\", \"such\", \"sufficiently\", \"suggest\", \"sup\", \"sure\", \"system\", \"t\", \"t's\", \"take\", \"taken\", \"taking\", \"tell\", \"ten\", \"tends\", \"th\", \"than\", \"thank\", \"thanks\", \"thanx\", \"that\", \"that'll\", \"that's\", \"that've\", \"thats\", \"the\", \"their\", \"theirs\", \"them\", \"themselves\", \"then\", \"thence\", \"there\", \"there'd\", \"there'll\", \"there're\", \"there's\", \"there've\", \"thereafter\", \"thereby\", \"thered\", \"therefore\", \"therein\", \"thereof\", \"therere\", \"theres\", \"thereto\", \"thereupon\", \"these\", \"they\", \"they'd\", \"they'll\", \"they're\", \"they've\", \"theyd\", \"theyre\", \"thick\", \"thin\", \"thing\", \"things\", \"think\", \"third\", \"thirty\", \"this\", \"thorough\", \"thoroughly\", \"those\", \"thou\", \"though\", \"thoughh\", \"thousand\", \"three\", \"throug\", \"through\", \"throughout\", \"thru\", \"thus\", \"til\", \"till\", \"tip\", \"to\", \"together\", \"too\", \"took\", \"top\", \"toward\", \"towards\", \"tried\", \"tries\", \"truly\", \"try\", \"trying\", \"ts\", \"twelve\", \"twenty\", \"twice\", \"two\", \"u\", \"un\", \"under\", \"underneath\", \"undoing\", \"unfortunately\", \"unless\", \"unlike\", \"unlikely\", \"until\", \"unto\", \"up\", \"upon\", \"ups\", \"upwards\", \"us\", \"use\", \"used\", \"useful\", \"usefully\", \"usefulness\", \"uses\", \"using\", \"usually\", \"uucp\", \"v\", \"value\", \"various\", \"versus\", \"very\", \"via\", \"viz\", \"vol\", \"vols\", \"vs\", \"w\", \"want\", \"wants\", \"was\", \"wasn't\", \"way\", \"we\", \"we'd\", \"we'll\", \"we're\", \"we've\", \"wed\", \"welcome\", \"well\", \"went\", \"were\", \"weren't\", \"what\", \"what'll\", \"what's\", \"what're\", \"what've\", \"whatever\", \"whats\", \"when\", \"when's\", \"whence\", \"whenever\", \"where\", \"where's\", \"whereafter\", \"whereas\", \"whereby\", \"wherein\", \"wheres\", \"whereupon\", \"wherever\", \"whether\", \"which\", \"whichever\", \"while\", \"whilst\", \"whim\", \"whither\", \"who\", \"who'd\", \"who'll\", \"who's\", \"whod\", \"whoever\", \"whole\", \"whom\", \"whomever\", \"whos\", \"whose\", \"why\", \"why's\", \"widely\", \"will\", \"willing\", \"wish\", \"with\", \"within\", \"without\", \"won't\", \"wonder\", \"word\", \"words\", \"world\", \"would\", \"wouldn't\", \"www\", \"x\", \"y\", \"yes\", \"yet\", \"you\", \"you'd\", \"you'll\", \"you're\", \"you've\", \"youd\", \"your\", \"youre\", \"yours\", \"yourself\", \"yourselves\", \"z\", \"zero\"] of ::String)).freeze","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languages/Common","kind":"module","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languages::Common","name":"Common"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languges","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languges","name":"Languges"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languges/English/SingleQuotes","path":"Cadmium/Tokenizer/PragmaticTokenizer/Languges/English/SingleQuotes.html","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languges::English::SingleQuotes","name":"SingleQuotes","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/pragmatic/languages/english.cr","line_number":102,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/english.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ALNUM_QUOTE","name":"ALNUM_QUOTE","value":"/(\\w|\\D)'(?!')(?=\\W|$)/","doc":null,"summary":null},{"id":"QUOTE_NOT_TWAS1","name":"QUOTE_NOT_TWAS1","value":"/(\\W|^)'(?!twas)/i","doc":null,"summary":null},{"id":"QUOTE_NOT_TWAS2","name":"QUOTE_NOT_TWAS2","value":"/(\\W|^)‘(?!twas)/i","doc":null,"summary":null},{"id":"QUOTE_WORD","name":"QUOTE_WORD","value":"/(\\W|^)'(?=\\w)/","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Languges/English","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Languges::English","name":"English"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"handle_single_quotes(text)-instance-method","html_id":"handle_single_quotes(text)-instance-method","name":"handle_single_quotes","doc":null,"summary":null,"abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"args_string":"(text)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/languages/english.cr#L108","def":{"name":"handle_single_quotes","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"text.gsub!(QUOTE_NOT_TWAS1, (\"\\u0001\" << PragmaticTokenizer::Languages::Common::PUNCTUATION_MAP[\"'\".freeze]) << \" \")\ntext.gsub!(QUOTE_NOT_TWAS2, (\"\\u0001\" << PragmaticTokenizer::Languages::Common::PUNCTUATION_MAP[\"‘\".freeze]) << \" \")\ntext.gsub!(QUOTE_WORD, \" \" << PragmaticTokenizer::Languages::Common::PUNCTUATION_MAP[\"'\".freeze])\ntext.gsub!(ALNUM_QUOTE, (\"\\u0001\" << PragmaticTokenizer::Languages::Common::PUNCTUATION_MAP[\"'\".freeze]) << \" \")\ntext\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer/Regex","path":"Cadmium/Tokenizer/PragmaticTokenizer/Regex.html","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer::Regex","name":"Regex","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/pragmatic/regex.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/pragmatic/regex.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ACUTE_ACCENT_S","name":"ACUTE_ACCENT_S","value":"/(?:\\s\\x{0301}(?=s))/","doc":null,"summary":null},{"id":"ALSO_DECIMALS","name":"ALSO_DECIMALS","value":"/(?:[[:alpha:]]*+[[:digit:]]+)/","doc":null,"summary":null},{"id":"APOSTROPHE_AND_S","name":"APOSTROPHE_AND_S","value":"/(?:['’`́]s)/","doc":"matches any character with hexadecimal value 00 through 1F or 7F.","summary":"<p>matches any character with hexadecimal value 00 through 1F or 7F.</p>"},{"id":"ASTERISK","name":"ASTERISK","value":"/(?:\\*+)/","doc":null,"summary":null},{"id":"BRACKET","name":"BRACKET","value":"/([{}()\\[\\]])/","doc":"we only keep first dash","summary":"<p>we only keep first dash</p>"},{"id":"CAPTURE_UNUSUAL_AND_EMOJI","name":"CAPTURE_UNUSUAL_AND_EMOJI","value":"/(#{RANGE_UNUSUAL_AND_EMOJI.source})/","doc":"Regular expressions used to capture items","summary":"<p>Regular expressions used to capture items</p>"},{"id":"CHUNK_LONG_INPUT_TEXT","name":"CHUNK_LONG_INPUT_TEXT","value":"/\\S.{1,10000}(?!\\S)/m","doc":"Text that needs to be tokenized is initially split into chunks of this length:","summary":"<p>Text that needs to be tokenized is initially split into chunks of this length:</p>"},{"id":"COLON1","name":"COLON1","value":"/(?:(:)([[:print:]]{2,}))/","doc":"Regular expressions which do not need to capture anything are enclosed in /(?: … )/ to enhance performance","summary":"<p>Regular expressions which do not need to capture anything are enclosed in /(?: … )/ to enhance performance</p>"},{"id":"COLON2","name":"COLON2","value":"/(?::)/","doc":"two non-space after colon prevent matching emoticons","summary":"<p>two non-space after colon prevent matching emoticons</p>"},{"id":"COLON_IN_URL","name":"COLON_IN_URL","value":"/(?<=[(https?|ftp)]):(?=\\/\\/)/","doc":null,"summary":null},{"id":"COMMA_AFTER_NON_DIGIT","name":"COMMA_AFTER_NON_DIGIT","value":"/(?<=\\D)(,)/","doc":null,"summary":null},{"id":"COMMA_BEFORE_NON_DIGIT","name":"COMMA_BEFORE_NON_DIGIT","value":"/(,)(?=\\D)/","doc":null,"summary":null},{"id":"COMMAS","name":"COMMAS","value":"/(?:([,‚])+)/","doc":null,"summary":null},{"id":"COMMAS_OR_PUNCTUATION","name":"COMMAS_OR_PUNCTUATION","value":"Regexp.union(STARTS_WITH_COMMAS, ENDS_WITH_PUNCTUATION1, ENDS_WITH_PUNCTUATION2)","doc":null,"summary":null},{"id":"CONTRACTIONS","name":"CONTRACTIONS","value":"/(?:[‘’‚‛‹›＇´`])/","doc":null,"summary":null},{"id":"CONTROL_CHARACTER","name":"CONTROL_CHARACTER","value":"/(?:[[:cntrl:]]+)/","doc":null,"summary":null},{"id":"COPYRIGHT_TRADEMARK","name":"COPYRIGHT_TRADEMARK","value":"/(?:[®©™]+)/","doc":null,"summary":null},{"id":"DIGIT","name":"DIGIT","value":"/(?:[[:digit:]]+)/","doc":null,"summary":null},{"id":"DINGBATS","name":"DINGBATS","value":"/(?:(#{RANGE_DINGBATS.source}#{RANGE_VARIATION_SELECTORS.source}*+))/","doc":null,"summary":null},{"id":"DOMAIN1","name":"DOMAIN1","value":"/(?:((https?:\\/\\/|)[[:print:]]+\\.[[:alpha:]]{2,6}(:[0-9]{1,5})?(\\/[[:print:]]*+)?))/","doc":null,"summary":null},{"id":"DOMAIN2","name":"DOMAIN2","value":"/(?:[[:alnum:]]{2,}([\\-.][[:alnum:]]+)*\\.[[:alpha:]]{2,6}(:[0-9]{1,5})?(\\/[[:print:]]*+)?)/","doc":null,"summary":null},{"id":"DOMAIN_OR_EMAIL","name":"DOMAIN_OR_EMAIL","value":"Regexp.union(ONLY_DOMAIN1, ONLY_EMAIL)","doc":null,"summary":null},{"id":"DOMAIN_PREFIX","name":"DOMAIN_PREFIX","value":"/(?:https?:\\/\\/|www\\.|[[:alpha:]]\\.)/","doc":null,"summary":null},{"id":"DOMAIN_SUFFIX","name":"DOMAIN_SUFFIX","value":"/(?:[[:alpha:]]\\.(?:com|net|org|edu|gov|mil|int|[[:alpha:]]{2}))/","doc":null,"summary":null},{"id":"EMAIL","name":"EMAIL","value":"/(?:[[:print:]]+[＠@][[:print:]]+\\.[[:print:]]+)/","doc":null,"summary":null},{"id":"ENCLOSED_PLUS","name":"ENCLOSED_PLUS","value":"/(?:([[:print:]]+)\\+([[:print:]]+))/","doc":null,"summary":null},{"id":"ENDS_WITH_ALPHA","name":"ENDS_WITH_ALPHA","value":"/[[:alpha:]]$/","doc":null,"summary":null},{"id":"ENDS_WITH_APOSTROPHE_AND_S","name":"ENDS_WITH_APOSTROPHE_AND_S","value":"/#{APOSTROPHE_AND_S.source}$/","doc":null,"summary":null},{"id":"ENDS_WITH_COLON2","name":"ENDS_WITH_COLON2","value":"/#{COLON2.source}$/","doc":null,"summary":null},{"id":"ENDS_WITH_DIGIT","name":"ENDS_WITH_DIGIT","value":"/[[:digit:]]$/","doc":null,"summary":null},{"id":"ENDS_WITH_DOMAIN","name":"ENDS_WITH_DOMAIN","value":"/#{DOMAIN_SUFFIX.source}$/","doc":null,"summary":null},{"id":"ENDS_WITH_EXCITED_ONE","name":"ENDS_WITH_EXCITED_ONE","value":"/#{ONE_AS_EXCLAMATION.source}$/","doc":null,"summary":null},{"id":"ENDS_WITH_ONES_EXCLAMATIONS","name":"ENDS_WITH_ONES_EXCLAMATIONS","value":"/#{ONES_EXCLAMATIONS.source}$/","doc":null,"summary":null},{"id":"ENDS_WITH_PUNCTUATION1","name":"ENDS_WITH_PUNCTUATION1","value":"/#{PUNCTUATION1.source}$/","doc":null,"summary":null},{"id":"ENDS_WITH_PUNCTUATION2","name":"ENDS_WITH_PUNCTUATION2","value":"/#{PUNCTUATION2.source}$/","doc":null,"summary":null},{"id":"ENDS_WITH_UNDERSCORE","name":"ENDS_WITH_UNDERSCORE","value":"/#{UNDERSCORE.source}$/","doc":null,"summary":null},{"id":"EXCLAMATION_BETWEEN_ALPHA","name":"EXCLAMATION_BETWEEN_ALPHA","value":"/(?<=[[:alpha:]])(!)(?=[[:alpha:]])/","doc":null,"summary":null},{"id":"HASHTAG","name":"HASHTAG","value":"/(?:[#＃][[:print:]]+)/","doc":null,"summary":null},{"id":"HASHTAG_OR_MENTION","name":"HASHTAG_OR_MENTION","value":"/(?:[@#＠＃][[:print:]]+)/","doc":null,"summary":null},{"id":"HASHTAG_WITH_HYPHEN","name":"HASHTAG_WITH_HYPHEN","value":"/(?:^([#＃][[:digit:]]+)-)/","doc":null,"summary":null},{"id":"HTTP","name":"HTTP","value":"/(?:https?:\\/\\/)/","doc":null,"summary":null},{"id":"HYPHEN_AFTER_NON_WORD","name":"HYPHEN_AFTER_NON_WORD","value":"/(?<=\\W)(-)/","doc":null,"summary":null},{"id":"HYPHEN_BEFORE_NON_WORD","name":"HYPHEN_BEFORE_NON_WORD","value":"/(-)(?=\\W)/","doc":null,"summary":null},{"id":"HYPHEN_OR_UNDERSCORE","name":"HYPHEN_OR_UNDERSCORE","value":"/(?:[-_])/","doc":null,"summary":null},{"id":"IRRELEVANT_CHARACTERS","name":"IRRELEVANT_CHARACTERS","value":"Regexp.union(STARTS_WITH_PUNCTUATION3, ENDS_WITH_COLON2, ENDS_WITH_ONES_EXCLAMATIONS, CONTROL_CHARACTER, COPYRIGHT_TRADEMARK, RANGE_ALPHANUMERIC_SUPPLEMENT)","doc":null,"summary":null},{"id":"MANY_PERIODS","name":"MANY_PERIODS","value":"/(?:^\\.{2,}$)/","doc":null,"summary":null},{"id":"MENTION","name":"MENTION","value":"/(?:[@＠][[:print:]]+)/","doc":null,"summary":null},{"id":"MULTIPLE_DASHES","name":"MULTIPLE_DASHES","value":"/(-){2,}/","doc":"we keep all dashes","summary":"<p>we keep all dashes</p>"},{"id":"MULTIPLE_DOTS","name":"MULTIPLE_DOTS","value":"/(\\.{2,})/","doc":null,"summary":null},{"id":"NO_BREAK_SPACE","name":"NO_BREAK_SPACE","value":"/(?:\\x{00A0}+)/","doc":null,"summary":null},{"id":"NO_DECIMALS","name":"NO_DECIMALS","value":"/(?:^\\D+$)/","doc":null,"summary":null},{"id":"NO_DECIMALS_NO_NUMERALS","name":"NO_DECIMALS_NO_NUMERALS","value":"Regexp.union(ALSO_DECIMALS, ONLY_ROMAN_NUMERALS)","doc":null,"summary":null},{"id":"NOT_URL","name":"NOT_URL","value":"/(?:^(?!#{DOMAIN_PREFIX.source})([[:print:]]*))/","doc":null,"summary":null},{"id":"ONE_AS_EXCLAMATION","name":"ONE_AS_EXCLAMATION","value":"/(?:\\D1+)/","doc":null,"summary":null},{"id":"ONES_EXCLAMATIONS","name":"ONES_EXCLAMATIONS","value":"/(?:!+(1*+!*+)*+)/","doc":null,"summary":null},{"id":"ONLY_DECIMALS","name":"ONLY_DECIMALS","value":"/(?:^[[:digit:]]+$)/","doc":null,"summary":null},{"id":"ONLY_DOMAIN1","name":"ONLY_DOMAIN1","value":"/^#{DOMAIN1}$/","doc":null,"summary":null},{"id":"ONLY_DOMAIN2","name":"ONLY_DOMAIN2","value":"/^#{DOMAIN2}$/","doc":null,"summary":null},{"id":"ONLY_DOMAIN3","name":"ONLY_DOMAIN3","value":"Regexp.union(STARTS_WITH_DOMAIN, ENDS_WITH_DOMAIN)","doc":null,"summary":null},{"id":"ONLY_EMAIL","name":"ONLY_EMAIL","value":"/^#{EMAIL}$/","doc":null,"summary":null},{"id":"ONLY_HASHTAG","name":"ONLY_HASHTAG","value":"/^#{HASHTAG}$/","doc":null,"summary":null},{"id":"ONLY_HASHTAG_MENTION","name":"ONLY_HASHTAG_MENTION","value":"/^#{HASHTAG_OR_MENTION}$/","doc":null,"summary":null},{"id":"ONLY_MENTION","name":"ONLY_MENTION","value":"/^#{MENTION}$/","doc":null,"summary":null},{"id":"ONLY_PUNCTUATION","name":"ONLY_PUNCTUATION","value":"/^[[[:punct:]]^\\|+]+$/","doc":null,"summary":null},{"id":"ONLY_ROMAN_NUMERALS","name":"ONLY_ROMAN_NUMERALS","value":"/^(?=[MDCLXVI])M*(C[MD]|D?C*)(X[CL]|L?X*)(I[XV]|V?I*)$/i","doc":null,"summary":null},{"id":"PERCENT_BEFORE_DIGIT","name":"PERCENT_BEFORE_DIGIT","value":"/(%)\\d+/","doc":null,"summary":null},{"id":"PERIOD_AND_PRIOR","name":"PERIOD_AND_PRIOR","value":"/(?:(.+\\.))/","doc":null,"summary":null},{"id":"PERIOD_ONLY","name":"PERIOD_ONLY","value":"/(?:(\\.))/","doc":null,"summary":null},{"id":"PRE_PROCESS","name":"PRE_PROCESS","value":"Regexp.union(SHIFT_BOUNDARY_CHARACTERS, MULTIPLE_DOTS, BRACKET, MULTIPLE_DASHES, EXCLAMATION_BETWEEN_ALPHA, PERCENT_BEFORE_DIGIT, COMMA_BEFORE_NON_DIGIT, COMMA_AFTER_NON_DIGIT)","doc":null,"summary":null},{"id":"PUNCTUATION1","name":"PUNCTUATION1","value":"/(?:([\\p{Pd}\\p{Pe}\\p{Pf}\\p{Pi}\\p{Ps}])+)/","doc":null,"summary":null},{"id":"PUNCTUATION2","name":"PUNCTUATION2","value":"/(?:(?<=\\S)([!?#{RANGE_FULLWIDTH.source}]+))/","doc":"all punctuation categories except Pc (Connector) and Po (other)","summary":"<p>all punctuation categories except Pc (Connector) and Po (other)</p>"},{"id":"PUNCTUATION3","name":"PUNCTUATION3","value":"/(?:[!%\\-–\\x{00AD}]+)/","doc":null,"summary":null},{"id":"PUNCTUATION4","name":"PUNCTUATION4","value":"/(?:[.．。]+)/","doc":null,"summary":null},{"id":"QUESTION_MARK_NOT_URL","name":"QUESTION_MARK_NOT_URL","value":"/#{NOT_URL.source}(\\?)/","doc":null,"summary":null},{"id":"QUOTE","name":"QUOTE","value":"/('')|[\"”]/","doc":null,"summary":null},{"id":"QUOTE_BEFORE_PRINT","name":"QUOTE_BEFORE_PRINT","value":"/(('')|[\"“])(?=[[:print:]])/","doc":null,"summary":null},{"id":"RANGE_ALPHANUMERIC_SUPPLEMENT","name":"RANGE_ALPHANUMERIC_SUPPLEMENT","value":"/[\\x{1F100}-\\x{1F1FF}]/","doc":"e.g. ！＂＃＇？","summary":"<p>e.g.</p>"},{"id":"RANGE_DINGBATS","name":"RANGE_DINGBATS","value":"/[\\x{2701}-\\x{27BE}]/","doc":"Ranges","summary":"<p>Ranges</p>"},{"id":"RANGE_FULLWIDTH","name":"RANGE_FULLWIDTH","value":"/[\\x{FF01}-\\x{fF1F}]/","doc":"alter the previous character","summary":"<p>alter the previous character</p>"},{"id":"RANGE_UNUSUAL_AND_EMOJI","name":"RANGE_UNUSUAL_AND_EMOJI","value":"/[\\x{203C}-\\x{3299}\\x{1F000}-\\x{1F644}]/","doc":null,"summary":null},{"id":"RANGE_VARIATION_SELECTORS","name":"RANGE_VARIATION_SELECTORS","value":"/[\\x{FE00}-\\x{FE0F}]/","doc":"e.g. ✁✎✳❄➾","summary":"<p>e.g.</p>"},{"id":"SHIFT_BOUNDARY_CHARACTERS","name":"SHIFT_BOUNDARY_CHARACTERS","value":"/([;^&|…«»„“¿¡≠]+)/","doc":null,"summary":null},{"id":"SLASH_NOT_URL","name":"SLASH_NOT_URL","value":"/#{NOT_URL.source}\\//","doc":"Should we change specs and also capture \"/\", just like we capture \":\" and \"?\"","summary":"<p>Should we change specs and also capture \"/\", just like we capture \":\" and \"?\"</p>"},{"id":"STARTS_WITH_COLON1","name":"STARTS_WITH_COLON1","value":"/^#{COLON1.source}/","doc":null,"summary":null},{"id":"STARTS_WITH_COMMAS","name":"STARTS_WITH_COMMAS","value":"/^#{COMMAS.source}/","doc":null,"summary":null},{"id":"STARTS_WITH_DOMAIN","name":"STARTS_WITH_DOMAIN","value":"/^#{DOMAIN_PREFIX.source}/","doc":null,"summary":null},{"id":"STARTS_WITH_HTTP","name":"STARTS_WITH_HTTP","value":"/^#{HTTP.source}/","doc":null,"summary":null},{"id":"STARTS_WITH_PUNCTUATION3","name":"STARTS_WITH_PUNCTUATION3","value":"/^#{PUNCTUATION3.source}/","doc":null,"summary":null},{"id":"STARTS_WITH_UNDERSCORE","name":"STARTS_WITH_UNDERSCORE","value":"/^#{UNDERSCORE.source}/","doc":null,"summary":null},{"id":"TIME_WITH_COLON","name":"TIME_WITH_COLON","value":"/(?:\\d:\\d)/","doc":null,"summary":null},{"id":"UNDERSCORE","name":"UNDERSCORE","value":"/(?:_+)/","doc":null,"summary":null},{"id":"UNDERSCORES_ASTERISK","name":"UNDERSCORES_ASTERISK","value":"Regexp.union(STARTS_WITH_UNDERSCORE, ENDS_WITH_UNDERSCORE, ASTERISK)","doc":null,"summary":null},{"id":"VARIOUS","name":"VARIOUS","value":"Regexp.union(SLASH_NOT_URL, QUESTION_MARK_NOT_URL, ENCLOSED_PLUS, STARTS_WITH_COLON1, DINGBATS, HASHTAG_WITH_HYPHEN, CAPTURE_UNUSUAL_AND_EMOJI)","doc":"Can this constant name be clarified?","summary":"<p>Can this constant name be clarified?</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer","name":"PragmaticTokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/RegexTokenizer","path":"Cadmium/Tokenizer/RegexTokenizer.html","kind":"class","full_name":"Cadmium::Tokenizer::RegexTokenizer","name":"RegexTokenizer","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/regex_tokenizer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/regex_tokenizer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/WhitespaceTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::WhitespaceTokenizer","name":"WhitespaceTokenizer"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/WordPunctuationTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::WordPunctuationTokenizer","name":"WordPunctuationTokenizer"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/WordTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::WordTokenizer","name":"WordTokenizer"}],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pattern:Regex,*,gaps=nil,discard_empty=nil)-class-method","html_id":"new(pattern:Regex,*,gaps=nil,discard_empty=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"Regex"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"gaps","doc":null,"default_value":"nil","external_name":"gaps","restriction":""},{"name":"discard_empty","doc":null,"default_value":"nil","external_name":"discard_empty","restriction":""}],"args_string":"(pattern : Regex, *, gaps = <span class=\"n\">nil</span>, discard_empty = <span class=\"n\">nil</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/regex_tokenizer.cr#L10","def":{"name":"new","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"Regex"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"gaps","doc":null,"default_value":"nil","external_name":"gaps","restriction":""},{"name":"discard_empty","doc":null,"default_value":"nil","external_name":"discard_empty","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pattern, gaps: gaps, discard_empty: discard_empty)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"tokenize(string:String):Array(String)-instance-method","html_id":"tokenize(string:String):Array(String)-instance-method","name":"tokenize","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Array(String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/regex_tokenizer.cr#L16","def":{"name":"tokenize","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"if @gaps\n  results = string.split(@pattern)\n  @discard_empty ? results.reject do |r|\n    (r == \"\") || (r == \" \")\n  end : results\nelse\n  string.split(@pattern)\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/SentenceTokenizer","path":"Cadmium/Tokenizer/SentenceTokenizer.html","kind":"class","full_name":"Cadmium::Tokenizer::SentenceTokenizer","name":"SentenceTokenizer","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/sentence_tokenizer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/sentence_tokenizer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"REGEX_PATTERN","name":"REGEX_PATTERN","value":"/([\\\"\\'\\‘\\“\\'\\\"\\[\\(\\{\\⟨][^\\.\\?\\!]+[\\.\\?\\!][\\\"\\'\\’\\”\\'\\\"\\]\\)\\}\\⟩]|[^\\.\\?\\!]+[\\.\\?\\!])\\s?/","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"tokenize(string:String):Array(String)-instance-method","html_id":"tokenize(string:String):Array(String)-instance-method","name":"tokenize","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Array(String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/sentence_tokenizer.cr#L8","def":{"name":"tokenize","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"tokens = (string.split(REGEX_PATTERN)).reject(&.empty?).map(&.strip)\ntrim(tokens)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/StringExtension","path":"Cadmium/Tokenizer/StringExtension.html","kind":"module","full_name":"Cadmium::Tokenizer::StringExtension","name":"StringExtension","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/tokenizer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/cadmium/String","kind":"class","full_name":"String","name":"String"}],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"tokenize(tokenizer=Cadmium::Tokenizer::WordPunctuationTokenizer,*args,**kwargs)-instance-method","html_id":"tokenize(tokenizer=Cadmium::Tokenizer::WordPunctuationTokenizer,*args,**kwargs)-instance-method","name":"tokenize","doc":null,"summary":null,"abstract":false,"args":[{"name":"tokenizer","doc":null,"default_value":"Cadmium::Tokenizer::WordPunctuationTokenizer","external_name":"tokenizer","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(tokenizer = <span class=\"t\">Cadmium</span><span class=\"t\">::</span><span class=\"t\">Tokenizer</span><span class=\"t\">::</span><span class=\"t\">WordPunctuationTokenizer</span>, *args, **kwargs)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer.cr#L6","def":{"name":"tokenize","args":[{"name":"tokenizer","doc":null,"default_value":"Cadmium::Tokenizer::WordPunctuationTokenizer","external_name":"tokenizer","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tokenizer = tokenizer.new(*args, **kwargs)\ntokenizer.tokenize(self)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","path":"Cadmium/Tokenizer/TokenizerBase.html","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase","abstract":true,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/tokenizer_base.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/tokenizer_base.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/AggressiveTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::AggressiveTokenizer","name":"AggressiveTokenizer"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/CaseTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::CaseTokenizer","name":"CaseTokenizer"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/PragmaticTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::PragmaticTokenizer","name":"PragmaticTokenizer"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/RegexTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::RegexTokenizer","name":"RegexTokenizer"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/SentenceTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::SentenceTokenizer","name":"SentenceTokenizer"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TreebankWordTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::TreebankWordTokenizer","name":"TreebankWordTokenizer"}],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"tokenize(string:String):Array(String)-instance-method","html_id":"tokenize(string:String):Array(String)-instance-method","name":"tokenize","doc":null,"summary":null,"abstract":true,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Array(String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/tokenizer_base.cr#L4","def":{"name":"tokenize","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":""}},{"id":"trim(arr)-instance-method","html_id":"trim(arr)-instance-method","name":"trim","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":""}],"args_string":"(arr)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/tokenizer_base.cr#L6","def":{"name":"trim","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if arr[0] == \"\"\n  arr.shift\nend\nif arr[-1] == \"\"\n  arr.pop\nend\narr\n"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TreebankWordTokenizer","path":"Cadmium/Tokenizer/TreebankWordTokenizer.html","kind":"class","full_name":"Cadmium::Tokenizer::TreebankWordTokenizer","name":"TreebankWordTokenizer","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/treebank_word_tokenizer.cr","line_number":8,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/treebank_word_tokenizer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CONTRACTIONS_2","name":"CONTRACTIONS_2","value":"[/(.)('ll|'re|'ve|n't|'s|'m|'d)\\b/i, /\\b(can)(not)\\b/i, /\\b(D)('ye)\\b/i, /\\b(Gim)(me)\\b/i, /\\b(Gon)(na)\\b/i, /\\b(Got)(ta)\\b/i, /\\b(Lem)(me)\\b/i, /\\b(Mor)('n)\\b/i, /\\b(T)(is)\\b/i, /\\b(T)(was)\\b/i, /\\b(Wan)(na)\\b/i]","doc":null,"summary":null},{"id":"CONTRACTIONS_3","name":"CONTRACTIONS_3","value":"[/\\b(Whad)(dd)(ya)\\b/i, /\\b(Wha)(t)(cha)\\b/i]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer"},"doc":"The Treebank tokenizer uses regular expressions to tokenize text as in Penn Treebank.\nThis implementation is a port of the tokenizer sed script written by Robert McIntyre\nand available at http://www.cis.upenn.edu/~treebank/tokenizer.sed.","summary":"<p>The Treebank tokenizer uses regular expressions to tokenize text as in Penn Treebank.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"tokenize(string:String):Array(String)-instance-method","html_id":"tokenize(string:String):Array(String)-instance-method","name":"tokenize","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Array(String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/treebank_word_tokenizer.cr#L28","def":{"name":"tokenize","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"CONTRACTIONS_2.each do |rex|\n  string = string.gsub(rex, \"\\\\1 \\\\2\")\nend\nCONTRACTIONS_3.each do |rex|\n  string = string.gsub(rex, \"\\\\1 \\\\2 \\\\3\")\nend\nstring = string.gsub(/([^\\w\\.\\'\\-\\/\\+\\<\\>,&])/, \" \\\\1 \")\nstring = string.gsub(/(,\\s)/, \" \\\\1\")\nstring = string.gsub(/('\\s)/, \" \\\\1\")\nstring = string.gsub(/\\. *(\\n|$)/, \" . \")\n(string.split(/\\s+/)).reject(&.empty?)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/WhitespaceTokenizer","path":"Cadmium/Tokenizer/WhitespaceTokenizer.html","kind":"class","full_name":"Cadmium::Tokenizer::WhitespaceTokenizer","name":"WhitespaceTokenizer","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/RegexTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::RegexTokenizer","name":"RegexTokenizer"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/RegexTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::RegexTokenizer","name":"RegexTokenizer"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/whitespace_tokenizer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/whitespace_tokenizer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"REGEX_PATTERN","name":"REGEX_PATTERN","value":"/[^A-Za-zА-Яа-я0-9_]+/","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/whitespace_tokenizer.cr#L8","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/WordPunctuationTokenizer","path":"Cadmium/Tokenizer/WordPunctuationTokenizer.html","kind":"class","full_name":"Cadmium::Tokenizer::WordPunctuationTokenizer","name":"WordPunctuationTokenizer","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/RegexTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::RegexTokenizer","name":"RegexTokenizer"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/RegexTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::RegexTokenizer","name":"RegexTokenizer"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/word_punctuation_tokenizer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/word_punctuation_tokenizer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"REGEX_PATTERN","name":"REGEX_PATTERN","value":"/(\\w+|[а-я0-9_]+|\\.|\\!|\\'|\\\"\")/i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/word_punctuation_tokenizer.cr#L8","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/WordTokenizer","path":"Cadmium/Tokenizer/WordTokenizer.html","kind":"class","full_name":"Cadmium::Tokenizer::WordTokenizer","name":"WordTokenizer","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/RegexTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::RegexTokenizer","name":"RegexTokenizer"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/RegexTokenizer","kind":"class","full_name":"Cadmium::Tokenizer::RegexTokenizer","name":"RegexTokenizer"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/TokenizerBase","kind":"class","full_name":"Cadmium::Tokenizer::TokenizerBase","name":"TokenizerBase"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/tokenizer/word_tokenizer.cr","line_number":5,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/word_tokenizer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"REGEX_PATTERN","name":"REGEX_PATTERN","value":"/[^A-Za-zА-Яа-я0-9_]+/","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer","kind":"module","full_name":"Cadmium::Tokenizer","name":"Tokenizer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/tokenizer/word_tokenizer.cr#L8","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Transliterator","path":"Cadmium/Transliterator.html","kind":"module","full_name":"Cadmium::Transliterator","name":"Transliterator","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Transliterator/CharMap","kind":"module","full_name":"Cadmium::Transliterator::CharMap","name":"CharMap"}],"locations":[{"filename":"cadmium/transliterator/char_map.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/transliterator/char_map.cr"},{"filename":"cadmium/transliterator.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/transliterator.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_OPTS","name":"DEFAULT_OPTS","value":"{unknown: \"[?]\", replace: {} of String | Regex => String, replace_after: {} of String | Regex => String, ignore: [] of String | Char, trim: true}","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/Transliterator/CharMap","kind":"module","full_name":"Cadmium::Transliterator::CharMap","name":"CharMap"}],"extended_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/Transliterator","kind":"module","full_name":"Cadmium::Transliterator","name":"Transliterator"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"replace_str(source,replace)-instance-method","html_id":"replace_str(source,replace)-instance-method","name":"replace_str","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"replace","doc":null,"default_value":"","external_name":"replace","restriction":""}],"args_string":"(source, replace)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/transliterator.cr#L63","def":{"name":"replace_str","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""},{"name":"replace","doc":null,"default_value":"","external_name":"replace","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"str = source.dup\nreplace.each do |__arg0|\n  item = __arg0[0]\n  replacement = __arg0[1]\n  str = str.gsub(item, replacement)\nend\nstr\n"}},{"id":"transliterate(source,**options)-instance-method","html_id":"transliterate(source,**options)-instance-method","name":"transliterate","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"args_string":"(source, **options)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/transliterator.cr#L19","def":{"name":"transliterate","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"opts = DEFAULT_OPTS.merge(options)\nstr = source.dup\nif opts[:ignore].size > 0\nend\nstr = replace_str(str, opts[:replace])\nstr = fix_chinese_space(str)\nstr_arr = ucs2decode(str)\nstr_arr_new = [] of String\nstr_arr.each do |ord|\n  if ord > 65535\n    str_arr_new.push(opts[:unknown])\n  else\n    offset = ord >> 8\n    if @@char_map[offset]?\n    else\n      @@char_map[offset] = CHAR_MAP[offset]? || ([] of String)\n    end\n    ord = ord & 255\n    text = @@char_map[offset][ord]?\n    if text.nil?\n      str_arr_new.push(opts[:unknown])\n    else\n      str_arr_new.push(@@char_map[offset][ord].not_nil!)\n    end\n  end\nend\nif opts[:trim] && str_arr_new.size > 1\n  opts[:replace_after][/(^ +?)|( +?$)/] = \"\"\nend\nstr_new = str_arr_new.join(\"\")\nstr_new = replace_str(str_new, opts[:replace_after])\nstr_new\n"}}],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Transliterator/CharMap","path":"Cadmium/Transliterator/CharMap.html","kind":"module","full_name":"Cadmium::Transliterator::CharMap","name":"CharMap","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/transliterator/char_map.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/transliterator/char_map.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Transliterator","kind":"module","full_name":"Cadmium::Transliterator","name":"Transliterator"}],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Transliterator","kind":"module","full_name":"Cadmium::Transliterator","name":"Transliterator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Transliterator/StringExtension","path":"Cadmium/Transliterator/StringExtension.html","kind":"module","full_name":"Cadmium::Transliterator::StringExtension","name":"StringExtension","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/transliterator.cr","line_number":105,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/transliterator.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/cadmium/String","kind":"class","full_name":"String","name":"String"}],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Transliterator","kind":"module","full_name":"Cadmium::Transliterator","name":"Transliterator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"transliterate(**options)-instance-method","html_id":"transliterate(**options)-instance-method","name":"transliterate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**options)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/transliterator.cr#L106","def":{"name":"transliterate","args":[],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Cadmium::Transliterator.transliterate(self, **options)"}}],"macros":[],"types":[]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/Trie","path":"Cadmium/Trie.html","kind":"class","full_name":"Cadmium::Trie","name":"Trie","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/trie.cr","line_number":26,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/trie.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(case_sensitive=true)-class-method","html_id":"new(case_sensitive=true)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"case_sensitive","doc":null,"default_value":"true","external_name":"case_sensitive","restriction":""}],"args_string":"(case_sensitive = <span class=\"n\">true</span>)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/trie.cr#L30","def":{"name":"new","args":[{"name":"case_sensitive","doc":null,"default_value":"true","external_name":"case_sensitive","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(case_sensitive)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(string:String)-instance-method","html_id":"add(string:String)-instance-method","name":"add","doc":"Adds a string to the Trie\n\nReturns true if the string was already present, and false otherwise","summary":"<p>Adds a string to the Trie</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/trie.cr#L36","def":{"name":"add","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @case_sensitive\nelse\n  string = string.downcase\nend\nadd(string.chars)\n"}},{"id":"add(strings:Array(String))-instance-method","html_id":"add(strings:Array(String))-instance-method","name":"add","doc":"Adds an array of strings to the Trie\n\nReturns true if all of the strings were already present, and false otherwise","summary":"<p>Adds an array of strings to the Trie</p>","abstract":false,"args":[{"name":"strings","doc":null,"default_value":"","external_name":"strings","restriction":"Array(String)"}],"args_string":"(strings : Array(String))","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/trie.cr#L44","def":{"name":"add","args":[{"name":"strings","doc":null,"default_value":"","external_name":"strings","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"strings.reduce(true) do |memo, string|\n  (add(string)) && memo\nend"}},{"id":"contains?(string)-instance-method","html_id":"contains?(string)-instance-method","name":"contains?","doc":"Determines if *string* has been added to the Trie","summary":"<p>Determines if <em>string</em> has been added to the Trie</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"args_string":"(string)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/trie.cr#L73","def":{"name":"contains?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @case_sensitive\nelse\n  string = string.downcase\nend\ncontains?(string.chars)\n"}},{"id":"find_prefix(lookup)-instance-method","html_id":"find_prefix(lookup)-instance-method","name":"find_prefix","doc":"Finds the largest prefix matching the prefix of *lookup*\n\nReturns a 2-Tuple. If a prefix was found, it will be the first element;\notherwise, the first element will be nil. The second element will be the\nsubstring that was not matched.","summary":"<p>Finds the largest prefix matching the prefix of <em>lookup</em></p>","abstract":false,"args":[{"name":"lookup","doc":null,"default_value":"","external_name":"lookup","restriction":""}],"args_string":"(lookup)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/trie.cr#L101","def":{"name":"find_prefix","args":[{"name":"lookup","doc":null,"default_value":"","external_name":"lookup","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @case_sensitive\nelse\n  lookup = lookup.downcase\nend\ncollect_prefix_and_suffix(lookup.chars, [] of Char, nil)\n"}},{"id":"keys_with_prefix(prefix)-instance-method","html_id":"keys_with_prefix(prefix)-instance-method","name":"keys_with_prefix","doc":"Finds all of the words that begin with *prefix*","summary":"<p>Finds all of the words that begin with <em>prefix</em></p>","abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"args_string":"(prefix)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/trie.cr#L126","def":{"name":"keys_with_prefix","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"results = [] of String\nif @case_sensitive\nelse\n  prefix = prefix.downcase\nend\nif node = get_node_with_prefix(prefix.chars)\n  node.collect_keys_beginning_with_prefix(prefix, results)\nend\nresults\n"}},{"id":"matches_on_path(path)-instance-method","html_id":"matches_on_path(path)-instance-method","name":"matches_on_path","doc":"Finds all of the words stored in the Trie that are found along *path*","summary":"<p>Finds all of the words stored in the Trie that are found along <em>path</em></p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/trie.cr#L164","def":{"name":"matches_on_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @case_sensitive\nelse\n  path = path.downcase\nend\ncollect_matches_on_path(path.chars, [] of Char, [] of String)\n"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":"Returns the number of nodes in the Trie","summary":"<p>Returns the number of nodes in the Trie</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/trie.cr#L187","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dictionary.sum(1) do |_, node|\n  node.size\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Util","path":"Cadmium/Util.html","kind":"module","full_name":"Cadmium::Util","name":"Util","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/util/paragraph.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/paragraph.cr"},{"filename":"cadmium/util/sentence.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/sentence.cr"},{"filename":"cadmium/util/stop_words.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/stop_words.cr"},{"filename":"cadmium/util/syllable.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/syllable.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Util/Paragraph","path":"Cadmium/Util/Paragraph.html","kind":"module","full_name":"Cadmium::Util::Paragraph","name":"Paragraph","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/util/paragraph.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/paragraph.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Util","kind":"module","full_name":"Cadmium::Util","name":"Util"},"doc":null,"summary":null,"class_methods":[{"id":"paragraphs(text)-class-method","html_id":"paragraphs(text)-class-method","name":"paragraphs","doc":"Splits text into an array of paragraphs.","summary":"<p>Splits text into an array of paragraphs.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"args_string":"(text)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/paragraph.cr#L5","def":{"name":"paragraphs","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(text.strip.split(/(?:\\n[\\r\\t ]*)+/)).map do |p|\n  p.strip\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Util/Sentence","path":"Cadmium/Util/Sentence.html","kind":"module","full_name":"Cadmium::Util::Sentence","name":"Sentence","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/util/sentence.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/sentence.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ABBR_DETECT","name":"ABBR_DETECT","value":"/(?:\\s(?:(?:(?:\\w\\.){2,}\\w?)|(?:\\w\\.\\w)))/","doc":"Finds abbreviations, like e.g., i.e., U.S., u.S., U.S.S.R.","summary":"<p>Finds abbreviations, like e.g., i.e., U.S., u.S., U.S.S.R.</p>"},{"id":"CORRECT_ABBR","name":"CORRECT_ABBR","value":"/(#{ABBR_DETECT})#{EOS}(\\s+[a-z0-9])/","doc":null,"summary":null},{"id":"DAYS","name":"DAYS","value":"[\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"]","doc":null,"summary":null},{"id":"ENTITIES","name":"ENTITIES","value":"[\"dept\", \"univ\", \"uni\", \"assn\", \"bros\", \"inc\", \"ltd\", \"co\", \"corp\", \"plc\"]","doc":null,"summary":null},{"id":"EOS","name":"EOS","value":"\"\\u0001\"","doc":null,"summary":null},{"id":"MISC","name":"MISC","value":"[\"vs\", \"etc\", \"no\", \"esp\", \"cf\"]","doc":null,"summary":null},{"id":"MONTHS","name":"MONTHS","value":"[\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\", \"sept\"]","doc":null,"summary":null},{"id":"PUNCTUATION_DETECT","name":"PUNCTUATION_DETECT","value":"/((?:[\\.?!]|[\\r\\n]+)(?:\\\"|\\'|\\)|\\]|\\})?)(\\s+)/","doc":"Finds punctuation that ends paragraphs.","summary":"<p>Finds punctuation that ends paragraphs.</p>"},{"id":"STREETS","name":"STREETS","value":"[\"ave\", \"bld\", \"blvd\", \"cl\", \"ct\", \"cres\", \"dr\", \"rd\", \"st\"]","doc":null,"summary":null},{"id":"TITLES","name":"TITLES","value":"[\"jr\", \"mr\", \"mrs\", \"ms\", \"dr\", \"prof\", \"sr\", \"sen\", \"rep\", \"rev\", \"gov\", \"atty\", \"supt\", \"det\", \"rev\", \"col\", \"gen\", \"lt\", \"cmdr\", \"adm\", \"capt\", \"sgt\", \"cpl\", \"maj\"]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Util","kind":"module","full_name":"Cadmium::Util","name":"Util"},"doc":null,"summary":null,"class_methods":[{"id":"abbreviation(*abbreviations)-class-method","html_id":"abbreviation(*abbreviations)-class-method","name":"abbreviation","doc":"Adds a list of abbreviations to the list that's used to detect false\nsentence ends. Return the current list of abbreviations in use.","summary":"<p>Adds a list of abbreviations to the list that's used to detect false sentence ends.</p>","abstract":false,"args":[{"name":"abbreviations","doc":null,"default_value":"","external_name":"abbreviations","restriction":""}],"args_string":"(*abbreviations)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/sentence.cr#L62","def":{"name":"abbreviation","args":[{"name":"abbreviations","doc":null,"default_value":"","external_name":"abbreviations","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@abbreviations = @@abbreviations + abbreviations\n@@abbreviations.uniq!\nset_abbr_regex!\n@@abbreviations\n"}},{"id":"sentences(text)-class-method","html_id":"sentences(text)-class-method","name":"sentences","doc":"Split the passed text into individual sentences, trim these and return\nas an array. A sentence is marked by one of the punctuation marks \".\", \"?\"\nor \"!\" followed by whitespace. Sequences of full stops (such as an\nellipsis marker \"...\" and stops after a known abbreviation are ignored.","summary":"<p>Split the passed text into individual sentences, trim these and return as an array.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"args_string":"(text)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/sentence.cr#L34","def":{"name":"sentences","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"text = text.dup\ntext = text.gsub(PUNCTUATION_DETECT) do\n  ($~[1] + EOS) + $~[2]\nend\ntext = text.gsub(/(\\.\\.\\.*)#{EOS}/) do\n  $~[1]\nend\ntext = text.gsub(CORRECT_ABBR, \"\\\\1\\\\2\")\ntext = text.gsub(@@abbr_regex) do\n  (\" \" + $~[1]) + \".\"\nend\n(text.split(EOS)).map do |sentence|\n  sentence.strip\nend.reject! do |sentence|\n  sentence.nil? || sentence.empty?\nend\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Util/StopWords","path":"Cadmium/Util/StopWords.html","kind":"module","full_name":"Cadmium::Util::StopWords","name":"StopWords","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/util/stop_words.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/stop_words.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics","kind":"class","full_name":"Cadmium::Phonetics","name":"Phonetics"},{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer/Stemmer","kind":"class","full_name":"Cadmium::Stemmer::Stemmer","name":"Stemmer"},{"html_id":"github.com/watzon/cadmium/Cadmium/TfIdf","kind":"class","full_name":"Cadmium::TfIdf","name":"TfIdf"}],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Util","kind":"module","full_name":"Cadmium::Util","name":"Util"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/Util/Syllable","path":"Cadmium/Util/Syllable.html","kind":"module","full_name":"Cadmium::Util::Syllable","name":"Syllable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/util/syllable.cr","line_number":6,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/syllable.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Util","kind":"module","full_name":"Cadmium::Util","name":"Util"},"doc":"The module `Cadmium::Util::Syllable` contains a single class method,\n+syllable+, which will use the most accurate technique available to\ndetermine the number syllables in a string containing a word passed to it.","summary":"<p>The module <code><a href=\"../../Cadmium/Util/Syllable.html\">Cadmium::Util::Syllable</a></code> contains a single class method, +syllable+, which will use the most accurate technique available to determine the number syllables in a string containing a word passed to it.</p>","class_methods":[{"id":"syllables(word)-class-method","html_id":"syllables(word)-class-method","name":"syllables","doc":null,"summary":null,"abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"args_string":"(word)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/syllable.cr#L7","def":{"name":"syllables","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Guess.syllables(word)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/Util/Syllable/Guess","path":"Cadmium/Util/Syllable/Guess.html","kind":"module","full_name":"Cadmium::Util::Syllable::Guess","name":"Guess","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/util/syllable.cr","line_number":44,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/syllable.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ADD_SYL","name":"ADD_SYL","value":"[/i[aiou]/, /[dls]ien/, /[aeiouym]ble$/, /[aeiou]{3}/, /^mc/, /ism$/, /(?:([^aeiouy])\\1|ck|mp|ng)le$/, /dnt$/, /[aeiou]y[aeiou]/]","doc":"special cases - 1 syllable more than expected","summary":"<p>special cases - 1 syllable more than expected</p>"},{"id":"NOT_USED","name":"NOT_USED","value":"[/^coa[dglx]./, /[^gq]ua[^auieo]/, /riet/]","doc":"special cases not actually used - these seem to me to be either very\nmarginal or actually break more stuff than they fix","summary":"<p>special cases not actually used - these seem to me to be either very marginal or actually break more stuff than they fix</p>"},{"id":"SUB_SYL","name":"SUB_SYL","value":"[/[^aeiou]e$/, /[aeiou](?:([cfghklmnprsvwz])\\1?|ck|sh|[rt]ch)e[ds]$/, /.e(?:ly|less(?:ly)?|ness?|ful(?:ly)?|ments?)$/, /ion/, /[ct]ia[nl]/, /[^cx]iou/, /sia$/, /.gue$/]","doc":"special cases - 1 syllable less than expected","summary":"<p>special cases - 1 syllable less than expected</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/Util/Syllable","kind":"module","full_name":"Cadmium::Util::Syllable","name":"Syllable"},"doc":"Uses English word patterns to guess the number of syllables. A single\nmodule method is made available, +syllables+, which, when passed an\nEnglish word, will return the number of syllables it estimates are in\nthe word.\n\nEnglish orthography (the representation of spoken sounds as written\nsigns) is not regular. The same spoken sound can be represented in\nmultiple different ways in written English (e.g. rough/cuff), and the\nsame written letters can be pronounced in different ways in different\nwords (e.g. rough/bough).\n\nAs the same series of letters can be pronounced in different ways, it is\nnot possible to write an algorithm which can always guess the number of\nsyllables in an english word correctly. However, it is possible to use\nfrequently recurring patterns in english (such as \"a final -e is usually\nsilent\") to guess with a level of accuracy that is acceptable for\napplications like syllable counting for readability scoring. This module\nimplements such an algorithm.\n\nThis module is inspired by the Perl Lingua::EN::Syllable module.\nHowever, it uses a different (though not larger) set of patterns to\ncompensate for the 'special cases' which arise out of English's\nirregular orthography. A number of extra patterns (particularly for\nderived word forms) means that this module is somewhat more accurate\nthan the Perl original. It also omits a number of patterns found in the\noriginal which seem to me to apply to such a small number of cases, or\nto be of dubious value. Testing the guesses against the Carnegie Mellon\nPronouncing Dictionary, this module guesses right around 90% of the\ntime, as against about 85% of the time for the Perl module. However, the\ndictionary contains a large number of foreign loan words and proper\nnames, and so when the algorithm is tested against 'real world' english,\nits accuracy is a good deal better. Testing against a range of samples,\nit guesses right about 95-97% of the time.","summary":"<p>Uses English word patterns to guess the number of syllables.</p>","class_methods":[{"id":"syllables(word)-class-method","html_id":"syllables(word)-class-method","name":"syllables","doc":null,"summary":null,"abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"args_string":"(word)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/util/syllable.cr#L85","def":{"name":"syllables","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if word.size == 1\n  return 1\nend\nword = word.downcase.delete(\"'\")\nsyllables = (word.scan(/[aeiouy]+/)).size\nSUB_SYL.each do |pat|\n  if pat.match(word)\n    syllables = syllables - 1\n  end\nend\nADD_SYL.each do |pat|\n  if pat.match(word)\n    syllables = syllables + 1\n  end\nend\nif syllables < 1\n  syllables = 1\nend\nsyllables\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"github.com/watzon/cadmium/Cadmium/WordNet","path":"Cadmium/WordNet.html","kind":"module","full_name":"Cadmium::WordNet","name":"WordNet","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cadmium/wordnet/pointer.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointer.cr"},{"filename":"cadmium/wordnet/db.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/db.cr"},{"filename":"cadmium/wordnet/lemma.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr"},{"filename":"cadmium/wordnet/pointers.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointers.cr"},{"filename":"cadmium/wordnet/synset.cr","line_number":2,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr"},{"filename":"cadmium/wordnet.cr","line_number":8,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ADJECTIVE_POINTERS","name":"ADJECTIVE_POINTERS","value":"{\";r\" => \"Domain of synset - REGION\", \"!\" => \"Antonym\", \"\\\\\" => \"Pertainym (pertains to noun)\", \"<\" => \"Participle of verb\", \"&\" => \"Similar to\", \"=\" => \"Attribute\", \";c\" => \"Domain of synset - TOPIC\"}","doc":null,"summary":null},{"id":"ADVERB_POINTERS","name":"ADVERB_POINTERS","value":"{\";r\" => \"Domain of synset - REGION\", \"!\" => \"Antonym\", \";u\" => \"Domain of synset - USAGE\", \"\\\\\" => \"Derived from adjective\", \";c\" => \"Domain of synset - TOPIC\"}","doc":null,"summary":null},{"id":"ALSO_SEE","name":"ALSO_SEE","value":"\"^\"","doc":null,"summary":null},{"id":"ANTONYM","name":"ANTONYM","value":"\"!\"","doc":null,"summary":null},{"id":"ATTRIBUTE","name":"ATTRIBUTE","value":"\"=\"","doc":null,"summary":null},{"id":"CAUSE","name":"CAUSE","value":"\">\"","doc":null,"summary":null},{"id":"DERIVATIONALLY_RELATED_FORM","name":"DERIVATIONALLY_RELATED_FORM","value":"\"+\"","doc":null,"summary":null},{"id":"DERIVED_FROM_ADJECTIVE","name":"DERIVED_FROM_ADJECTIVE","value":"\"\\\\\"","doc":null,"summary":null},{"id":"DOMAIN_OF_SYNSET_REGION","name":"DOMAIN_OF_SYNSET_REGION","value":"\";r\"","doc":null,"summary":null},{"id":"DOMAIN_OF_SYNSET_TOPIC","name":"DOMAIN_OF_SYNSET_TOPIC","value":"\";c\"","doc":null,"summary":null},{"id":"DOMAIN_OF_SYNSET_USAGE","name":"DOMAIN_OF_SYNSET_USAGE","value":"\";u\"","doc":null,"summary":null},{"id":"ENTAILMENT","name":"ENTAILMENT","value":"\"*\"","doc":null,"summary":null},{"id":"HYPERNYM","name":"HYPERNYM","value":"\"@\"","doc":null,"summary":null},{"id":"HYPONYM","name":"HYPONYM","value":"\"~\"","doc":null,"summary":null},{"id":"INSTANCE_HYPERNYM","name":"INSTANCE_HYPERNYM","value":"\"@i\"","doc":null,"summary":null},{"id":"INSTANCE_HYPONYM","name":"INSTANCE_HYPONYM","value":"\"~i\"","doc":null,"summary":null},{"id":"MEMBER_HOLONYM","name":"MEMBER_HOLONYM","value":"\"#m\"","doc":null,"summary":null},{"id":"MEMBER_MERONYM","name":"MEMBER_MERONYM","value":"\"%m\"","doc":null,"summary":null},{"id":"MEMBER_OF_THIS_DOMAIN_REGION","name":"MEMBER_OF_THIS_DOMAIN_REGION","value":"\"-r\"","doc":null,"summary":null},{"id":"MEMBER_OF_THIS_DOMAIN_TOPIC","name":"MEMBER_OF_THIS_DOMAIN_TOPIC","value":"\"-c\"","doc":null,"summary":null},{"id":"MEMBER_OF_THIS_DOMAIN_USAGE","name":"MEMBER_OF_THIS_DOMAIN_USAGE","value":"\"-u\"","doc":null,"summary":null},{"id":"MORPHOLOGICAL_SUBSTITUTIONS","name":"MORPHOLOGICAL_SUBSTITUTIONS","value":"{\"noun\" => [[\"s\", \"\"], [\"ses\", \"s\"], [\"ves\", \"f\"], [\"xes\", \"x\"], [\"zes\", \"z\"], [\"ches\", \"ch\"], [\"shes\", \"sh\"], [\"men\", \"man\"], [\"ies\", \"y\"]], \"verb\" => [[\"s\", \"\"], [\"ies\", \"y\"], [\"es\", \"e\"], [\"es\", \"\"], [\"ed\", \"e\"], [\"ed\", \"\"], [\"ing\", \"e\"], [\"ing\", \"\"]], \"adj\" => [[\"er\", \"\"], [\"est\", \"\"], [\"er\", \"e\"], [\"est\", \"e\"]], \"adv\" => [] of Array(String)}","doc":null,"summary":null},{"id":"NOUN_POINTERS","name":"NOUN_POINTERS","value":"{\"-c\" => \"Member of this domain - TOPIC\", \"+\" => \"Derivationally related form\", \"%p\" => \"Part meronym\", \"~i\" => \"Instance Hyponym\", \"@\" => \"Hypernym\", \";r\" => \"Domain of synset - REGION\", \"!\" => \"Antonym\", \"#p\" => \"Part holonym\", \"%s\" => \"Substance meronym\", \";u\" => \"Domain of synset - USAGE\", \"-r\" => \"Member of this domain - REGION\", \"#s\" => \"Substance holonym\", \"=\" => \"Attribute\", \"-u\" => \"Member of this domain - USAGE\", \";c\" => \"Domain of synset - TOPIC\", \"%m\" => \"Member meronym\", \"~\" => \"Hyponym\", \"@i\" => \"Instance Hypernym\", \"#m\" => \"Member holonym\"}","doc":null,"summary":null},{"id":"PART_HOLONYM","name":"PART_HOLONYM","value":"\"#p\"","doc":null,"summary":null},{"id":"PART_MERONYM","name":"PART_MERONYM","value":"\"%p\"","doc":null,"summary":null},{"id":"PARTICIPLE_OF_VERB","name":"PARTICIPLE_OF_VERB","value":"\"<\"","doc":null,"summary":null},{"id":"SIMILAR_TO","name":"SIMILAR_TO","value":"\"&\"","doc":null,"summary":null},{"id":"SUBSTANCE_HOLONYM","name":"SUBSTANCE_HOLONYM","value":"\"#s\"","doc":null,"summary":null},{"id":"SUBSTANCE_MERONYM","name":"SUBSTANCE_MERONYM","value":"\"%s\"","doc":null,"summary":null},{"id":"SYNSET_TYPES","name":"SYNSET_TYPES","value":"{\"n\" => \"noun\", \"v\" => \"verb\", \"a\" => \"adj\", \"r\" => \"adv\"}","doc":null,"summary":null},{"id":"VERB_GROUP","name":"VERB_GROUP","value":"\"$\"","doc":null,"summary":null},{"id":"VERB_POINTERS","name":"VERB_POINTERS","value":"{\"+\" => \"Derivationally related form\", \"@\" => \"Hypernym\", \";r\" => \"Domain of synset - REGION\", \"!\" => \"Antonym\", \";u\" => \"Domain of synset - USAGE\", \"$\" => \"Verb Group\", \";c\" => \"Domain of synset - TOPIC\", \">\" => \"Cause\", \"~\" => \"Hyponym\", \"*\" => \"Entailment\"}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium","kind":"module","full_name":"Cadmium","name":"Cadmium"},"doc":null,"summary":null,"class_methods":[{"id":"get(offset:Int32,pos:Symbol|String)-class-method","html_id":"get(offset:Int32,pos:Symbol|String)-class-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Int32"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Symbol | String"}],"args_string":"(offset : Int32, pos : Symbol | String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet.cr#L19","def":{"name":"get","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Int32"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Synset.new(pos, offset)"}},{"id":"lookup(word:String,pos:Symbol|String)-class-method","html_id":"lookup(word:String,pos:Symbol|String)-class-method","name":"lookup","doc":null,"summary":null,"abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":"String"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Symbol | String"}],"args_string":"(word : String, pos : Symbol | String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet.cr#L9","def":{"name":"lookup","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":"String"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"lemma = Lemma.find(word, pos)\nreturn lemma ? lemma.synsets : [] of Synset\n"}},{"id":"lookup(word:String)-class-method","html_id":"lookup(word:String)-class-method","name":"lookup","doc":null,"summary":null,"abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":"String"}],"args_string":"(word : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet.cr#L14","def":{"name":"lookup","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"lemmas = Lemma.find_all(word)\nreturn lemmas.map do |lemma|\n  lemma.synsets.flatten\nend.flatten\n"}},{"id":"morphy(form,pos)-class-method","html_id":"morphy(form,pos)-class-method","name":"morphy","doc":null,"summary":null,"abstract":false,"args":[{"name":"form","doc":null,"default_value":"","external_name":"form","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"args_string":"(form, pos)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet.cr#L27","def":{"name":"morphy","args":[{"name":"form","doc":null,"default_value":"","external_name":"form","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Synset.morphy(form, pos)"}},{"id":"morphy(form)-class-method","html_id":"morphy(form)-class-method","name":"morphy","doc":null,"summary":null,"abstract":false,"args":[{"name":"form","doc":null,"default_value":"","external_name":"form","restriction":""}],"args_string":"(form)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet.cr#L23","def":{"name":"morphy","args":[{"name":"form","doc":null,"default_value":"","external_name":"form","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Synset.morphy(form)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/watzon/cadmium/Cadmium/WordNet/DB","path":"Cadmium/WordNet/DB.html","kind":"class","full_name":"Cadmium::WordNet::DB","name":"DB","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/wordnet/db.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/db.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/WordNet","kind":"module","full_name":"Cadmium::WordNet","name":"WordNet"},"doc":"Represents the WordNet database, and provides some basic interaction.","summary":"<p>Represents the WordNet database, and provides some basic interaction.</p>","class_methods":[{"id":"open(path,&block)-class-method","html_id":"open(path,&amp;block)-class-method","name":"open","doc":"Open a wordnet database. You shouldn't have to call this directly; it's\nhandled by the autocaching implemented in lemma.rb.\n\n`path` should be a string containing the absolute path to the root of a\nWordNet installation.","summary":"<p>Open a wordnet database.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &block)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/db.cr#L19","def":{"name":"open","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(File.join(@@path, path), \"r\") do |f|\n  yield f\nend"}},{"id":"open(path)-class-method","html_id":"open(path)-class-method","name":"open","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/db.cr#L25","def":{"name":"open","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.open(File.join(@@path, path), \"r\")"}},{"id":"path:String-class-method","html_id":"path:String-class-method","name":"path","doc":"To use your own WordNet installation (rather than the one bundled with rwordnet:\nReturns the path to the WordNet installation currently in use. Defaults to the bundled version of WordNet.","summary":"<p>To use your own WordNet installation (rather than the one bundled with rwordnet: Returns the path to the WordNet installation currently in use.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/db.cr#L14","def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@path"}},{"id":"path=(path:String)-class-method","html_id":"path=(path:String)-class-method","name":"path=","doc":"To use your own WordNet installation (rather than the one bundled with rwordnet:\nReturns the path to the WordNet installation currently in use. Defaults to the bundled version of WordNet.","summary":"<p>To use your own WordNet installation (rather than the one bundled with rwordnet: Returns the path to the WordNet installation currently in use.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/db.cr#L18","def":{"name":"path=","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@path = path"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/WordNet/Lemma","path":"Cadmium/WordNet/Lemma.html","kind":"class","full_name":"Cadmium::WordNet::Lemma","name":"Lemma","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/wordnet/lemma.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"POS_SHORTHAND","name":"POS_SHORTHAND","value":"{:v => :verb, :n => :noun, :a => :adj, :r => :adv}","doc":null,"summary":null},{"id":"SPACE","name":"SPACE","value":"\" \"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/WordNet","kind":"module","full_name":"Cadmium::WordNet","name":"WordNet"},"doc":null,"summary":null,"class_methods":[{"id":"find(word,pos)-class-method","html_id":"find(word,pos)-class-method","name":"find","doc":"Find a lemma for a given word and pos. Valid parts of speech are:\n\"adj\", \"adv\", \"noun\", \"verb\". Additionally, you can use the shorthand\nforms of each of these (\"a\", \"r\", \"n\", \"v\")/","summary":"<p>Find a lemma for a given word and pos.</p>","abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"args_string":"(word, pos)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr#L70","def":{"name":"find","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos = POS_SHORTHAND.has_key?(pos) ? POS_SHORTHAND[pos] : pos\npos = pos.to_s\ncache = (__temp_32 = pos\n@@cache[__temp_32]? || (@@cache[__temp_32] = build_cache(pos))\n)\nif cache.has_key?(word)\n  found = cache[word]\n  Lemma.new(*found)\nend\n"}},{"id":"find_all(word:String)-class-method","html_id":"find_all(word:String)-class-method","name":"find_all","doc":"Find all lemmas for this word across all known parts of speech","summary":"<p>Find all lemmas for this word across all known parts of speech</p>","abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":"String"}],"args_string":"(word : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr#L61","def":{"name":"find_all","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[:noun, :verb, :adj, :adv].flat_map do |pos|\n  (find(word, pos)) || ([] of Lemma)\nend"}}],"constructors":[{"id":"new(lexicon_line:String,id:Int32)-class-method","html_id":"new(lexicon_line:String,id:Int32)-class-method","name":"new","doc":"Create a lemma from a line in an lexicon file. You should not be creating Lemmas by hand; instead,\nuse the WordNet::Lemma.find and WordNet::Lemma.find_all methods to find the Lemma for a word.","summary":"<p>Create a lemma from a line in an lexicon file.</p>","abstract":false,"args":[{"name":"lexicon_line","doc":null,"default_value":"","external_name":"lexicon_line","restriction":"String"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int32"}],"args_string":"(lexicon_line : String, id : Int32)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr#L33","def":{"name":"new","args":[{"name":"lexicon_line","doc":null,"default_value":"","external_name":"lexicon_line","restriction":"String"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(lexicon_line, id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:Int32-instance-method","html_id":"id:Int32-instance-method","name":"id","doc":"A unique integer id that references this lemma. Used internally within WordNet's database.","summary":"<p>A unique integer id that references this lemma.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr#L25","def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@id"}},{"id":"pointer_symbols:Array(String)-instance-method","html_id":"pointer_symbols:Array(String)-instance-method","name":"pointer_symbols","doc":"An array of valid pointer symbols for this lemma. The list of all valid\npointer symbols is defined in pointers.cr.","summary":"<p>An array of valid pointer symbols for this lemma.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr#L29","def":{"name":"pointer_symbols","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@pointer_symbols"}},{"id":"pos:String-instance-method","html_id":"pos:String-instance-method","name":"pos","doc":"The part of speech (noun, verb, adjective) of this lemma.\nOne of \"n\", \"v\", \"a\" (adjective), or \"r\" (adverb)","summary":"<p>The part of speech (noun, verb, adjective) of this lemma.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr#L14","def":{"name":"pos","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@pos"}},{"id":"synset_offsets:Array(Int32)-instance-method","html_id":"synset_offsets:Array(Int32)-instance-method","name":"synset_offsets","doc":"The offset, in bytes, at which the synsets contained in this lemma are stored\nin WordNet's internal database.","summary":"<p>The offset, in bytes, at which the synsets contained in this lemma are stored in WordNet's internal database.</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr#L22","def":{"name":"synset_offsets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@synset_offsets"}},{"id":"synsets-instance-method","html_id":"synsets-instance-method","name":"synsets","doc":"Return a list of synsets for this Lemma. Each synset represents a different sense, or meaning, of the word.","summary":"<p>Return a list of synsets for this Lemma.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr#L50","def":{"name":"synsets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@synset_offsets.reduce([] of Synset) do |acc, i|\n  acc << (Synset.new(@pos, i))\nend"}},{"id":"tagsense_count:Int32-instance-method","html_id":"tagsense_count:Int32-instance-method","name":"tagsense_count","doc":"The number of times the sense is tagged in various semantic concordance texts.\nA tagsense_count of 0 indicates that the sense has not been semantically tagged.","summary":"<p>The number of times the sense is tagged in various semantic concordance texts.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr#L18","def":{"name":"tagsense_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@tagsense_count"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a compact string representation of this lemma, e.g. \"fall, v\" for\nthe verb form of the word \"fall\".","summary":"<p>Returns a compact string representation of this lemma, e.g.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr#L56","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[@word, @pos].join(\",\")"}},{"id":"word:String-instance-method","html_id":"word:String-instance-method","name":"word","doc":"The word this lemma represents","summary":"<p>The word this lemma represents</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/lemma.cr#L10","def":{"name":"word","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@word"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/WordNet/Pointer","path":"Cadmium/WordNet/Pointer.html","kind":"class","full_name":"Cadmium::WordNet::Pointer","name":"Pointer","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/wordnet/pointer.cr","line_number":4,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointer.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/WordNet","kind":"module","full_name":"Cadmium::WordNet","name":"WordNet"},"doc":"Pointers represent the relations between the words in one synset and another.","summary":"<p>Pointers represent the relations between the words in one synset and another.</p>","class_methods":[],"constructors":[{"id":"new(symbol:String,offset:Int32,pos:String,source:String)-class-method","html_id":"new(symbol:String,offset:Int32,pos:String,source:String)-class-method","name":"new","doc":"Create a pointer. Pointers represent the relations between the words in one synset and another,\nand are referenced by a shorthand symbol (e.g. '!' for verb antonym). The list\nof valid pointer symbols is defined in pointers.rb","summary":"<p>Create a pointer.</p>","abstract":false,"args":[{"name":"symbol","doc":null,"default_value":"","external_name":"symbol","restriction":"String"},{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Int32"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"String"},{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"}],"args_string":"(symbol : String, offset : Int32, pos : String, source : String)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointer.cr#L24","def":{"name":"new","args":[{"name":"symbol","doc":null,"default_value":"","external_name":"symbol","restriction":"String"},{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Int32"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"String"},{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(symbol, offset, pos, source)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"is_semantic?-instance-method","html_id":"is_semantic?-instance-method","name":"is_semantic?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointer.cr#L28","def":{"name":"is_semantic?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@source == \"00\") && (@target == \"00\")"}},{"id":"offset:Int32-instance-method","html_id":"offset:Int32-instance-method","name":"offset","doc":"The offset, in bytes, of this pointer in WordNet's internal database.","summary":"<p>The offset, in bytes, of this pointer in WordNet's internal database.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointer.cr#L12","def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@offset"}},{"id":"pos:String-instance-method","html_id":"pos:String-instance-method","name":"pos","doc":"The part of speech this pointer represents. One of 'n', 'v', 'a' (adjective), or 'r' (adverb).","summary":"<p>The part of speech this pointer represents.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointer.cr#L15","def":{"name":"pos","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@pos"}},{"id":"source:String-instance-method","html_id":"source:String-instance-method","name":"source","doc":"The synset from which this pointer...points.","summary":"<p>The synset from which this pointer...points.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointer.cr#L18","def":{"name":"source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@source"}},{"id":"symbol:String-instance-method","html_id":"symbol:String-instance-method","name":"symbol","doc":"The symbol that devices the relationship this pointer represents, e.g. \"!\" for verb antonym. Valid\npointer symbols are defined in pointers.cr","summary":"<p>The symbol that devices the relationship this pointer represents, e.g.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointer.cr#L9","def":{"name":"symbol","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@symbol"}},{"id":"target:String-instance-method","html_id":"target:String-instance-method","name":"target","doc":"The synset to which this pointer...points.","summary":"<p>The synset to which this pointer...points.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/pointer.cr#L21","def":{"name":"target","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@target"}}],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/Cadmium/WordNet/Synset","path":"Cadmium/WordNet/Synset.html","kind":"class","full_name":"Cadmium::WordNet::Synset","name":"Synset","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/wordnet/synset.cr","line_number":16,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/watzon/cadmium/Cadmium/WordNet","kind":"module","full_name":"Cadmium::WordNet","name":"WordNet"},"doc":"Represents a synset (or group of synonymous words) in WordNet. Synsets are related to each other by various (and numerous!)\nrelationships, including Hypernym (x is a hypernym of y <=> x is a parent of y) and Hyponym (x is a child of y)","summary":"<p>Represents a synset (or group of synonymous words) in WordNet.</p>","class_methods":[{"id":"_apply_rules(forms,pos)-class-method","html_id":"_apply_rules(forms,pos)-class-method","name":"_apply_rules","doc":null,"summary":null,"abstract":false,"args":[{"name":"forms","doc":null,"default_value":"","external_name":"forms","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"args_string":"(forms, pos)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L113","def":{"name":"_apply_rules","args":[{"name":"forms","doc":null,"default_value":"","external_name":"forms","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"substitutions = MORPHOLOGICAL_SUBSTITUTIONS[pos]\nres = [] of String\nforms.each do |form|\n  substitutions.each do |a|\n    if form.ends_with?(a[0])\n      res.push(form[0...(-a[0].size)] + a[1])\n    end\n  end\nend\nreturn res\n"}},{"id":"_filter_forms(forms,pos)-class-method","html_id":"_filter_forms(forms,pos)-class-method","name":"_filter_forms","doc":null,"summary":null,"abstract":false,"args":[{"name":"forms","doc":null,"default_value":"","external_name":"forms","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"args_string":"(forms, pos)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L126","def":{"name":"_filter_forms","args":[{"name":"forms","doc":null,"default_value":"","external_name":"forms","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"forms.reject do |form|\n  Lemma.find(form, pos).nil?\nend.uniq"}},{"id":"find(word,pos)-class-method","html_id":"find(word,pos)-class-method","name":"find","doc":"Ported from python NLTK\nLoad all synsets with a given lemma and part of speech tag.\nIf no pos is specified, all synsets for all parts of speech\nwill be loaded.\nIf lang is specified, all the synsets associated with the lemma name\nof that language will be returned.","summary":"<p>Ported from python NLTK Load all synsets with a given lemma and part of speech tag.</p>","abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"args_string":"(word, pos)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L93","def":{"name":"find","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"word = word.downcase\nlemmas = (self.morphy(word, pos)).map do |form|\n  WordNet::Lemma.find(form, pos)\nend\nlemmas.map do |lemma|\n  lemma.synsets\nend.flatten\n"}},{"id":"find_all(word)-class-method","html_id":"find_all(word)-class-method","name":"find_all","doc":null,"summary":null,"abstract":false,"args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"args_string":"(word)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L99","def":{"name":"find_all","args":[{"name":"word","doc":null,"default_value":"","external_name":"word","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SYNSET_TYPES.values.map do |pos|\n  self.find(word, pos)\nend.flatten"}},{"id":"load_exception_map-class-method","html_id":"load_exception_map-class-method","name":"load_exception_map","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L103","def":{"name":"load_exception_map","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SYNSET_TYPES.each do |_, pos|\n  @@exception_map[pos] = {} of String => Array(String)\n  (File.open(File.join(@@morphy_path, \"exceptions\", \"#{pos}.exc\"), \"r\")).each_line do |line|\n    line = line.split\n    @@exception_map[pos][line[0]] = line[1..-1]\n  end\nend"}},{"id":"morphy(form,pos)-class-method","html_id":"morphy(form,pos)-class-method","name":"morphy","doc":"ported from nltk python\nfrom jordanbg:\nGiven an original string x\n1. Apply rules once to the input to get y1, y2, y3, etc.\n2. Return all that are in the database\n3. If there are no matches, keep applying rules until you either\n   find a match or you can't go any further","summary":"<p>ported from nltk python from jordanbg: Given an original string x 1.</p>","abstract":false,"args":[{"name":"form","doc":null,"default_value":"","external_name":"form","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"args_string":"(form, pos)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L137","def":{"name":"morphy","args":[{"name":"form","doc":null,"default_value":"","external_name":"form","restriction":""},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos = pos.to_s\nif SYNSET_TYPES.has_key?(pos)\n  pos = SYNSET_TYPES[pos]\nend\nif @@exception_map.empty?\n  self.load_exception_map\nend\nexceptions = @@exception_map[pos]\nif exceptions.has_key?(form)\n  return self._filter_forms([form] + exceptions[form], pos)\nend\nforms = self._apply_rules([form], pos)\nresults = self._filter_forms([form] + forms, pos)\nif !results.empty?\n  return results\nend\nwhile forms.size > 0\n  forms = self._apply_rules(forms, pos)\n  results = self._filter_forms(forms, pos)\n  if !results.empty?\n    return results\n  end\nend\nreturn [] of String\n"}},{"id":"morphy(form)-class-method","html_id":"morphy(form)-class-method","name":"morphy","doc":null,"summary":null,"abstract":false,"args":[{"name":"form","doc":null,"default_value":"","external_name":"form","restriction":""}],"args_string":"(form)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L174","def":{"name":"morphy","args":[{"name":"form","doc":null,"default_value":"","external_name":"form","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SYNSET_TYPES.values.map do |pos|\n  self.morphy(form, pos)\nend.flatten.uniq"}}],"constructors":[{"id":"new(pos,offset)-class-method","html_id":"new(pos,offset)-class-method","name":"new","doc":"Create a new synset by reading from the data file specified by +pos+, at +offset+ bytes into the file. This is how\nthe WordNet database is organized. You shouldn't be creating Synsets directly; instead, use Lemma#synsets.","summary":"<p>Create a new synset by reading from the data file specified by +pos+, at +offset+ bytes into the file.</p>","abstract":false,"args":[{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""},{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"args_string":"(pos, offset)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L54","def":{"name":"new","args":[{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":""},{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pos, offset)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"antonyms-instance-method","html_id":"antonyms-instance-method","name":"antonyms","doc":"Get the Synsets of this sense's antonym","summary":"<p>Get the Synsets of this sense's antonym</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L200","def":{"name":"antonyms","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"relation(ANTONYM)"}},{"id":"expanded_first_hypernyms-instance-method","html_id":"expanded_first_hypernyms-instance-method","name":"expanded_first_hypernyms","doc":"Get the entire hypernym tree (from this synset all the way up to +entity+) as an array.","summary":"<p>Get the entire hypernym tree (from this synset all the way up to +entity+) as an array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L226","def":{"name":"expanded_first_hypernyms","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parent = hypernym\nlist = [] of Int32\nif parent\nelse\n  return list\nend\nwhile parent\n  if list.include?(parent.pos_offset)\n    break\n  end\n  list.push(parent.pos_offset)\n  parent = parent.hypernym\nend\nlist.flatten!\nlist.map! do |offset|\n  Synset.new(@pos, offset)\nend\n"}},{"id":"expanded_hypernyms-instance-method","html_id":"expanded_hypernyms-instance-method","name":"expanded_hypernyms","doc":"Get the entire hypernym tree (from this synset all the way up to +entity+) as an array.","summary":"<p>Get the entire hypernym tree (from this synset all the way up to +entity+) as an array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L242","def":{"name":"expanded_hypernyms","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parents = hypernyms\nlist = [] of Int32\nif parents\nelse\n  return list\nend\nwhile parents.size > 0\n  parent = parents.pop\n  if list.include?(parent.pos_offset)\n    next\n  end\n  list.push(parent.pos_offset)\n  parents.push(*parent.hypernyms)\nend\nlist.flatten!\nlist.map! do |offset|\n  Synset.new(@pos, offset)\nend\n"}},{"id":"expanded_hypernyms_depth-instance-method","html_id":"expanded_hypernyms_depth-instance-method","name":"expanded_hypernyms_depth","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L258","def":{"name":"expanded_hypernyms_depth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parents = hypernyms.map do |hypernym|\n  [hypernym, 1]\nend\nlist = [] of Int32\nout = [] of Synset\nif parents\nelse\n  return list\nend\nmax_depth = 1\nwhile parents.size > 0\n  parent, depth = parents.pop\n  if list.include?(parent.pos_offset)\n    next\n  end\n  list.push(parent.pos_offset)\n  out.push([Synset.new(@pos, parent.pos_offset), depth])\n  parents.push(*(  parent.hypernyms.map do |hypernym|\n    [hypernym, depth + 1]\n  end))\n  max_depth = [max_depth, depth].max\nend\nreturn [out, max_depth]\n"}},{"id":"gloss:String-instance-method","html_id":"gloss:String-instance-method","name":"gloss","doc":"Get a string representation of this synset's gloss. \"Gloss\" is a human-readable\ndescription of this concept, often with example usage, e.g:\n\n   move upward; \"The fog lifted\"; \"The smoke arose from the forest fire\"; \"The mist uprose from the meadows\"\n\nfor the second sense of the verb \"fall\"","summary":"<p>Get a string representation of this synset's gloss.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L52","def":{"name":"gloss","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@gloss"}},{"id":"hypernym-instance-method","html_id":"hypernym-instance-method","name":"hypernym","doc":"Get the parent synset (higher-level category, i.e. fruit -> reproductive_structure).","summary":"<p>Get the parent synset (higher-level category, i.e.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L205","def":{"name":"hypernym","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(relation(HYPERNYM))[0]"}},{"id":"hypernyms-instance-method","html_id":"hypernyms-instance-method","name":"hypernyms","doc":"Get the parent synset (higher-level category, i.e. fruit -> reproductive_structure)\nas an array.","summary":"<p>Get the parent synset (higher-level category, i.e.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L211","def":{"name":"hypernyms","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"relation(HYPERNYM)"}},{"id":"hyponyms-instance-method","html_id":"hyponyms-instance-method","name":"hyponyms","doc":"Get the child synset(s) (i.e., lower-level categories, i.e. fruit -> edible_fruit)","summary":"<p>Get the child synset(s) (i.e., lower-level categories, i.e.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L216","def":{"name":"hyponyms","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"relation(HYPONYM)"}},{"id":"lex_filenum:Int32-instance-method","html_id":"lex_filenum:Int32-instance-method","name":"lex_filenum","doc":"A two digit decimal integer representing the name of the lexicographer file containing the synset for the sense.\nProbably only of interest if you're using a wordnet database marked up with custom attributes, and you\nwant to ensure that you're using your own additions.","summary":"<p>A two digit decimal integer representing the name of the lexicographer file containing the synset for the sense.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L30","def":{"name":"lex_filenum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@lex_filenum"}},{"id":"pos:String-instance-method","html_id":"pos:String-instance-method","name":"pos","doc":"Get a shorthand representation of the part of speech this synset represents, e.g. \"v\" for verbs.","summary":"<p>Get a shorthand representation of the part of speech this synset represents, e.g.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L44","def":{"name":"pos","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@pos"}},{"id":"pos_offset:Int32-instance-method","html_id":"pos_offset:Int32-instance-method","name":"pos_offset","doc":"Get the offset, in bytes, at which this synset's POS information is stored in WordNet's internal DB.\nYou almost certainly don't care about this.","summary":"<p>Get the offset, in bytes, at which this synset's POS information is stored in WordNet's internal DB.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L41","def":{"name":"pos_offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@pos_offset"}},{"id":"relation(pointer_symbol)-instance-method","html_id":"relation(pointer_symbol)-instance-method","name":"relation","doc":"Get an array of Synsets with the relation `pointer_symbol` relative to this\nSynset. Mostly, this is an internal method used by convience methods (e.g. Synset#antonym), but\nit can take any valid valid +pointer_symbol+ defined in pointers.rb.\n\nExample (get the gloss of an antonym for 'fall'):\n    WordNet::Lemma.find(\"fall\", :verb).synsets[1].relation(\"!\")[0].gloss","summary":"<p>Get an array of Synsets with the relation <code>pointer_symbol</code> relative to this Synset.</p>","abstract":false,"args":[{"name":"pointer_symbol","doc":null,"default_value":"","external_name":"pointer_symbol","restriction":""}],"args_string":"(pointer_symbol)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L194","def":{"name":"relation","args":[{"name":"pointer_symbol","doc":null,"default_value":"","external_name":"pointer_symbol","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pointers.select do |pointer|\n  pointer.symbol == pointer_symbol\nend.map do |pointer|\n  Synset.new(@synset_type, pointer.offset)\nend"}},{"id":"synonyms-instance-method","html_id":"synonyms-instance-method","name":"synonyms","doc":"Get the synonyms (hypernyms and hyponyms) for this Synset","summary":"<p>Get the synonyms (hypernyms and hyponyms) for this Synset</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L221","def":{"name":"synonyms","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hypernyms + hyponyms"}},{"id":"synset_offset:String-instance-method","html_id":"synset_offset:String-instance-method","name":"synset_offset","doc":"Get the offset, in bytes, at which this synset's information is stored in WordNet's internal DB.\nYou almost certainly don't care about this.","summary":"<p>Get the offset, in bytes, at which this synset's information is stored in WordNet's internal DB.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L25","def":{"name":"synset_offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@synset_offset"}},{"id":"synset_type:String-instance-method","html_id":"synset_type:String-instance-method","name":"synset_type","doc":"Get the part of speech type of this synset. One of 'n' (noun), 'v' (verb), 'a' (adjective), or 'r' (adverb)","summary":"<p>Get the part of speech type of this synset.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L37","def":{"name":"synset_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@synset_type"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a compact, human-readable form of this synset, e.g.\n\n   (v) fall (descend in free fall under the influence of gravity; \"The branch fell from the tree\"; \"The unfortunate hiker fell into a crevasse\")\n\nfor the second meaning of the verb \"fall.\"","summary":"<p>Returns a compact, human-readable form of this synset, e.g.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L281","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"(#{@synset_type}) #{words.map do |x|\n  x.tr(\"_\", \" \")\nend.join(\", \")} (#{@gloss})\""}},{"id":"word_count-instance-method","html_id":"word_count-instance-method","name":"word_count","doc":"How many words does this Synset include?","summary":"<p>How many words does this Synset include?</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L179","def":{"name":"word_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@word_counts.size"}},{"id":"word_counts:Hash(String,Int32)-instance-method","html_id":"word_counts:Hash(String,Int32)-instance-method","name":"word_counts","doc":"Get the list of words (and their frequencies within the WordNet graph) contained\nin this Synset.","summary":"<p>Get the list of words (and their frequencies within the WordNet graph) contained in this Synset.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Int32)","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L34","def":{"name":"word_counts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Int32)","visibility":"Public","body":"@word_counts"}},{"id":"words-instance-method","html_id":"words-instance-method","name":"words","doc":"Get a list of words included in this Synset","summary":"<p>Get a list of words included in this Synset</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/wordnet/synset.cr#L184","def":{"name":"words","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@word_counts.keys"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/watzon/cadmium/Int","path":"Int.html","kind":"struct","full_name":"Int","name":"Int","abstract":true,"superclass":{"html_id":"github.com/watzon/cadmium/Number","kind":"struct","full_name":"Number","name":"Number"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/IntExtension","kind":"module","full_name":"Cadmium::Inflector::IntExtension","name":"IntExtension"},{"html_id":"github.com/watzon/cadmium/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/watzon/cadmium/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/watzon/cadmium/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/core_ext/int.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/core_ext/int.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/IntExtension","kind":"module","full_name":"Cadmium::Inflector::IntExtension","name":"IntExtension"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Int is the base type of all integer types.\n\nThere are four signed integer types: `Int8`, `Int16`, `Int32` and `Int64`,\nbeing able to represent numbers of 8, 16, 32 and 64 bits respectively.\nThere are four unsigned integer types: `UInt8`, `UInt16`, `UInt32` and `UInt64`.\n\nAn integer literal is an optional `+` or `-` sign, followed by\na sequence of digits and underscores, optionally followed by a suffix.\nIf no suffix is present, the literal's type is the lowest between `Int32`, `Int64` and `UInt64`\nin which the number fits:\n\n```\n1 # Int32\n\n1_i8  # Int8\n1_i16 # Int16\n1_i32 # Int32\n1_i64 # Int64\n\n1_u8  # UInt8\n1_u16 # UInt16\n1_u32 # UInt32\n1_u64 # UInt64\n\n+10 # Int32\n-20 # Int32\n\n2147483648          # Int64\n9223372036854775808 # UInt64\n```\n\nThe underscore `_` before the suffix is optional.\n\nUnderscores can be used to make some numbers more readable:\n\n```\n1_000_000 # better than 1000000\n```\n\nBinary numbers start with `0b`:\n\n```\n0b1101 # == 13\n```\n\nOctal numbers start with `0o`:\n\n```\n0o123 # == 83\n```\n\nHexadecimal numbers start with `0x`:\n\n```\n0xFE012D # == 16646445\n0xfe012d # == 16646445\n```","summary":"<p>Int is the base type of all integer types.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/watzon/cadmium/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/watzon/cadmium/Cadmium/Sentiment/StringExtension","kind":"module","full_name":"Cadmium::Sentiment::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics/StringExtension","kind":"module","full_name":"Cadmium::Phonetics::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Cadmium/Transliterator/StringExtension","kind":"module","full_name":"Cadmium::Transliterator::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/StringExtension","kind":"module","full_name":"Cadmium::Inflector::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer/StringExtension","kind":"module","full_name":"Cadmium::Stemmer::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/StringExtension","kind":"module","full_name":"Cadmium::Tokenizer::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/watzon/cadmium/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/watzon/cadmium/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cadmium/core_ext/string.cr","line_number":3,"url":"https://github.com/watzon/cadmium/blob/6c58fb89858c7cf2b420ac97020c38f855312cc6/src/cadmium/core_ext/string.cr"}],"repository_name":"github.com/watzon/cadmium","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/watzon/cadmium/Cadmium/Inflector/StringExtension","kind":"module","full_name":"Cadmium::Inflector::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Cadmium/Phonetics/StringExtension","kind":"module","full_name":"Cadmium::Phonetics::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Cadmium/Sentiment/StringExtension","kind":"module","full_name":"Cadmium::Sentiment::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Cadmium/Stemmer/StringExtension","kind":"module","full_name":"Cadmium::Stemmer::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Cadmium/Tokenizer/StringExtension","kind":"module","full_name":"Cadmium::Tokenizer::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Cadmium/Transliterator/StringExtension","kind":"module","full_name":"Cadmium::Transliterator::StringExtension","name":"StringExtension"},{"html_id":"github.com/watzon/cadmium/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nString might end up being conformed of bytes which are an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but\ninvalid byte sequences, when asked as chars, will use the unicode replacement\nchar (value 0xFFFD). For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['�', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}})